{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HOME","text":"<p>Welcome to the docki Github page</p> <p>Go back to docki.io page</p> <p>What do U mean about knowledge transfert ?</p> <p>Let's having fun, and <code>#RTFM</code> !</p> <p>U should select find U'r plaisir into the nav bar on the left</p> <p>Don't forget, U should add the search section as your search engine</p>"},{"location":"cloud/aws/","title":"Amazon Web Services","text":"<p>Here are somes aws tips &amp; tricks</p>"},{"location":"cloud/aws/#lexique","title":"L\u00e9xique","text":"<ul> <li>AMI : Amazon Machine Images (template)</li> </ul> <p>in progress..</p>"},{"location":"cloud/aws/#devops-implementing-development-processes","title":"DevOps Implementing Development Processes","text":""},{"location":"cloud/aws/#what-is-devops","title":"What is devOPS ?","text":"<p>\"DevOps is the unions of people, process and products to enable continuous of value to end users.\" -Donovan Brown</p>"},{"location":"cloud/aws/#products-suite","title":"Products suite","text":"<p>Azure DevOps is a suite of products that allows any organization to do better DevOps :</p> <ul> <li>Azure Board</li> <li> <p>Deliver Value to your users daster using proven agile tools to plan, and discuss work across your teams.</p> </li> <li> <p>Azure Pipelines</p> </li> <li> <p>Build, test, and deploy with CI/CD that works with any language, platform, and cloud. Connect to GitHub or any other Git provider and deploy continously</p> </li> <li> <p>Azure Repos</p> </li> <li> <p>Get unlimited, cloud-hosted private Git repos and collaborate to build better code with pull requests and advanced file management.</p> </li> <li> <p>Azure Test Plans</p> </li> <li> <p>Test and ship with confidence using manual and exploratory testing tools.</p> </li> <li> <p>Azure Artifacts</p> </li> <li> <p>Create, host and share packages with your team, and add artifacts to your CI/CD pipelines with a single click.</p> </li> <li> <p>Extensions Marketplace</p> </li> <li>Access extensions from Slack to SonarCloud to 1,000 other apps and services \u2013 built by the community.</li> </ul>"},{"location":"cloud/awx/","title":"Installing AWX","text":"<p>This document provides a guide for installing AWX.</p> <p>Main page : https://github.com/ansible/awx/blob/17.0.1/INSTALL.md</p>"},{"location":"cloud/awx/#getting-started","title":"Getting started","text":""},{"location":"cloud/awx/#clone-the-repo","title":"Clone the repo","text":"<p>If you have not already done so, you will need to clone, or create a local copy, of the AWX repo. We generally recommend that you view the releases page:</p> <p>https://github.com/ansible/awx/releases</p> <p>...and clone the latest stable release, e.g.,</p> <p><code>git clone -b x.y.z https://github.com/ansible/awx.git</code></p> <p>Please note that deploying from <code>HEAD</code> (or the latest commit) is not stable, and that if you want to do this, you should proceed at your own risk (also, see the section #official-vs-building-images for building your own image).</p> <p>For more on how to clone the repo, view git clone help.</p> <p>Once you have a local copy, run the commands in the following sections from the root of the project tree.</p>"},{"location":"cloud/awx/#awx-branding","title":"AWX branding","text":"<p>You can optionally install the AWX branding assets from the awx-logos repo. Prior to installing, please review and agree to the trademark guidelines.</p> <p>To install the assets, clone the <code>awx-logos</code> repo so that it is next to your <code>awx</code> clone. As you progress through the installation steps, you'll be setting variables in the inventory file. To include the assets in the build, set <code>awx_official=true</code>.</p>"},{"location":"cloud/awx/#prerequisites","title":"Prerequisites","text":"<p>Before you can run a deployment, you'll need the following installed in your local environment:</p> <ul> <li>Ansible Requires Version 2.8+</li> <li>Docker<ul> <li>A recent version</li> </ul> </li> <li>docker Python module<ul> <li>This is incompatible with <code>docker-py</code>. If you have previously installed <code>docker-py</code>, please uninstall it.</li> <li>We use this module instead of <code>docker-py</code> because it is what the <code>docker-compose</code> Python module requires.</li> </ul> </li> <li>community.general.docker_image collection<ul> <li>This is only required if you are using Ansible &gt;= 2.10</li> </ul> </li> <li>GNU Make</li> <li>Git Requires Version 1.8.4+</li> <li>Python 3.6+</li> <li>Node 14.x LTS version<ul> <li>This is only required if you're building your own container images with <code>use_container_for_build=false</code></li> </ul> </li> <li>NPM 6.x LTS<ul> <li>This is only required if you're building your own container images with <code>use_container_for_build=false</code></li> </ul> </li> </ul>"},{"location":"cloud/awx/#system-requirements","title":"System Requirements","text":"<p>The system that runs the AWX service will need to satisfy the following requirements</p> <ul> <li>At least 4GB of memory</li> <li>At least 2 cpu cores</li> <li>At least 20GB of space</li> <li>Running Docker, Openshift, or Kubernetes</li> <li>If you choose to use an external PostgreSQL database, please note that the minimum version is 10+.</li> </ul>"},{"location":"cloud/awx/#choose-a-deployment-platform","title":"Choose a deployment platform","text":"<p>We currently support running AWX as a containerized application using Docker images deployed to either an OpenShift cluster, a Kubernetes cluster, or docker-compose. The remainder of this document will walk you through the process of building the images, and deploying them to either platform.</p> <p>\u00d2You'll begin by setting variables in the inventory file according to the platform you wish to use, and then you'll start the image build and deployment process by running the playbook.</p> <p>In the sections below, you'll find deployment details and instructions for each platform: - OpenShift - Kubernetes - Docker Compose.</p>"},{"location":"cloud/awx/#official-vs-building-images","title":"Official vs Building Images","text":"<p>When installing AWX you have the option of building your own image or using the image provided on DockerHub (see awx)</p> <p>This is controlled by the following variables in the <code>inventory</code> file</p> <pre><code>dockerhub_base=ansible\ndockerhub_version=latest\n</code></pre> <p>If these variables are present then all deployments will use these hosted images. If the variables are not present then the images will be built during the install.</p> <p>dockerhub_base</p> <p>The base location on DockerHub where the images are hosted (by default this pulls a container image named <code>ansible/awx:tag</code>)</p> <p>dockerhub_version</p> <p>Multiple versions are provided. <code>latest</code> always pulls the most recent. You may also select version numbers at different granularities: 1, 1.0, 1.0.1, 1.0.0.123</p> <p>use_container_for_build</p> <p>Use a local distribution build container image for building the AWX package. This is helpful if you don't want to bother installing the build-time dependencies as it is taken care of already.</p>"},{"location":"cloud/awx/#upgrading-from-previous-versions","title":"Upgrading from previous versions","text":"<p>Upgrading AWX involves rerunning the install playbook. Download a newer release from https://github.com/ansible/awx/releases and re-populate the inventory file with your customized variables.</p> <p>For convenience, you can create a file called <code>vars.yml</code>:</p> <pre><code>admin_password: 'adminpass'\npg_password: 'pgpass'\nsecret_key: 'mysupersecret'\n</code></pre> <p>And pass it to the installer:</p> <pre><code>$ ansible-playbook -i inventory install.yml -e @vars.yml\n</code></pre>"},{"location":"cloud/awx/#openshift","title":"OpenShift","text":""},{"location":"cloud/awx/#prerequisites_1","title":"Prerequisites","text":"<p>To complete a deployment to OpenShift, you will need access to an OpenShift cluster. For demo and testing purposes, you can use Minishift to create a single node cluster running inside a virtual machine.</p> <p>When using OpenShift for deploying AWX make sure you have correct privileges to add the security context 'privileged', otherwise the installation will fail. The privileged context is needed because of the use of the bubblewrap tool to add an additional layer of security when using containers.</p> <p>You will also need to have the <code>oc</code> command in your PATH. The <code>install.yml</code> playbook will call out to <code>oc</code> when logging into, and creating objects on the cluster.</p> <p>The default resource requests per-deployment requires:</p> <p>Memory: 6GB CPU: 3 cores</p> <p>This can be tuned by overriding the variables found in /installer/roles/kubernetes/defaults/main.yml. Special care should be taken when doing this as undersized instances will experience crashes and resource exhaustion.</p> <p>For more detail on how resource requests are formed see: https://docs.openshift.com/container-platform/latest/dev_guide/compute_resources.html#dev-compute-resources</p>"},{"location":"cloud/awx/#pre-install-steps","title":"Pre-install steps","text":"<p>Before starting the install, review the inventory file, and uncomment and provide values for the following variables found in the <code>[all:vars]</code> section:</p> <p>openshift_host</p> <p>IP address or hostname of the OpenShift cluster. If you're using Minishift, this will be the value returned by <code>minishift ip</code>.</p> <p>openshift_skip_tls_verify</p> <p>Boolean. Set to True if using self-signed certs.</p> <p>openshift_project</p> <p>Name of the OpenShift project that will be created, and used as the namespace for the AWX app. Defaults to awx.</p> <p>openshift_user</p> <p>Username of the OpenShift user that will create the project, and deploy the application. Defaults to developer.</p> <p>openshift_pg_emptydir</p> <p>Boolean. Set to True to use an emptyDir volume when deploying the PostgreSQL pod. Note: This should only be used for demo and testing purposes.</p> <p>docker_registry</p> <p>IP address and port, or URL, for accessing a registry that the OpenShift cluster can access. Defaults to 172.30.1.1:5000, the internal registry delivered with Minishift. This is not needed if you are using official hosted images.</p> <p>docker_registry_repository</p> <p>Namespace to use when pushing and pulling images to and from the registry. Generally this will match the project name. It defaults to awx. This is not needed if you are using official hosted images.</p> <p>docker_registry_username</p> <p>Username of the user that will push images to the registry. Will generally match the openshift_user value. Defaults to developer. This is not needed if you are using official hosted images.</p>"},{"location":"cloud/awx/#deploying-to-minishift","title":"Deploying to Minishift","text":"<p>Install Minishift by following the installation guide.</p> <p>The recommended minimum resources for your Minishift VM:</p> <pre><code>$ minishift start --cpus=4 --memory=8GB\n</code></pre> <p>The Minishift VM contains a Docker daemon, which you can use to build the AWX images. This is generally the approach you should take, and we recommend doing so. To use this instance, run the following command to setup your environment:</p> <pre><code># Set DOCKER environment variable to point to the Minishift VM\n$ eval $(minishift docker-env)\n</code></pre> <p>Note</p> <p>If you choose to not use the Docker instance running inside the VM, and build the images externally, you will have to enable the OpenShift cluster to access the images. This involves pushing the images to an external Docker registry, and granting the cluster access to it, or exposing the internal registry, and pushing the images into it.</p>"},{"location":"cloud/awx/#postgresql","title":"PostgreSQL","text":"<p>By default, AWX will deploy a PostgreSQL pod inside of your cluster. You will need to create a Persistent Volume Claim which is named <code>postgresql</code> by default, and can be overridden by setting the <code>openshift_pg_pvc_name</code> variable. For testing and demo purposes, you may set <code>openshift_pg_emptydir=yes</code>.</p> <p>If you wish to use an external database, in the inventory file, set the value of <code>pg_hostname</code>, and update <code>pg_username</code>, <code>pg_password</code>, <code>pg_admin_password</code>, <code>pg_database</code>, and <code>pg_port</code> with the connection information. When setting <code>pg_hostname</code> the installer will assume you have configured the database in that location and will not launch the postgresql pod.</p>"},{"location":"cloud/awx/#run-the-installer","title":"Run the installer","text":"<p>To start the install, you will pass two extra variables on the command line. The first is openshift_password, which is the password for the openshift_user, and the second is docker_registry_password, which is the password associated with docker_registry_username.</p> <p>If you're using the OpenShift internal registry, then you'll pass an access token for the docker_registry_password value, rather than a password. The <code>oc whoami -t</code> command will generate the required token, as long as you're logged into the cluster via <code>oc cluster login</code>.</p> <p>Run the following command (docker_registry_password is optional if using official images):</p> <pre><code># Start the install\n$ ansible-playbook -i inventory install.yml -e openshift_password=developer  -e docker_registry_password=$(oc whoami -t)\n</code></pre>"},{"location":"cloud/awx/#post-install","title":"Post-install","text":"<p>After the playbook run completes, check the status of the deployment by running <code>oc get pods</code>:</p> <pre><code># View the running pods\n$ oc get pods\n\nNAME                   READY     STATUS    RESTARTS   AGE\nawx-3886581826-5mv0l   4/4       Running   0          8s\npostgresql-1-l85fh     1/1       Running   0          20m\n</code></pre> <p>In the above example, the name of the AWX pod is <code>awx-3886581826-5mv0l</code>. Before accessing the AWX web interface, setup tasks and database migrations need to complete. These tasks are running in the <code>awx_task</code> container inside the AWX pod. To monitor their status, tail the container's STDOUT by running the following command, replacing the AWX pod name with the pod name from your environment:</p> <pre><code># Follow the awx_task log output\n$ oc logs -f awx-3886581826-5mv0l -c awx-celery\n</code></pre> <p>You will see the following indicating that database migrations are running:</p> <pre><code>Using /etc/ansible/ansible.cfg as config file\n127.0.0.1 | SUCCESS =&gt; {\n\"changed\": false,\n    \"db\": \"awx\"\n}\nOperations to perform:\n  Synchronize unmigrated apps: solo, api, staticfiles, messages, channels, django_extensions, ui, rest_framework, polymorphic\n  Apply all migrations: sso, taggit, sessions, sites, kombu_transport_django, social_auth, contenttypes, auth, conf, main\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\n  Installing custom SQL...\nRunning migrations:\n  Rendering model states... DONE\n  Applying contenttypes.0001_initial... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0001_initial... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying taggit.0001_initial... OK\n  Applying taggit.0002_auto_20150616_2121... OK\n  ...\n</code></pre> <p>When you see output similar to the following, you'll know that database migrations have completed, and you can access the web interface:</p> <pre><code>Python 2.7.5 (default, Nov  6 2016, 00:28:07)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n\n&gt;&gt;&gt; &lt;User: admin&gt;\n&gt;&gt;&gt; Default organization added.\nDemo Credential, Inventory, and Job Template added.\nSuccessfully registered instance awx-3886581826-5mv0l\n(changed: True)\nCreating instance group tower\nAdded instance awx-3886581826-5mv0l to tower\n</code></pre> <p>Once database migrations complete, the web interface will be accessible.</p>"},{"location":"cloud/awx/#accessing-awx","title":"Accessing AWX","text":"<p>The AWX web interface is running in the AWX pod, behind the <code>awx-web-svc</code> service. To view the service, and its port value, run the following command:</p> <pre><code># View available services\n$ oc get services\n\nNAME          CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE\nawx-web-svc   172.30.111.74   &lt;nodes&gt;       8052:30083/TCP   37m\npostgresql    172.30.102.9    &lt;none&gt;        5432/TCP         38m\n</code></pre> <p>The deployment process creates a route, <code>awx-web-svc</code>, to expose the service. How the ingres is actually created will vary depending on your environment, and how the cluster is configured. You can view the route, and the external IP address and hostname assigned to it, by running the following command:</p> <pre><code># View available routes\n$ oc get routes\n\nNAME          HOST/PORT                             PATH      SERVICES      PORT      TERMINATION   WILDCARD\nawx-web-svc   awx-web-svc-awx.192.168.64.2.nip.io             awx-web-svc   http      edge/Allow    None\n</code></pre> <p>The above example is taken from a Minishift instance. From a web browser, use <code>https</code> to access the <code>HOST/PORT</code> value from your environment. Using the above example, the URL to access the server would be https://awx-web-svc-awx.192.168.64.2.nip.io.</p> <p>Once you access the AWX server, you will be prompted with a login dialog. The default administrator username is <code>admin</code>, and the password is <code>password</code>.</p>"},{"location":"cloud/awx/#kubernetes","title":"Kubernetes","text":""},{"location":"cloud/awx/#prerequisites_2","title":"Prerequisites","text":"<p>A Kubernetes deployment will require you to have access to a Kubernetes cluster as well as the following tools:</p> <ul> <li>kubectl</li> <li>helm</li> </ul> <p>The installation program will reference <code>kubectl</code> directly. <code>helm</code> is only necessary if you are letting the installer configure PostgreSQL for you.</p> <p>The default resource requests per-pod requires:</p> <p>Memory: 6GB CPU: 3 cores</p> <p>This can be tuned by overriding the variables found in /installer/roles/kubernetes/defaults/main.yml. Special care should be taken when doing this as undersized instances will experience crashes and resource exhaustion.</p> <p>For more detail on how resource requests are formed see: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</p>"},{"location":"cloud/awx/#pre-install-steps_1","title":"Pre-install steps","text":"<p>Before starting the install process, review the inventory file, and uncomment and provide values for the following variables found in the <code>[all:vars]</code> section uncommenting when necessary. Make sure the openshift and standalone docker sections are commented out:</p> <p>kubernetes_context</p> <p>Prior to running the installer, make sure you've configured the context for the cluster you'll be installing to. This is how the installer knows which cluster to connect to and what authentication to use</p> <p>kubernetes_namespace</p> <p>Name of the Kubernetes namespace where the AWX resources will be installed. This will be created if it doesn't exist</p> <p>docker_registry_</p> <p>These settings should be used if building your own base images. You'll need access to an external registry and are responsible for making sure your kube cluster can talk to it and use it. If these are undefined and the dockerhub_ configuration settings are uncommented then the images will be pulled from dockerhub instead</p>"},{"location":"cloud/awx/#configuring-helm","title":"Configuring Helm","text":"<p>If you want the AWX installer to manage creating the database pod (rather than installing and configuring postgres on your own). Then you will need to have a working <code>helm</code> installation, you can find details here: https://helm.sh/docs/intro/quickstart/.</p> <p>You do not need to create a Persistent Volume Claim as Helm does it for you. However, an existing one may be used by setting the <code>pg_persistence_existingclaim</code> variable.</p> <p>Newer Kubernetes clusters with RBAC enabled will need to make sure a service account is created, make sure to follow the instructions here https://helm.sh/docs/topics/rbac/</p>"},{"location":"cloud/awx/#run-the-installer_1","title":"Run the installer","text":"<p>After making changes to the <code>inventory</code> file use <code>ansible-playbook</code> to begin the install</p> <pre><code>$ ansible-playbook -i inventory install.yml\n</code></pre>"},{"location":"cloud/awx/#post-install_1","title":"Post-install","text":"<p>After the playbook run completes, check the status of the deployment by running <code>kubectl get pods --namespace awx</code> (replace awx with the namespace you used):</p> <pre><code># View the running pods, it may take a few minutes for everything to be marked in the Running state\n$ kubectl get pods --namespace awx\nNAME                             READY     STATUS    RESTARTS   AGE\nawx-2558692395-2r8ss             4/4       Running   0          29s\nawx-postgresql-355348841-kltkn   1/1       Running   0          1m\n</code></pre>"},{"location":"cloud/awx/#accessing-awx_1","title":"Accessing AWX","text":"<p>The AWX web interface is running in the AWX pod behind the <code>awx-web-svc</code> service:</p> <pre><code># View available services\n$ kubectl get svc --namespace awx\nNAME             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE\nawx-postgresql   ClusterIP   10.7.250.208   &lt;none&gt;        5432/TCP       2m\nawx-web-svc      NodePort    10.7.241.35    &lt;none&gt;        80:30177/TCP   1m\n</code></pre> <p>The deployment process creates an <code>Ingress</code> named <code>awx-web-svc</code> also. Some kubernetes cloud providers will automatically handle routing configuration when an Ingress is created others may require that you more explicitly configure it. You can see what kubernetes knows about things with:</p> <pre><code> kubectl get ing --namespace awx\nNAME          HOSTS     ADDRESS          PORTS     AGE\nawx-web-svc   *         35.227.x.y       80        3m\n</code></pre> <p>If your provider is able to allocate an IP Address from the Ingress controller then you can navigate to the address and access the AWX interface. For some providers it can take a few minutes to allocate and make this accessible. For other providers it may require you to manually intervene.</p>"},{"location":"cloud/awx/#ssl-termination","title":"SSL Termination","text":"<p>Unlike Openshift's <code>Route</code> the Kubernetes <code>Ingress</code> doesn't yet handle SSL termination. As such the default configuration will only expose AWX through HTTP on port 80. You are responsible for configuring SSL support until support is added (either to Kubernetes or AWX itself).</p>"},{"location":"cloud/awx/#docker-compose","title":"Docker-Compose","text":""},{"location":"cloud/awx/#prerequisites_3","title":"Prerequisites","text":"<ul> <li>Docker on the host where AWX will be deployed. After installing Docker, the Docker service must be started (depending on your OS, you may have to add the local user that uses Docker to the <code>docker</code> group, refer to the documentation for details)</li> <li>docker-compose Python module.<ul> <li>This also installs the <code>docker</code> Python module, which is incompatible with <code>docker-py</code>. If you have previously installed <code>docker-py</code>, please uninstall it.</li> </ul> </li> <li>Docker Compose.</li> </ul>"},{"location":"cloud/awx/#pre-install-steps_2","title":"Pre-install steps","text":""},{"location":"cloud/awx/#deploying-to-a-remote-host","title":"Deploying to a remote host","text":"<p>By default, the delivered installer/inventory file will deploy AWX to the local host. It is possible, however, to deploy to a remote host. The installer/install.yml playbook can be used to build images on the local host, and ship the built images to, and run deployment tasks on, a remote host. To do this, modify the installer/inventory file, by commenting out <code>localhost</code>, and adding the remote host.</p> <p>For example, suppose you wish to build images locally on your CI/CD host, and deploy them to a remote host named awx-server. To do this, add awx-server to the installer/inventory file, and comment out or remove <code>localhost</code>, as demonstrated by the following:</p> <pre><code># localhost ansible_connection=local\nawx-server\n\n[all:vars]\n...\n</code></pre> <p>In the above example, image build tasks will be delegated to <code>localhost</code>, which is typically where the clone of the AWX project exists. Built images will be archived, copied to remote host, and imported into the remote Docker image cache. Tasks to start the AWX containers will then execute on the remote host.</p> <p>If you choose to use the official images then the remote host will be the one to pull those images.</p> <p>Note</p> <p>You may also want to set additional variables to control how Ansible connects to the host. For more information about this, view Behavioral Inventory Parameters.</p> <p>As mentioned above, in Prerequisites, the prerequisites are required on the remote host.</p> <p>When deploying to a remote host, the playbook does not execute tasks with the <code>become</code> option. For this reason, make sure the user that connects to the remote host has privileges to run the <code>docker</code> command. This typically means that non-privileged users need to be part of the <code>docker</code> group.</p>"},{"location":"cloud/awx/#inventory-variables","title":"Inventory variables","text":"<p>Before starting the install process, review the inventory file, and uncomment and provide values for the following variables found in the <code>[all:vars]</code> section:</p> <p>postgres_data_dir</p> <p>If you're using the default PostgreSQL container (see PostgreSQL below), provide a path that can be mounted to the container, and where the database can be persisted.</p> <p>host_port</p> <p>Provide a port number that can be mapped from the Docker daemon host to the web server running inside the AWX container. If undefined no port will be exposed. Defaults to 80.</p> <p>host_port_ssl</p> <p>Provide a port number that can be mapped from the Docker daemon host to the web server running inside the AWX container for SSL support. If undefined no port will be exposed. Defaults to 443, only works if you also set <code>ssl_certificate</code> (see below).</p> <p>ssl_certificate</p> <p>Optionally, provide the path to a file that contains a certificate and its private key. This needs to be a .pem-file</p> <p>docker_compose_dir</p> <p>When using docker-compose, the <code>docker-compose.yml</code> file will be created there (default <code>~/.awx/awxcompose</code>).</p> <p>custom_venv_dir</p> <p>Adds the custom venv environments from the local host to be passed into the containers at install.</p> <p>ca_trust_dir</p> <p>If you're using a non trusted CA, provide a path where the untrusted Certs are stored on your Host.</p>"},{"location":"cloud/awx/#docker-registry","title":"Docker registry","text":"<p>If you wish to tag and push built images to a Docker registry, set the following variables in the inventory file:</p> <p>docker_registry</p> <p>IP address and port, or URL, for accessing a registry.</p> <p>docker_registry_repository</p> <p>Namespace to use when pushing and pulling images to and from the registry. Defaults to awx.</p> <p>docker_registry_username</p> <p>Username of the user that will push images to the registry. Defaults to developer.</p> <p>Note</p> <p>These settings are ignored if using official images</p>"},{"location":"cloud/awx/#proxy-settings","title":"Proxy settings","text":"<p>http_proxy</p> <p>IP address and port, or URL, for using an http_proxy.</p> <p>https_proxy</p> <p>IP address and port, or URL, for using an https_proxy.</p> <p>no_proxy</p> <p>Exclude IP address or URL from the proxy.</p>"},{"location":"cloud/awx/#postgresql_1","title":"PostgreSQL","text":"<p>AWX requires access to a PostgreSQL database, and by default, one will be created and deployed in a container, and data will be persisted to a host volume. In this scenario, you must set the value of <code>postgres_data_dir</code> to a path that can be mounted to the container. When the container is stopped, the database files will still exist in the specified path.</p> <p>If you wish to use an external database, in the inventory file, set the value of <code>pg_hostname</code>, and update <code>pg_username</code>, <code>pg_password</code>, <code>pg_admin_password</code>, <code>pg_database</code>, and <code>pg_port</code> with the connection information.</p>"},{"location":"cloud/awx/#run-the-installer_2","title":"Run the installer","text":"<p>If you are not pushing images to a Docker registry, start the install by running the following:</p> <pre><code># Set the working directory to installer\n$ cd installer\n\n# Run the Ansible playbook\n$ ansible-playbook -i inventory install.yml\n</code></pre> <p>If you're pushing built images to a repository, then use the <code>-e</code> option to pass the registry password as follows, replacing password with the password of the username assigned to <code>docker_registry_username</code> (note that you will also need to remove <code>dockerhub_base</code> and <code>dockerhub_version</code> from the inventory file):</p> <pre><code># Set the working directory to installer\n$ cd installer\n\n# Run the Ansible playbook\n$ ansible-playbook -i inventory -e docker_registry_password=password install.yml\n</code></pre>"},{"location":"cloud/awx/#post-install_2","title":"Post-install","text":"<p>After the playbook run completes, Docker starts a series of containers that provide the services that make up AWX.  You can view the running containers using the <code>docker ps</code> command.</p> <p>If you're deploying using Docker Compose, container names will be prefixed by the name of the folder where the docker-compose.yml file is created (by default, <code>awx</code>).</p> <p>Immediately after the containers start, the awx_task container will perform required setup tasks, including database migrations. These tasks need to complete before the web interface can be accessed. To monitor the progress, you can follow the container's STDOUT by running the following:</p> <pre><code># Tail the awx_task log\n$ docker logs -f awx_task\n</code></pre> <p>You will see output similar to the following:</p> <pre><code>Using /etc/ansible/ansible.cfg as config file\n127.0.0.1 | SUCCESS =&gt; {\n\"changed\": false,\n    \"db\": \"awx\"\n}\nOperations to perform:\n  Synchronize unmigrated apps: solo, api, staticfiles, messages, channels, django_extensions, ui, rest_framework, polymorphic\n  Apply all migrations: sso, taggit, sessions, sites, kombu_transport_django, social_auth, contenttypes, auth, conf, main\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\n  Installing custom SQL...\nRunning migrations:\n  Rendering model states... DONE\n  Applying contenttypes.0001_initial... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0001_initial... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying taggit.0001_initial... OK\n  Applying taggit.0002_auto_20150616_2121... OK\n  Applying main.0001_initial... OK\n...\n</code></pre> <p>Once migrations complete, you will see the following log output, indicating that migrations have completed:</p> <pre><code>Python 2.7.5 (default, Nov  6 2016, 00:28:07)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n\n&gt;&gt;&gt; &lt;User: admin&gt;\n&gt;&gt;&gt; Default organization added.\nDemo Credential, Inventory, and Job Template added.\nSuccessfully registered instance awx\n(changed: True)\nCreating instance group tower\nAdded instance awx to tower\n(changed: True)\n...\n</code></pre>"},{"location":"cloud/awx/#accessing-awx_2","title":"Accessing AWX","text":"<p>The AWX web server is accessible on the deployment host, using the host_port value set in the inventory file. The default URL is http://localhost.</p> <p>You will prompted with a login dialog. The default administrator username is <code>admin</code>, and the password is <code>password</code>.</p>"},{"location":"cloud/awx/#installing-the-awx-cli","title":"Installing the AWX CLI","text":"<p><code>awx</code> is the official command-line client for AWX.  It:</p> <ul> <li>Uses naming and structure consistent with the AWX HTTP API</li> <li>Provides consistent output formats with optional machine-parsable formats</li> <li>To the extent possible, auto-detects API versions, available endpoints, and   feature support across multiple versions of AWX.</li> </ul> <p>Potential uses include:</p> <ul> <li>Configuring and launching jobs/playbooks</li> <li>Checking on the status and output of job runs</li> <li>Managing objects like organizations, users, teams, etc...</li> </ul> <p>The preferred way to install the AWX CLI is through pip directly from PyPI:</p> <pre><code>pip3 install awxkit\nawx --help\n</code></pre>"},{"location":"cloud/awx/#building-the-cli-documentation","title":"Building the CLI Documentation","text":"<p>To build the docs, spin up a real AWX server, <code>pip3 install sphinx sphinxcontrib-autoprogram</code>, and run:</p> <pre><code>~ cd awxkit/awxkit/cli/docs\n~ TOWER_HOST=https://awx.example.org TOWER_USERNAME=example TOWER_PASSWORD=secret make clean html\n~ cd build/html/ &amp;&amp; python -m http.server\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ..\n</code></pre>"},{"location":"cloud/az-104/","title":"Microsoft Azure Administrator","text":"<p>Pr\u00e9requis pour les administrateurs Azure</p>"},{"location":"cloud/az-104/#blob-storage","title":"Blob Storage","text":"<p>Azure Blob Storage is Microsoft's object storage solution for the cloud. Blob Storage is optimized for storing massive amounts of unstructured data. Unstructured data is data that doesn't adhere to a particular data model or definition, such as text or binary data.</p> <p>Blob Storage is designed for:</p> <ul> <li>Serving images or documents directly to a browser.</li> <li>Storing files for distributed access.</li> <li>Streaming video and audio.</li> <li>Writing to log files.</li> <li>Storing data for backup and restore, disaster recovery, and archiving.</li> <li>Storing data for analysis by an on-premises or Azure-hosted service.</li> </ul>"},{"location":"cloud/az-104/#azure-command-line-interface-cli","title":"Azure Command-Line Interface (CLI)","text":"<p>https://learn.microsoft.com/en-us/cli/azure/</p>"},{"location":"cloud/az-104/#azure-powershell","title":"Azure PowerShell","text":"<p>https://learn.microsoft.com/en-us/powershell/module/az.compute/new-azvm?view=azps-9.4.0</p> <p>The New-AzVM cmdlet creates a virtual machine in Azure.This cmdlet takes a virtual machine object as input.The New-AzVM cmdlet will create a new storage account for boot diagnostics if one does not already exist.</p> <p>Use the New-AzVMConfig cmdlet to create a virtual machine object. Then use the following cmdlets to set different properties of the virtual machine object:</p> <ul> <li>Add-AzVMNetworkInterface to set the network profile.</li> <li>Set-AzVMOperatingSystem to set the OS profile.</li> <li>Set-AzVMSourceImage to set the source image.</li> <li>Set-AzVMOSDisk to set the OS disk(storage profile).</li> <li>Get-AzComputeResourceSku can also be used to find out available virtual machine sizes for your subscription and region.</li> </ul> <p>The <code>SimpleParameterSet</code> provides a convenient method to create a VM by making common VM creation arguments optional.</p> <p>See Quickstart: Create a Windows virtual machine in Azure with PowerShell for tutorial.</p> <p>Syntax :</p> <pre><code>New-AzVM\n   [[-ResourceGroupName] &lt;String&gt;]\n   [[-Location] &lt;String&gt;]\n   [-EdgeZone &lt;String&gt;]\n   [[-Zone] &lt;String[]&gt;]\n   [-PublicIpSku &lt;String&gt;]\n   -Name &lt;String&gt;\n   -Credential &lt;PSCredential&gt;\n   [-NetworkInterfaceDeleteOption &lt;String&gt;]\n   [-VirtualNetworkName &lt;String&gt;]\n   [-AddressPrefix &lt;String&gt;]\n   [-SubnetName &lt;String&gt;]\n   [-SubnetAddressPrefix &lt;String&gt;]\n   [-PublicIpAddressName &lt;String&gt;]\n   [-DomainNameLabel &lt;String&gt;]\n   [-AllocationMethod &lt;String&gt;]\n   [-SecurityGroupName &lt;String&gt;]\n   [-OpenPorts &lt;Int32[]&gt;]\n   [-Image &lt;String&gt;]\n   [-Size &lt;String&gt;]\n   [-AvailabilitySetName &lt;String&gt;]\n   [-SystemAssignedIdentity]\n   [-UserAssignedIdentity &lt;String&gt;]\n   [-AsJob]\n   [-OSDiskDeleteOption &lt;String&gt;]\n   [-DataDiskSizeInGb &lt;Int32[]&gt;]\n   [-DataDiskDeleteOption &lt;String&gt;]\n   [-EnableUltraSSD]\n   [-ProximityPlacementGroupId &lt;String&gt;]\n   [-HostId &lt;String&gt;]\n   [-VmssId &lt;String&gt;]\n   [-Priority &lt;String&gt;]\n   [-EvictionPolicy &lt;String&gt;]\n   [-MaxPrice &lt;Double&gt;]\n   [-EncryptionAtHost]\n   [-HostGroupId &lt;String&gt;]\n   [-SshKeyName &lt;String&gt;]\n   [-GenerateSshKey]\n   [-CapacityReservationGroupId &lt;String&gt;]\n   [-UserData &lt;String&gt;]\n   [-ImageReferenceId &lt;String&gt;]\n   [-PlatformFaultDomain &lt;Int32&gt;]\n   [-HibernationEnabled]\n   [-vCPUCountAvailable &lt;Int32&gt;]\n   [-vCPUCountPerCore &lt;Int32&gt;]\n   [-DiskControllerType &lt;String&gt;]\n   [-DefaultProfile &lt;IAzureContextContainer&gt;]\n   [-WhatIf]\n   [-Confirm]\n   [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"cloud/az-104/#example","title":"Example","text":""},{"location":"cloud/az-104/#create-a-virtual-machine","title":"Create a virtual machine","text":"<pre><code>New-AzVM -Name MyVm -Credential (Get-Credential)\n\nVERBOSE: Use 'mstsc /v:myvm-222222.eastus.cloudapp.azure.com' to connect to the VM.\n\nResourceGroupName        : MyVm\nId                       : /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyVm/provi\nders/Microsoft.Compute/virtualMachines/MyVm\nVmId                     : 11111111-1111-1111-1111-111111111111\nName                     : MyVm\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : myvm-222222.eastus.cloudapp.azure.com\n</code></pre>"},{"location":"cloud/az-104/#utiliser-azure-resource-manager","title":"Utiliser Azure Resource Manager","text":""},{"location":"cloud/az-104/#terminology","title":"Terminology","text":"<p>If you're new to Azure Resource Manager, there are some terms you might not be familiar with.</p> <ul> <li>resource - A manageable item that is available through Azure.Virtual machines, storage accounts, web apps, databases, and virtual networks are examples of resources.Resource groups, subscriptions, management groups, and tags are also examples of resources.</li> <li>resource group - A container that holds related resources for an Azure solution.The resource group includes those resources that you want to manage as a group.You decide which resources belong in a resource group based on what makes the most sense for your organization.See Resource groups.</li> <li>resource provider - A service that supplies Azure resources.For example, a common resource provider is <code>Microsoft.Compute</code>, which supplies the virtual machine resource.<code>Microsoft.Storage</code> is another common resource provider.See Resource providers and types.</li> <li>declarative syntax - Syntax that lets you state \"Here's what I intend to create\" without having to write the sequence of programming commands to create it.ARM templates and Bicep files are examples of declarative syntax.In those files, you define the properties for the infrastructure to deploy to Azure.</li> <li>ARM template - A JavaScript Object Notation (JSON) file that defines one or more resources to deploy to a resource group, subscription, management group, or tenant.The template can be used to deploy the resources consistently and repeatedly.See Template deployment overview.</li> <li>Bicep file - A file for declaratively deploying Azure resources.Bicep is a language that's been designed to provide the best authoring experience for infrastructure as code solutions in Azure.See Bicep overview.</li> </ul> <p>For more definitions of Azure terminology, see Azure fundamental concepts.</p>"},{"location":"cloud/az-104/#couche-de-gestion-coherente","title":"Couche de gestion coh\u00e9rente","text":"<p>Azure Resource Manager offre plusieurs avantages\u00a0:</p> <ul> <li>Vous pouvez d\u00e9ployer, g\u00e9rer et surveiller toutes les ressources de votre solution comme un groupe, plut\u00f4t que de les g\u00e9rer individuellement.</li> <li>Vous pouvez d\u00e9ployer votre solution \u00e0 plusieurs reprises tout au long du cycle de vie de d\u00e9veloppement et avoir ainsi l\u2019assurance que vos ressources pr\u00e9sentent un \u00e9tat coh\u00e9rent lors de leur d\u00e9ploiement.</li> <li>Vous pouvez g\u00e9rer votre infrastructure \u00e0 l\u2019aide de mod\u00e8les d\u00e9claratifs plut\u00f4t que de scripts.</li> <li>Vous pouvez d\u00e9finir les d\u00e9pendances entre les ressources afin de les d\u00e9ployer dans le bon ordre.</li> <li>Vous pouvez appliquer le contr\u00f4le d\u2019acc\u00e8s \u00e0 tous les services dans votre groupe de ressources, car le contr\u00f4le d\u2019acc\u00e8s en fonction du r\u00f4le (RBAC) est int\u00e9gr\u00e9 en mode natif \u00e0 la plateforme de gestion.</li> <li>Vous pouvez appliquer des balises aux ressources pour organiser logiquement toutes les ressources de votre abonnement.</li> <li>Vous pouvez clarifier la facturation de votre organisation en affichant les co\u00fbts d\u2019un groupe de ressources partageant la m\u00eame balise.</li> </ul>"},{"location":"cloud/az-104/#fournisseurs-de-ressources","title":"Fournisseurs de ressources","text":"<p>Chaque fournisseur de ressources propose un ensemble de ressources et d\u2019op\u00e9rations permettant de g\u00e9rer un service Azure.Par exemple, si vous voulez stocker des cl\u00e9s et des secrets, vous utilisez le fournisseur de ressources Microsoft.KeyVault.Ce fournisseur de ressources offre un type de ressource appel\u00e9 vaults pour cr\u00e9er le coffre de cl\u00e9s.</p> <p>Le nom d\u2019un type de ressource est au format\u00a0: {fournisseur de ressources}/{type de ressource}.Par exemple, le type de coffre de cl\u00e9s est Microsoft.KeyVault\\vaults.</p>"},{"location":"cloud/az-104/#groupes-de-ressources","title":"Groupes de ressources","text":"<p>Dans leur forme la plus simple, les groupes de ressources sont un regroupement logique de ressources.Il existe quelques r\u00e8gles pour les groupes de ressources.</p> <ul> <li>Les ressources peuvent appartenir \u00e0 un seul groupe de ressources \u00e0 la fois.</li> <li>Les groupes de ressources ne peuvent pas \u00eatre renomm\u00e9s.</li> <li>Les groupes de ressources peuvent avoir des ressources de types diff\u00e9rents (services).</li> <li>Les groupes de ressources peuvent avoir des ressources provenant de diff\u00e9rentes r\u00e9gions.</li> </ul> <pre><code>En attribuant des autorisations d\u2019\u00e9tendue \u00e0 un groupe de ressources, vous pouvez ajouter/supprimer et modifier des ressources facilement sans avoir \u00e0 recr\u00e9er les attributions et les \u00e9tendues.\n</code></pre>"},{"location":"cloud/az-104/#verrous","title":"Verrous","text":"<p>Les verrous Resource Manager permettent aux organisations de mettre en place une structure qui emp\u00eache la suppression accidentelle des ressources dans Azure.</p> <ul> <li>Vous pouvez associer le verrou \u00e0 un abonnement, \u00e0 un groupe de ressources ou \u00e0 une ressource.</li> <li>Les ressources enfants h\u00e9ritent des verrous.</li> </ul> <p>Il existe deux types de verrous de ressource.</p> <ul> <li>Verrous en lecture seule, qui emp\u00eachent toute modification apport\u00e9e \u00e0 la ressource.</li> <li>Verrous de suppression, qui emp\u00eachent la suppression.</li> </ul>"},{"location":"cloud/az-104/#manage-groups","title":"Manage groups","text":"<p>Utilisation de [[#Azure PowerShell|PowerShell]] pour supprimer des groups de ressources</p> <pre><code>Remove-AzResourceGroup -Name \"ContosoRG01\"\n</code></pre>"},{"location":"cloud/az-104/#conclusion","title":"Conclusion","text":"<p>Documentation Azure Resource Manager</p> <p>Azure Resource Manager est le service de d\u00e9ploiement et de gestion d\u2019Azure.Il fournit une couche de gestion qui vous permet de cr\u00e9er, de mettre \u00e0 jour et de supprimer des ressources dans votre compte Azure.Vous utilisez des fonctionnalit\u00e9s de gestion, telles que le contr\u00f4le d\u2019acc\u00e8s, les verrous et les \u00e9tiquettes, pour s\u00e9curiser et organiser vos ressources apr\u00e8s le d\u00e9ploiement.</p> <ul> <li>Identifier les fonctionnalit\u00e9s et les cas d\u2019usage Azure Resource Manager.</li> <li>D\u00e9crire chaque composant Azure Resource Manager et son utilisation.</li> <li>Organiser vos ressources Azure avec des groupes de ressources.</li> <li>Appliquer des verrous Azure Resource Manager.</li> <li>D\u00e9placer des ressources Azure entre des groupes, des abonnements et des r\u00e9gions.</li> <li>Supprimer des ressources et des groupes de ressources.</li> <li>Appliquer et suivre les limites des ressources.</li> </ul>"},{"location":"cloud/az-104/#templates","title":"Templates","text":"<p>Some templates provide everything you need to deploy your solution, while others might serve as a starting point for your template. Either way, you can study these templates to learn how to best author and structure your own templates.</p> <ul> <li>The README.md file provides an overview of what the template does.</li> <li>The azuredeploy.json file defines the resources that will be deployed.</li> <li>The azuredeploy.parameters.json file provides the values the template needs.</li> </ul> <p>Template based on a JavaScript Object Notation (JSON) file that defines the infrastructure and configuration for the deployment.</p> <p>Azure Resource Manager won't make any changes to the deployed resources in case of the same template is run a second time.</p>"},{"location":"cloud/az-104/#bicep","title":"Bicep","text":"<p>Azure Bicep is a domain-specific language (DSL) that uses declarative syntax to deploy Azure resources.It provides concise syntax, reliable type safety, and support for code reuse.</p> <p>You can use Bicep instead of JSON to develop your Azure Resource Manager templates (ARM templates).The JSON syntax to create an ARM template can be verbose and require complicated expressions.Bicep syntax reduces that complexity and improves the development experience.Bicep is a transparent abstraction over ARM template JSON and doesn't lose any of the JSON template capabilities.</p> <p>Bicep provides many improvements over JSON for template authoring, including:</p> <ul> <li> <p>Simpler syntax: Bicep provides a simpler syntax for writing templates.You can reference parameters and variables directly, without using complicated functions.String interpolation is used in place of concatenation to combine values for names and other items.You can reference the properties of a resource directly by using its symbolic name instead of complex reference statements.These syntax improvements help both with authoring and reading Bicep templates.</p> </li> <li> <p>Modules: You can break down complex template deployments into smaller module files and reference them in a main template.These modules provide easier management and greater reusability.</p> </li> <li>Automatic dependency management: In most situations, Bicep automatically detects dependencies between your resources.This process removes some of the work involved in template authoring.</li> <li>Type validation and IntelliSense: The Bicep extension for Visual Studio Code features rich validation and IntelliSense for all Azure resource type API definitions.This feature helps provide an easier authoring experience.</li> </ul>"},{"location":"cloud/az-104/#conclusion_1","title":"Conclusion","text":"<p>To implement infrastructure as code for your Azure solutions, use Azure Resource Manager templates. The template is a JavaScript Object Notation (JSON) file that defines the infrastructure and configuration for your project. The template uses declarative syntax, which lets you state what you intend to deploy without having to write the sequence of programming commands to create it. In the template, you specify the resources to deploy and the properties for those resources.</p> <p>You should now be able to:</p> <ul> <li>List the advantages of Azure templates.</li> <li>Identify the Azure template schema components.</li> <li>Specify Azure template parameters.</li> <li>Locate and use Azure Quickstart Templates.</li> </ul>"},{"location":"cloud/az-104/#automate-azure-tasks-using-scripts-with-powershell","title":"Automate Azure tasks using scripts with PowerShell","text":"<p>How to manage powershell azure ressource thanks to scripts ?</p>"},{"location":"cloud/az-104/#cmdlets-command-let","title":"Cmdlets (\"command-let\")","text":"<p>A PowerShell command is called a cmdlet (pronounced \"command-let\"). A cmdlet is a command that manipulates a single feature.</p> <p>The term cmdlet refers to a \u201csmall command\u201d. By convention, cmdlet authors are encouraged to create simple, single-function cmdlets.</p> <pre><code>Get-Help -Name Get-ChildItem -Detailed\n</code></pre>"},{"location":"cloud/az-104/#modules","title":"Modules","text":"<p>Cmdlets are delivered in modules. A PowerShell module is a DLL that includes code to process each available cmdlet.</p> <p>You load cmdlets into PowerShell by loading the module that contains them.</p> <p>You can get the list of loaded modules using the Get-Module command:</p> <pre><code>Get-Module\n</code></pre>"},{"location":"cloud/az-104/#az-powershell","title":"Az PowerShell","text":"<p>This module is available from dthe main global repository named PowerShell Gallery. <code>Install-Module</code> cmdlets will be use.</p> <p>Install <code>Az</code> from the PSGallery (PowerShell Gallery) :</p> <pre><code>Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force\n</code></pre> <p>Update the module :</p> <pre><code>Update-Module -Name Az\n</code></pre>"},{"location":"cloud/az-104/#connect-to-az","title":"Connect to Az","text":"<p>This command will prompt on your browser login page</p> <pre><code>Connect-AzAccount\n</code></pre>"},{"location":"cloud/az-104/#subscriptions","title":"Subscriptions","text":"<p>Modify the subscription :</p> <pre><code>Set-AzContext -Subscription '00000000-0000-0000-0000-000000000000'\n</code></pre>"},{"location":"cloud/az-104/#manage-ressource-group","title":"Manage ressource group","text":"<p>List current ressource group</p> <pre><code>Get-AzResourceGroup\n</code></pre> <p>Formalize it by the Format-Table cmdlet</p> <pre><code>Get-AzResourceGroup | Format-Table\n</code></pre> <p>Example :</p> <pre><code>ResourceGroupName                  Location       ProvisioningState Tags TagsTable ResourceId\n-----------------                --------     ----------------- ---- --------- ----------\ncloud-shell-storage-southcentralus southcentralus Succeeded                        /subscriptions/00000000-0000-0000...\nExerciseResources                  eastus         Succeeded                        /subscriptions/00000000-0000-0000...\n</code></pre> <p>Create ressource :</p> <pre><code>New-AzResourceGroup -Name &lt;name&gt; -Location &lt;location&gt;\n</code></pre>"},{"location":"cloud/az-104/#control-azure-services-with-the-cli","title":"Control Azure services with the CLI","text":"<p>Azure\u00a0CLI vous permet de contr\u00f4ler presque tous les aspects de chaque ressource Azure.Vous pouvez travailler avec des groupes de ressources, du stockage, des machines virtuelles, Azure Active Directory (Azure\u00a0AD), des conteneurs, l\u2019apprentissage automatique, etc.</p> <p>Les commandes de l\u2019interface CLI sont structur\u00e9es en groupes et sous-groupes.Chaque groupe repr\u00e9sente un service fourni par Azure, et les sous-groupes s\u00e9parent les commandes pour ces services en regroupements logiques.Par exemple, le groupe <code>storage</code> contient des sous-groupes, dont account, blob et queue.</p>"},{"location":"cloud/az-104/#installation","title":"Installation","text":"<p>Install <code>azure-cli</code> (for mac)</p> <pre><code>brew install azure-cli\n</code></pre> <pre><code>az --version\n</code></pre>"},{"location":"cloud/az-104/#create-ressource","title":"Create ressource","text":"<p>1.Connection</p> <pre><code> az login\n ```\n\n2.Create\n\nCreate ressource group first :\n\n```cli\naz group create --name &lt;name&gt; --location &lt;location&gt;\n</code></pre> <pre><code>You don't need to create a resource group when using the free Azure Sandbox.Instead, you'll use a previously created resource group.\n</code></pre> <p>3.Check</p> <p>List group.s</p> <pre><code>az group list\n</code></pre> <pre><code>You can use the Copy button to copy commands to the clipboard.\n\nTo paste, right-click on a new line in the Cloud Shell terminal and select Paste or use the keyboard shortcut Shift+Insert (\u2318+V on macOS).\n</code></pre>"},{"location":"cloud/az-104/#summary","title":"Summary","text":"<p>Azure CLI is a good choice for anyone new to using the Azure command line and scripting.The simplicity of its syntax and its cross-platform compatibility help reduce the risk of errors related to the execution of regular and repetitive tasks.In this module, you used Azure CLI commands to create a resource group and deploy a web application using a small set of commands.These commands could be combined into a shell script as part of an automation solution.</p>"},{"location":"cloud/az-104/#deploy-azure-infrastructure-using-json-arm-templates","title":"Deploy Azure Infrastructure using JSON ARM Templates","text":"<p>In this unit, you learn about using Azure Resource Manager templates (ARM templates) to implement infrastructure as code.You survey the sections of an ARM template, learn how to deploy your ARM template to Azure, and delve into detail on the resources section of the ARM template.</p> <ul> <li>implement an JSON ARM template by using Visual Studio Code.</li> <li>Declare resources and add flexibility to your template by adding parameters and outputs.</li> </ul>"},{"location":"cloud/az-104/#what-is-infrastructure-as-code","title":"What is infrastructure as code?","text":"<p>Infrastructure as code enables you to describe, through code, the infrastructure that you need for your application.</p> <p>With infrastructure as code, you can maintain both your application code and everything you need to deploy your application in a central code repository.The advantages to infrastructure as code are:</p> <ul> <li>Consistent configurations</li> <li>Improved scalability</li> <li>Faster deployments</li> <li>Better traceability</li> </ul>"},{"location":"cloud/az-104/#what-is-an-arm-template","title":"What is an ARM template?","text":"<p>ARM templates are JavaScript Object Notation (JSON) files that define the infrastructure and configuration for your deployment.The template uses a declarative syntax.The declarative syntax is a way of building the structure and elements that outline what resources will look like without describing its control flow.Declarative syntax is different than imperative syntax, which uses commands for the computer to perform.Imperative scripting focuses on specifying each step in deploying the resources.</p> <p>ARM templates allow you to declare what you intend to deploy without having to write the sequence of programming commands to create it.In an ARM template, you specify the resources and the properties for those resources.Then Azure Resource Manager uses that information to deploy the resources in an organized and consistent manner.</p> <p>![[Pasted image 20230223152543.png]]</p> <p>Resource Manager also has built-in validation.It checks the template before starting the deployment to make sure the deployment will succeed.</p>"},{"location":"cloud/az-104/#arm-template-file-structure","title":"ARM template file structure","text":"<p>When writing an ARM template, you need to understand all the parts that make up the template and what they do.ARM template files are made up of the following elements:</p> <p>Element</p> <p>Description</p> <p>schema</p> <p>A required section that defines the location of the JSON schema file that describes the structure of JSON data.The version number you use depends on the scope of the deployment and your JSON editor.</p> <p>contentVersion</p> <p>A required section that defines the version of your template (such as 1.0.0.0).You can use this value to document significant changes in your template to ensure you're deploying the right template.</p> <p>apiProfile</p> <p>An optional section that defines a collection of API versions for resource types.You can use this value to avoid having to specify API versions for each resource in the template.</p> <p>parameters</p> <p>An optional section where you define values that are provided during deployment.These values can be provided by a parameter file, by command-line parameters, or in the Azure portal.</p> <p>variables</p> <p>An optional section where you define values that are used to simplify template language expressions.</p> <p>functions</p> <p>An optional section where you can define user-defined functions that are available within the template.User-defined functions can simplify your template when complicated expressions are used repeatedly in your template.</p> <p>resources</p> <p>A required section that defines the actual items you want to deploy or update in a resource group or a subscription.</p> <p>output</p> <p>An optional section where you specify the values that will be returned at the end of the deployment.</p>"},{"location":"cloud/az-104/#reference","title":"Reference","text":"<ul> <li>https://learn.microsoft.com/fr-fr/training/paths/az-104-administrator-prerequisites/</li> </ul>"},{"location":"cloud/azure/","title":"Microsoft Azure","text":""},{"location":"cloud/azure/#journalisation-a-laide-dazure-cli","title":"Journalisation \u00e0 l\u2019aide d\u2019Azure CLI","text":"<p>La version actuelle d\u2019Azure CLI ne vous permet pas de g\u00e9rer la journalisation des applications dans Stockage Blob.</p>"},{"location":"cloud/azure/#activer","title":"Activer","text":"<p>Pour activer la journalisation des applications dans le syst\u00e8me de fichiers, ex\u00e9cutez cette commande :</p> <pre><code>az webapp log config --application-logging true --level verbose --name &lt;app-name&gt; --resource-group &lt;resource-group-name&gt;\n</code></pre> <p>Par exemple, pour activer la journalisation dans le syst\u00e8me de fichiers pour une application appel\u00e9e contosofashions123 en capturant tous les messages, ex\u00e9cutez cette commande.</p> <pre><code>az webapp log config --application-logging true --level verbose --name contosofashions123 --resource-group contosofashionsRG\n</code></pre> <p>Il n\u2019existe actuellement aucun moyen de d\u00e9sactiver la journalisation des applications \u00e0 l\u2019aide de commandes Azure CLI.</p>"},{"location":"cloud/azure/#reset","title":"Reset","text":"<p>Toutefois, la commande suivante permet de r\u00e9initialiser la journalisation dans le syst\u00e8me de fichiers au niveau erreur simplement.</p> <pre><code>az webapp log config --application-logging false --name &lt;app-name&gt; --resource-group &lt;resource-group-name&gt;\n</code></pre>"},{"location":"cloud/azure/#status","title":"Status","text":"<p>Pour conna\u00eetre l\u2019\u00e9tat actuel de la journalisation d\u2019une application, utilisez cette commande.</p> <pre><code>az webapp log show --name &lt;app-name&gt; --resource-group &lt;resource-group-name&gt;\n</code></pre>"},{"location":"cloud/cgp/","title":"Google Cloud Platforme","text":"<p>Here are somes aws tips &amp; tricks</p> <p>in progress..</p>"},{"location":"cloud/kvm/","title":"QEMU-KVM","text":""},{"location":"cloud/kvm/#how-to-convert","title":"How to convert ?","text":"<p>How to convert qcow2 virtual disk file ? :</p> <pre><code>qemu-img convert -f qcow2 qcow2_file_name -O vdi vdi_file_name\n</code></pre>"},{"location":"cloud/kvm/#example","title":"Example :","text":"<p>Format centos7_64.qcow2 image to vdi file :</p> <pre><code>qemu-img convert -f qcow2 centos7_64.qcow2 -O vdi centos7_64.vdi\n</code></pre>"},{"location":"cloud/oci/","title":"Oracle Cloud Infrastructure","text":"<p>Here are somes oci tips &amp; tricks</p> <p>in progress..</p>"},{"location":"cloud/pve/","title":"Proxmox Virtual Environment","text":""},{"location":"cloud/pve/#subscription","title":"Subscription","text":"<p>How to remove Proxmox proxy subscription pop up ?</p>"},{"location":"cloud/pve/#change-to-active","title":"Change to Active","text":"<p>Situated at the line ~120 Change the status to <code>Active</code> :</p> <pre><code>sed -i.bak 's/notfound/active/g' /usr/share/perl5/PVE/API2/Subscription.pm\nsed -i.bak 's/There is no subscription key/It seams to be active right ?/' /usr/share/perl5/PVE/API2/Subscription.pm\n</code></pre>"},{"location":"cloud/pve/#restart-service","title":"Restart service","text":"<p>Restart pveproxy service &amp; refresh next your web page :</p> <pre><code>systemctl restart pveproxy.service\n</code></pre>"},{"location":"cloud/pve/#grub","title":"Grub","text":"<p>/etc/default/grub</p> <pre><code>GRUB_DISTRIBUTOR=\"Proxmox Virtual Environnement\"\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on\"\nGRUB_CMDLINE_LINUX=\"consoleblank=300\"\n</code></pre>"},{"location":"cloud/pve/#apply-grub-modifications","title":"Apply grub modifications","text":"<pre><code>update-grub\n</code></pre> <p>or</p> <pre><code>grub-mkconfig -o /boot/grub/grub.cfg\n</code></pre> <p>or</p> <pre><code>grub2-mkconfig -o /boot/grub2/grub.cfg\n</code></pre>"},{"location":"cloud/pve/#modules","title":"Modules","text":"<p>/etc/modules</p> <pre><code>#\u00a0Virtual Function I/O\nvfio\nvfio_iommu_type1\nvfio_pci\nvfio_virqfd\n\n# Chip drivers\ncoretemp\n</code></pre>"},{"location":"cloud/pve/#update-initramfs","title":"Update initramfs","text":"<pre><code>update-initramfs -u -k all\n</code></pre>"},{"location":"cloud/pve/#repositories","title":"Repositories","text":"<p>/etc/apt/sources.list</p> <pre><code># not for production use\ndeb http://download.proxmox.com/debian buster pve-no-subscription\n</code></pre> <p>/etc/apt/sources.list.d/pve-enterprise.list</p> <pre><code># deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise\n</code></pre>"},{"location":"cloud/readme/","title":"Cloud Infrastructure","text":""},{"location":"cloud/readme/#cas-dusage","title":"Cas d'usage","text":"<p>Il \u00e9xiste en r\u00e9alist\u00e9 divers type de platformes dans le cloud. Chacune d'entre elle on leur sp\u00e9cificit\u00e9es.</p>"},{"location":"cloud/readme/#iaas-infrastructure-en-tant-que-service","title":"IAAS (Infrastructure en tant que service)","text":"<p>Il contient les blocs de construction fondamentaux de l'informatique dans le cloud et donne habituellement acc\u00e8s \u00e0 des fonctionnalit\u00e9s de mise en r\u00e9seau, \u00e0 des ordinateurs (virtuels ou sur du mat\u00e9riel d\u00e9di\u00e9) et \u00e0 de l'espace de stockage de donn\u00e9es. </p> <p>Le service IaaS offre le niveau le plus \u00e9lev\u00e9 de flexibilit\u00e9 et de contr\u00f4le de gestion en ce qui concerne les ressources informatiques.</p> <p>Ce services est tr\u00e8s similaire aux ressources informatiques existantes avec lesquelles les services informatiques et les d\u00e9veloppeurs sont aujourd'hui familiaris\u00e9s.</p>"},{"location":"cloud/readme/#paas-plate-forme-en-tant-que-service","title":"PAAS (Plate-forme en tant que service)","text":"<p>Gr\u00e2ce au service PaaS, les entreprises n'ont plus besoin de g\u00e9rer l'infrastructure sous-jacente (en r\u00e8gle g\u00e9n\u00e9rale, le mat\u00e9riel et les syst\u00e8mes d'exploitation) et vous pouvez vous concentrer sur le d\u00e9ploiement et la gestion de vos applications. </p> <p>Vous \u00eates ainsi plus efficace, car vous n'avez pas \u00e0 vous soucier de l'approvisionnement des ressources, de la planification des capacit\u00e9s, de la maintenance logicielle, de l'application de correctifs ou de toute autre charge indiff\u00e9renci\u00e9e li\u00e9e \u00e0 l'ex\u00e9cution de votre application.</p>"},{"location":"cloud/readme/#saas-logiciel-en-tant-que-service","title":"SAAS (Logiciel en tant que service)","text":"<p>Le logiciel en tant que service offre un produit final qui est ex\u00e9cut\u00e9 et g\u00e9r\u00e9 par le prestataire de services. Dans la plupart des cas, les personnes qui font r\u00e9f\u00e9rence au service Saas pensent aux applications des utilisateurs finaux. </p> <p>Avec une offre SaaS, vous n'avez pas \u00e0 vous soucier de la gestion du service ou de celle de l'infrastructure sous-jacente. </p> <p>Vous devez juste r\u00e9fl\u00e9chir \u00e0 l'utilisation de ce logiciel sp\u00e9cifique.  Une messagerie Web dans laquelle vous pouvez envoyer et recevoir des e-mails sans avoir \u00e0 g\u00e9rer des ajouts de fonctionnalit\u00e9s ni \u00e0 effectuer la maintenance des serveurs et des syst\u00e8mes d'exploitation sur lesquels elle s'ex\u00e9cute est un exemple courant d'application SaaS.</p>"},{"location":"cloud/readme/#memory","title":"Memory","text":"<pre><code>sync &amp;&amp; echo 3 &gt; /proc/sys/vm/drop_caches\n</code></pre>"},{"location":"cloud/vmware/","title":"VMware","text":""},{"location":"cloud/vmware/#rescan-storage","title":"Rescan Storage","text":"<p>How to rescan storage ?</p> <p></p>"},{"location":"cloud/vmware/#usb-datastore","title":"USB Datastore","text":"<p>How to add an USB hard drive as Datastore ?</p>"},{"location":"cloud/vmware/#disabling-usb-arbitrator-service","title":"Disabling usb arbitrator service","text":""},{"location":"cloud/vmware/#stopping","title":"Stopping","text":"<pre><code>/etc/init.d/usbarbitrator stop\n</code></pre>"},{"location":"cloud/vmware/#disabling","title":"Disabling","text":"<pre><code>chkconfig usbarbitrator off\n</code></pre>"},{"location":"cloud/vmware/#labeling","title":"Labeling","text":"<pre><code>partedUtil mklabel /dev/disks/mpx.vmhba32:C0:T0:L0 gpt\n</code></pre>"},{"location":"cloud/vmware/#get-the-partition-table","title":"Get the partition table","text":"<p>\u26a0\ufe0f This command will bring you a number :</p> <pre><code>eval expr $(partedUtil getptbl /dev/disks/mpx.vmhba32:C0:T0:L0 | tail -1 | awk '{print $1 \" \\\\* \" $2 \" \\\\* \" $3}') - 1\n</code></pre> <p>Dont forget to fill the number found :</p> <pre><code>partedUtil setptbl /dev/disks/mpx.vmhba32:C0:T0:L0 gpt \"1 2048 ${NUMBER} AA31E02A400F11DB9590000C2911D1B8 0\"\n</code></pre>"},{"location":"cloud/vmware/#last-step","title":"Last step","text":"<pre><code>vmkfstools -C vmfs6 -S USB-Datastore /dev/disks/mpx.vmhba32:C0:T0:L0:1\n</code></pre>"},{"location":"cloud/vmware/#license","title":"License","text":""},{"location":"cloud/vmware/#removing-license","title":"Removing License","text":"<p>rm -r /etc/vmware/license.cfg</p>"},{"location":"cloud/vmware/#get-a-new-trial-license","title":"Get a new trial license","text":"<p>cp /etc/vmware/.#license.cfg /etc/vmware/license.cfg</p>"},{"location":"cloud/vmware/#restarting-vpxa","title":"Restarting VPXA","text":"<p>/etc/init.d/vpxa restart</p>"},{"location":"dev/ansible/","title":"Ansible Engine","text":""},{"location":"dev/ansible/#list-dargument","title":"List d'argument","text":"<ul> <li>-i : Sp\u00e9cifier le fichier d'inventaire</li> <li>-C,--check : V\u00e9rifier la.es action.s qui sera.ont r\u00e9alis\u00e9e.s</li> <li>-m : Sp\u00e9cifier le module que l'on souhaite invoquer</li> <li>-k : Demander le mot de passe user</li> <li>-K : Demander le mot de passe root</li> <li>-b,--become : \u00c9x\u00e9cuter en tant que su (*admin)</li> </ul>"},{"location":"dev/ansible/#serveur","title":"Serveur","text":""},{"location":"dev/ansible/#configuration","title":"Configuration","text":"<p>file : <code>ansible.cgf</code></p> <pre><code>host_key_checking = False\ninventory = pve.inventory\n</code></pre>"},{"location":"dev/ansible/#inventory","title":"Inventory","text":"<p>file : <code>inventory</code></p> <pre><code>[Groups]\nansible ansible_hosts=0.0.0.0\n\n[Groups:vars]\nansible_user = John Doe\nansible_password = jdoe\n</code></pre>"},{"location":"dev/ansible/#remote","title":"Remote","text":""},{"location":"dev/ansible/#windows","title":"Windows","text":""},{"location":"dev/ansible/#winrm","title":"WinRM","text":"<p>WinRM is a management protocol used by Windows to remotely communicate with another server. It is a SOAP-based protocol that communicates over HTTP/HTTPS, and is included in all recent Windows operating systems. Since Windows Server 2012, WinRM has been enabled by default, but in most cases extra configuration is required to use WinRM with Ansible.</p>"},{"location":"dev/ansible/#authentification-options","title":"Authentification Options","text":"Option Local Accounts Active Directory Accounts Credential Delegation HTTP Encryption Basic Yes No No No Certificate Yes No No No Kerberos No Ye Ye Yes NTLM Yes Ye No Yes CredSSP Yes Ye Ye Yes"},{"location":"dev/ansible/#basic","title":"Basic","text":"<p>Basic authentication is one of the simplest authentication options to use, but is also the most insecure.</p> <pre><code>ansible_user: Username\nansible_password: Password\nansible_connection: winrm\nansible_winrm_transport: basic\n</code></pre>"},{"location":"dev/ansible/#credssp","title":"CredSSP","text":"<p>CredSSP authentication is a newer authentication protocol that allows credential delegation. This is achieved by encrypting the username and password after authentication has succeeded and sending that to the server using the CredSSP protocol.</p> <p>To use CredSSP authentication, the host vars are configured like :</p> <pre><code>ansible_user: Username\nansible_password: Password\nansible_connection: winrm\nansible_winrm_transport: credssp\n</code></pre> <p>There are some extra host variables that can be set as shown below</p> <pre><code>ansible_winrm_credssp_disable_tlsv1_2: when true, will not use TLS 1.2 in the CredSSP auth process\n</code></pre> <p>CredSSP authentication is not enabled by default on a Windows host, but can be enabled by running the following in PowerShell</p> <pre><code>Enable-WSManCredSSP -Role Server -Force\n</code></pre>"},{"location":"dev/ansible/#installing-credssp-library","title":"Installing CredSSP Library","text":"<p>The <code>requests-credssp</code> wrapper can be installed using <code>pip</code>:</p> <pre><code>pip install pywinrm[credssp]\n</code></pre>"},{"location":"dev/ansible/#tls-12","title":"TLS 1.2","text":"<p>By default the <code>requests-credssp</code> library is configured to authenticate over the TLS 1.2 protocol. TLS 1.2 is installed and enabled by default for Windows Server 2012 and Windows 8 and more recent releases.</p>"},{"location":"dev/ansible/#certificate","title":"Certificate","text":"<p>CredSSP works by encrypting the credentials through the TLS protocol and uses a self-signed certificate by default. The <code>CertificateThumbprint</code> option under the WinRM service configuration can be used to specify the thumbprint of another certificate.</p> <pre><code># Note the value $certificate_thumbprint will be different in each\n# situation, this needs to be set based on the cert that is used.\n$certificate_thumbprint = \"7C8DCBD5427AFEE6560F4AF524E325915F51172C\"\n\n# Set the thumbprint value\nSet-Item -Path WSMan:\\localhost\\Service\\CertificateThumbprint -Value $certificate_thumbprint\n</code></pre> <p>[[https://docs.ansible.com/ansible/latest/os_guide/windows_winrm.html#id9]]</p>"},{"location":"dev/docker/","title":"Docker","text":"<p>Lister les processus en cours :</p> <p>docker ps -a</p>"},{"location":"dev/docker/#images","title":"Images","text":"<p>Chaque processus d\u00e9pendera d'une image pareil \u00e0 une iso + son appli pour une vm. Chercher une image :</p> <pre><code>docker search nginx\n</code></pre> <p>T\u00e9l\u00e9charger une image : </p> <pre><code>docker pull nginx\n</code></pre> <p>Lister les images t\u00e9l\u00e9charg\u00e9es :</p> <pre><code>docker images\n</code></pre> <p>ou</p> <pre><code>docker image ls\n</code></pre> <p>Supprimer une image :</p> <pre><code>docker rmi nginx\n</code></pre> <p>\u26a0 Si une image est sur le disque mais nous est impossible de supprimer (on parlera d'une image souvent test\u00e9 \u00e0 l'installation de docker) Nous allons devoir forcer sa suppression :</p> <pre><code>docker rmi -f hello-world\n</code></pre> <p>Voir l'historique de son image :</p> <pre><code>docker history sboistel/image:verison(1.1)\n</code></pre>"},{"location":"dev/docker/#commit","title":"Commit","text":"<p>Apr\u00e8s avoir fait des changements sur une image, comment enregister tout \u00e7a ?</p> <pre><code>docker commit mycentos01 sboistel/mycentos:1.0\n</code></pre>"},{"location":"dev/docker/#dockerfile","title":"DockerFile","text":"<p>Cr\u00e9er un docker file : <code>vim dockerfile</code></p> <pre><code>FROM centos\nRPM yum install -y wget\nRPM yum install yum-utils\n</code></pre> <p>Warning</p> <p>Plus il y aura de nombre de ligne dans le dockerfile, plus le nombre de couche sera important et engedra les performences.</p> <p>Construire l'image :</p> <pre><code>docker build -t sboistel/mycentos:1.0\ndocker build -t mon_image:v1.0\n</code></pre>"},{"location":"dev/docker/#champs","title":"Champs","text":"<p>Liste des diff\u00e9rents champs compl\u00e9table :</p> <ul> <li>FROM : Pour les images vierge seuelement !</li> <li>LABEL version : Donner une version</li> <li>LABEL description : D\u00e9crire la version</li> <li>ENV : Variable d'environnement : Example <ul> <li>JAVA_HOME /usr/bin/java</li> <li>ORACLE_HOME /u01/app/oracle/$ORACLE_SID/</li> </ul> </li> <li>RUN : Commande \u00e0 effectuer \"yum install ..\"</li> <li>WORKDIR : Emplacement de travail</li> <li>...</li> </ul>"},{"location":"dev/docker/#run-exec","title":"Run / Exec","text":"<p>Plusieurs arguments serrons ici utilis\u00e9s :</p> <ul> <li>t : Avoir un terminal en sortie</li> <li>i : Interactif </li> </ul>"},{"location":"dev/docker/#exemple","title":"Exemple :","text":"<pre><code>docker run -ti ubuntu\n</code></pre> <p>Ex\u00e9cuter une commande dans l'environnement Bash :</p> <pre><code>docker run -ti ubuntu ps\n</code></pre> <p>Ex\u00e9cuter une commande dans un conteneur d\u00e9tach\u00e9 en cours d'\u00e9x\u00e9cution :</p> <pre><code>docker exec -name=container01 -hostname=host01 centos ping 127.0.0.1\n</code></pre>"},{"location":"dev/docker/#attache-non-attache","title":"Attach\u00e9 / Non Attach\u00e9","text":"<p>Ex\u00e9cuter l'image ubuntu avec des param\u00e8tres d'attachements :</p> <pre><code>docker run --name=container01 --hostname=host01 -it ubuntu\n</code></pre> <p>Ex\u00e9cuter l'image ubuntu avec des param\u00e8tres de d\u00e9tachement :</p> <pre><code>docker run -d -it centos ping 127.0.0.1\n</code></pre> <p>Du coup, o\u00f9 se passes les informations du conteneur d\u00e9tach\u00e9 ? :</p> <pre><code>docker logs ID_DU_CONTAINER\n</code></pre> <p>Rappel pour avoir l'id du conteneur : </p> <pre><code>docker ps </code></pre> <p>Afin de r\u00e9ccup\u00e9rer la main sur la session du conteneur d\u00e9tach\u00e9 :</p> <pre><code>docker attache ID_DU_CONTAINER\n</code></pre> <p>Revenir au mode d\u00e9tach\u00e9, faire la combinaison suivante : <code>CTRL + Q</code></p>"},{"location":"dev/docker/#inspecter-un-conteneur","title":"Inspecter un conteneur","text":"<p>Avoir les informations du conteneur en format json :</p> <pre><code>docker inspect container01\n</code></pre>"},{"location":"dev/docker/#agregation-de-recherche","title":"Agr\u00e9gation de recherche","text":"<p>R\u00e9colter seulement ce qui nous int\u00e9r\u00e8sse ?</p> <ul> <li>Avoir un status</li> </ul> <pre><code>docker inspect --format='![](./Docker/.State.Status)' container01\n</code></pre> <ul> <li>Avoir l'iP du container01 </li> </ul> <pre><code>docker inspect --format='![](./Docker/.NetworkSettings.IPAddress)' container01\n</code></pre> <p>R\u00e9ccolter le tableau State :</p> <pre><code>docker inspect --format='![](./Docker/json .State)' container01\n</code></pre>"},{"location":"dev/docker/#filtres","title":"Filtres","text":"<p>Filtrer tout les conteneur ayant comme nom web :</p> <pre><code>docker ps -a --filter name=web\n</code></pre> <p>Filtrer tout les conteneurs ayant un status ferm\u00e9 :</p> <pre><code>docker ps -a --filter status=exited\n</code></pre>"},{"location":"dev/docker/#formater-laffichage","title":"Formater l'affichage","text":"<p>Formater la sortie :</p> <pre><code>docker ps -a --format \"![](./Docker/.Names) : ![](./Docker/.Status)\"\n</code></pre>"},{"location":"dev/docker/#import-export","title":"Import / Export","text":""},{"location":"dev/docker/#export","title":"Export","text":"<p>Comment exporter son image ?</p> <pre><code>docker export -o mycentos01.tar mycentos\n</code></pre> <p>V\u00e9rifier son export :</p> <pre><code>tar tvf mycentos01.tar\n</code></pre> <p>Tout est ok, je compresse :</p> <pre><code>gzip mycentos01.tar\n</code></pre>"},{"location":"dev/docker/#import","title":"Import","text":"<p>Comment import une image export\u00e9e ? :</p> <pre><code>docker import mycentos.tar.gz mycentos:1.0\n</code></pre>"},{"location":"dev/docker/#containers","title":"Containers","text":"<p>L'objectif de la conteneurisation est de faire en sorte qu'un ensemble logiciel coh\u00e9rent puisse fonctionner au sein d'un conteneur.</p> <p>Pour qu'une application puisse tourner au sein d'un conteneur, elle doit \u00eatre empaquet\u00e9e, c'est \u00e0 dire qu'on la met \u00e0 l'int\u00e9rieur d'un paquet (une image dans la terminologie des conteneurs) avec ses d\u00e9pendances. </p> <p>Il existe d'ailleurs des images officielles, sur le Hub Docker par exemple, permettant de faire tourner tout type de logiciel (MySQL, Java 8, wordpresse, etc).</p>"},{"location":"dev/docker/#type-de-systeme","title":"Type de syst\u00e8me","text":"<p>Il y a plusieurs type de syst\u00e8me de conteneurisation. Dotcloud plus connu sous le nom de Docker sera de moins en moins utilis\u00e9 car tant \u00e0 le d\u00e9pr\u00e9cier.</p> <p>On trouvera aussi :</p> <ul> <li>CoreOS</li> <li>Mesos</li> <li>LXC</li> <li>OpenVZ</li> <li>Containerd</li> <li>etc ...</li> </ul>"},{"location":"dev/docker/#dockerless","title":"Dockerless","text":"<pre><code>================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the 'Docker daemon attack surface'\ndocumentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================\n</code></pre>"},{"location":"dev/elastik/","title":"Elasticsearch / Logstash / Kibana","text":""},{"location":"dev/elastik/#presentation","title":"Pr\u00e9sentation","text":"<p>Description de stack ELK D\u00e9ploiement et savoir faire</p> <p>Mise en place de r\u00e9ccup\u00e9ration des m\u00e9trics ?     -&gt; Audite</p>"},{"location":"dev/elastik/#prerequis","title":"Prerequis :","text":"<ul> <li>Centos 7</li> <li>4G RAM</li> <li>2 CPU</li> </ul> <p>https://www.elastic.co/guide/en/cloud-enterprise/2.1/ece-prereqs.html</p> <p>https://grokdebug.herokuapp.com/</p> <p>/usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive</p> <p>curl -X PUT \"localhost:9200/elk-001?pretty\"</p>"},{"location":"dev/elastik/#ssh-port-forward-list","title":"SSH Port Forward list :","text":"<p>ssh -L 127.0.0.1:8080:local_ip:80 user@ip # centreon ssh -L 127.0.0.1:5601:local_ip:5601 user@ip # kibana ssh -L 127.0.0.1:9200:local_ip:9200 user@ip # elasticsearch</p>"},{"location":"dev/elastik/#filebeat","title":"FileBeat :","text":"<p>curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.11.1-x86_64.rpm rpm -vi filebeat-7.11.1-x86_64.rpm</p>"},{"location":"dev/elastik/#metricbeat","title":"MetricBeat :","text":"<p>curl -L -O https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-7.11.1-x86_64.rpm rpm -vi metricbeat-7.11.1-x86_64.rpm</p>"},{"location":"dev/elastik/#elasticsearch","title":"Elasticsearch","text":"<p>Elasticsearch is composed by :</p> <ul> <li>LOGSTASH</li> <li>KIBANA</li> <li>X-PACK</li> <li>BEATS</li> </ul>"},{"location":"dev/elastik/#logstash","title":"LOGSTASH","text":"<p>Logstash is an event processing pipeline</p>"},{"location":"dev/elastik/#kibana","title":"KIBANA","text":"<p>Kibana is a monitoring analyse platforme which allow human to easly read elasticsearch datas We can call Kibana as the elasticsearch's dashboard</p>"},{"location":"dev/elastik/#x-pack","title":"X-PACK","text":"<p>Is a packe of features for Kibana</p> <ul> <li>Security</li> <li>Monitoring</li> <li>Alerting</li> <li>Reporting</li> <li>Machine Learning</li> <li>Abnormality Detection</li> <li>Forcasting</li> <li>Graph</li> <li>Elasticsearch SQL</li> </ul>"},{"location":"dev/elastik/#beats","title":"BEATS","text":"<p>Beats farm data for logstash</p>"},{"location":"dev/git/","title":"Git","text":"<p>Here are somes git tips &amp; tricks</p>"},{"location":"dev/git/#using-git","title":"Using Git","text":"<p>The following commands can be helpful for working with <code>git</code>.</p> git command Comment <code>git init</code> Initialize a directory as git managed repository <code>git clone &lt;repo_url&gt;</code> Clone a remote repository to your local client <code>git status</code> Shows uncommited changes, new files etc. <code>git add &lt;wildcard_or_filename&gt;</code> Stage an updated / new file to the next commit <code>git rm &lt;wildcard_or_filename&gt;</code> Remove a file and stage the removal for the next commit <code>git commit -m \"&lt;commit message\"&gt;</code> Commit staged changes under a new commit <code>git commit</code> Will open an editor to write more descriptive commit messages. See here for a guide on good commit messages <code>git checkout &lt;branch_name&gt;</code> Switch to another branch <code>git branch</code> Shows a list of existing branches <code>git branch &lt;branch_name&gt;</code> Creates a new branch (from the currently checked out branch) <code>git merge &lt;branch_name&gt;</code> Merge changes from <code>branch_name</code> to the currently checked out branch <code>git push</code> Push commited changes to the remote repository <code>git pull</code> Pull current state from the remote repository to your local repo"},{"location":"dev/git/#working-with-git-flow","title":"Working with git-flow","text":"<p>Git-flow assists you by combining multiple steps of <code>git</code> commands to one <code>git-flow</code> command which will do a workflow of steps. Although <code>git-flow</code> makes live easier in some cases, it makes it also more complex sometimes and you need to execute some steps before or after using a <code>git-flow</code> command as regular <code>git</code> command. (See below)</p> <p>As an example, here is the comparison between the regular <code>git</code> commands and the appropriate <code>git-flow</code> command for creating a release.</p> git-flow command git command <code>git-flow feature start &lt;feature_name&gt;</code> <code>git checkout -b feature/&lt;feature_name&gt; develop</code> <code>git-flow feature finish &lt;feature_name&gt; [--squash]</code> <code>git checkout develop</code> <code>git merge [--squash] --no-ff feature/&lt;feature_name&gt;</code> <code>git branch -d feature/&lt;feature_name&gt;</code> <p>Another <code>git-flow</code> cheat sheet can be found here.</p>"},{"location":"dev/git/#config","title":"Config","text":""},{"location":"dev/git/#username","title":"Username","text":"<p>Ajout le nom d'utilisateur au profil </p> <p>git config --global user.name \"sboistel\"</p>"},{"location":"dev/git/#mail","title":"Mail","text":"<p>Ajout le mail du profil </p> <p>git config --global user.email \"sboistel@mail.com\"</p>"},{"location":"dev/git/#credentials","title":"Credentials","text":"<p>Garder en m\u00e9moire les donn\u00e9es de connexion au repo : </p> <p>git config credential.helper store</p>"},{"location":"dev/git/#branches","title":"Branches","text":"<p>Lister les Branches </p> <p>git branche</p>"},{"location":"dev/git/#checkout","title":"Checkout","text":"<p>V\u00e9rifier quel est la branche sur laquelle nous sommes:</p> <p>git checkout</p> <p>Changer de branche : </p> <p>git checkout nom_branche</p>"},{"location":"dev/git/#manage","title":"Manage","text":""},{"location":"dev/git/#push","title":"Push","text":"<p>Push vers vers une autre branche que Master :</p> <p>git push -u origin nom_branche</p>"},{"location":"dev/git/#merge","title":"Merge","text":"<p>Se positionner sur la branche master (principale..), et ensuite</p> <p>git merge nom_branche</p> <p>Ne pas omettre de push ensuite ;) </p> <p>git push</p>"},{"location":"dev/git/#stash","title":"Stash","text":"<p>Le stash permet de garder les modifications faites en local sans les propager. On pourra v\u00e9rifier ce qu'il est possible de save :</p> <p>git stash list</p> <p>Clear la liste stash </p> <p>git stash clear</p> <p>Commiter un stash </p> <p>git stash pop</p>"},{"location":"dev/kubernetes/","title":"Kubernetes","text":"<p>Created Tuesday 25 January 2022</p> <p>Kubernetes ou K8s (8 \u00e9tant le nombre de lettre dans Kubernetes)</p> <p>Kubernetes est un Orchestrateur (g\u00e8re des clusters)</p> <p>Il aura plusieurs notions : - Gestion des configurations - Gestion des mots de passe (secrets) - RBAC (Role base acces controler) \"IAM\"</p>"},{"location":"dev/kubernetes/#lexique","title":"Lexique","text":"<ul> <li>Kubelet : Deamond s'\u00e9x\u00e9cutant dans les workers</li> </ul>"},{"location":"dev/kubernetes/#cluster","title":"Cluster","text":"<p>Un cluster c'est quoi ? Un ensemble de noeud de type linux ou windows</p>"},{"location":"dev/kubernetes/#pods","title":"Pods","text":"<p>Un cluster \u00e9xecute des pods, mais de quoi s'agit-il ? Il s'agit d'un ensemble de conteneurs se partageant les ressources.</p> <p>Lister les pods :</p> <pre><code>kubectl get pods\n</code></pre> <p>Tester les ports :</p> <pre><code>kubectl port-forward POD_NAME 8000:80\n</code></pre> <p>R\u00e9ccup\u00e9rer les \u00e9l\u00e8ments d'un pod :</p> <pre><code>kubectl describe po/POD_NAME\n</code></pre>"},{"location":"dev/kubernetes/#service","title":"Service","text":"<p>Les service exposent les ports d'un pod</p>"},{"location":"dev/kubernetes/#nodes","title":"Nodes","text":"<p>Deux types de noeud : Que font les Master ?</p> <ul> <li>Gestion du cluster</li> <li>Orchestre l'\u00e9x\u00e9cution des pods sur les noeuds</li> <li>Expose l'API server</li> </ul> <p>Que font les Marker ?</p> <ul> <li>Ex\u00e9cute les pods</li> <li>Fournit les ressources aux pods</li> <li>Communique avec le master (actions \u00e0 ex\u00e9cuter ...)</li> </ul> <p>Lister les noeuds : </p> <pre><code>kubectl get nodes\n</code></pre>"},{"location":"dev/multipass/","title":"Multipass","text":"<p>Multipass is a tool to generate cloud-style Ubuntu VMs quickly on Linux, macOS, and Windows.</p>"},{"location":"dev/multipass/#commands","title":"Commands","text":"Commands Description alias Create an alias aliases List available aliases authenticate Authenticate client delete Delete instances exec Run a command on an instance find Display available images to create instances from get Get a configuration setting help Display help about a command info Display information about instances launch Create and start an Ubuntu instance list List all available instances mount Mount a local directory in the instance networks List available network interfaces purge Purge all deleted instances permanently recover Recover deleted instances restart Restart instances set Set a configuration setting shell Open a shell on a running instance start Start instances stop Stop running instances suspend Suspend running instances transfer Transfer files between the host and instances umount Unmount a directory from an instance unalias Remove aliases version Show version details"},{"location":"dev/multipass/#installation","title":"Installation","text":"<pre><code>brew install --cask multipass\n</code></pre>"},{"location":"dev/multipass/#version","title":"Version","text":"<pre><code>multipass version\n</code></pre> <pre><code>$ multipass version\nmultipass   1.11.1+mac\nmultipassd  1.11.1+mac\n</code></pre>"},{"location":"dev/multipass/#gather","title":"Gather","text":""},{"location":"dev/multipass/#list","title":"List","text":"<p>Syntax :</p> <pre><code>multipass list\n</code></pre> <p>Example :</p> <pre><code>$ multipass list\nName                    State             IPv4             Image\ntest1                   Running           192.168.64.17    Ubuntu 22.04 LTS\n</code></pre>"},{"location":"dev/multipass/#infos","title":"Infos","text":"<p>Syntax :</p> <pre><code>multipass info $VM\n</code></pre> <p>Example :</p> <pre><code>$ multipass info test1\nName:           test1\nState:          Running\nIPv4:           192.168.64.17\nRelease:        Ubuntu 22.04.1 LTS\nImage hash:     8593ce1c6bbd (Ubuntu 22.04 LTS)\nCPU(s):         1\nLoad:           0.32 0.17 0.06\nDisk usage:     1.4GiB out of 4.7GiB\nMemory usage:   150.8MiB out of 962.7MiB\nMounts:         --\n</code></pre>"},{"location":"dev/multipass/#launch","title":"Launch","text":"<p>Syntax :</p> <pre><code>multipass launch -n $VM\n</code></pre>"},{"location":"dev/multipass/#connect-to-vm","title":"Connect to VM","text":"<pre><code>multipass shell $VM\n</code></pre>"},{"location":"dev/multipass/#references","title":"References","text":"<ul> <li>https://multipass.run/docs/</li> </ul>"},{"location":"dev/packer/","title":"Packer","text":""},{"location":"dev/packer/#installation","title":"Installation","text":""},{"location":"dev/packer/#centosredhatrocky","title":"Centos/Redhat/Rocky","text":"<ul> <li>Add hashicorp repository</li> </ul> <pre><code>dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo\n</code></pre> <ul> <li>Installing package</li> </ul> <pre><code>dnf install packer\n</code></pre>"},{"location":"dev/packer/#ubuntudebian","title":"Ubuntu/Debian","text":"<p>Add the HashiCorp\u00a0GPG key.</p> <pre><code>$ curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -\n</code></pre> <p>Add the official HashiCorp Linux repository.</p> <pre><code>$ sudo apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\"\n</code></pre> <p>Update and install.</p> <pre><code>$ sudo apt-get update &amp;&amp; sudo apt-get install packer\n</code></pre>"},{"location":"dev/packer/#subcommands","title":"Subcommands","text":"<pre><code>Usage: packer [--version] [--help] &lt;command&gt; [&lt;args&gt;]\n\nAvailable commands are:\n    build           build image(s) from template\n    console         creates a console for testing variable interpolation\n    fix             fixes templates from old versions of packer\n    fmt             Rewrites HCL2 config files to canonical format\n    hcl2_upgrade    transform a JSON template into an HCL2 configuration\n    init            Install missing plugins or upgrade plugins\n    inspect         see components of a template\n    plugins         Interact with Packer plugins and catalog\n    validate        check that a template is valid\n    version         Prints the Packer version\n</code></pre> <p>Most of the commands accept or require flags or ags to execute the desired functionnality</p>"},{"location":"dev/packer/#install-autocomplete","title":"Install autocomplete","text":"<p>That enable tab completion when using the CLI</p> <pre><code>packer -autocomplete-install\n</code></pre>"},{"location":"dev/packer/#packer-build","title":"Packer Build","text":"<p>The packer build command takes a Packer temmplate and runs all the defined builds to generate the desired artifacts.  The build command provides the core functionality of Packer.</p> <p>Terminal</p> <pre><code>packer build packer_template.hcl\n</code></pre> <p>Important Options/Arguments</p> <p>-debub : enables debug mode fpr step-by-step troubleshooting - var : set a variable in the Packer template - var-file : use a separate variable file</p>"},{"location":"dev/packer/#environment-variables","title":"Environment variables","text":"<p>Packer has a few environment variables :</p> <ul> <li>PACKER_LOG : enable Packer detailed logs (off by default)</li> <li>PACKER_LOG_PATH : set the path of Packer logs to specific file (rather than stderr)</li> <li>PKR_VAR_xxx : define a variable value using ENV rather than in a template</li> </ul>"},{"location":"dev/perl/","title":"Perl","text":"<p>Perl tips &amp; tricks</p>"},{"location":"dev/perl/#variable","title":"Variable","text":""},{"location":"dev/perl/#scalaire","title":"Scalaire","text":"<p>Contenant une seule valeure :</p> <p>$</p>"},{"location":"dev/perl/#liste","title":"Liste","text":"<p>Example : ('Toto', 'Titi', 'Tata')</p> <p>@</p>"},{"location":"dev/perl/#hashs","title":"Hashs","text":"<p>Le type de la variable hashs </p> <p>%</p>"},{"location":"dev/perl/#example-de-hashs","title":"Example de hashs :","text":"<pre><code>my %liste = (\nPerl =&gt; 'Super',\nPython =&gt; 'G\u00e9nial'\n);\n\nprint ($liste{Python});\n</code></pre>"},{"location":"dev/perl/#fonctions","title":"Fonctions","text":""},{"location":"dev/perl/#split","title":"split","text":"<p>La fonction split permet de retirer un \u00e9l\u00e8ment s\u00e9parateur :</p> <p>my @liste = split ' ', $liste_d_element</p>"},{"location":"dev/perl/#join","title":"join","text":"<p>La fonction join permet d'ins\u00e9rer un ou plusieurs \u00e9l\u00e8ment s\u00e9parateur dans une liste d'\u00e9l\u00e8ment :</p> <p>my @liste = join '; ', @liste_d_element</p>"},{"location":"dev/perl/#pragma","title":"Pragma","text":"<p>Utiliser les pragma pour s\u00e9curiser son script.</p>"},{"location":"dev/perl/#strict","title":"strict","text":"<p>Erreur de syntaxe, avoir un code propre</p> <p>use strict;</p>"},{"location":"dev/perl/#warning","title":"warning","text":"<p>Avertissement d'erreur de syntaxe</p> <p>use warning;</p>"},{"location":"dev/perl/#sucre-de-syntaxe","title":"Sucre de syntaxe","text":"<p>Afin d'\u00e9viter d'avoir un code illisible avec nos \"\" ou '', deux m\u00e9thodes sont applicables dans chacun des cas.</p>"},{"location":"dev/perl/#guillemet","title":"Guillemet","text":"<p>Pour substituer \"\" :</p> <p>qq/Chaine de carract\u00e8re/</p>"},{"location":"dev/perl/#guillement-simple","title":"Guillement Simple","text":"<p>Pour substituer '' :</p> <p>q/Chaine de carract\u00e8re/</p>"},{"location":"dev/perl/#liste_1","title":"Liste","text":"<p>Pour substituer une liste (ex : ('Toto', 'Titi', 'Tata')) :</p> <p>qw/Toto Titi Tata/</p>"},{"location":"dev/perl/#here-string","title":"Here string","text":"<p>OEF signifiant fin de ligne permet d'englober un parragraphe de donn\u00e9es :</p> <pre><code>my $variable = &lt;&lt;OEF;\nligne 1 de donn\u00e9es\nligne 2 de donn\u00e9es\n...\nEOF\n</code></pre>"},{"location":"dev/perl/#verifications","title":"V\u00e9rifications","text":""},{"location":"dev/perl/#predica-if","title":"Pr\u00e9dica 'if'","text":"<p>V\u00e9rification de l'\u00e9xistance d'un \u00e9l\u00e8ment.</p> <pre><code>use strict\n\nmy $langages = (\nPerl   =&gt; 'super',\nPython =&gt; 'geniale',\nRuby   =&gt; 'ouais',\nPascal =&gt; 'bof',\nC      =&gt; 'bof,\n'C ++' =&gt; 'bof'\n);\nif (exists $langages{Haskell})\n{\nprint (\"Mon langage est \", $langages{Haskell}, \"\\n\");\n}\nelsif (exists $langages{Perl})\n(\nprint (\"Mon langage est \", $langages{Perl}, \"\\n\");\n)\nelse\n{\nprint \"Haskell n'est pas d\u00e9fini !\\n\";\n}\n</code></pre>"},{"location":"dev/perl/#rendre-son-script-interatif","title":"Rendre son script int\u00e9ratif","text":""},{"location":"dev/perl/#standard-input","title":"Standard input","text":"<p>Chop retire le dernier carract\u00e8re Chomp retire le dernier carract\u00e8re seulement si celui-ci est un '\\n' Not\u00e9 <code>STDIN</code>, il sert \u00e0 poser une question \u00e0 l'utilisateur:</p> <pre><code>use strict\n\nmy $langages = (\nPerl   =&gt; 'super',\nPython =&gt; 'geniale',\nRuby   =&gt; 'ouais',\nPascal =&gt; 'bof',\nC      =&gt; 'bof,\n'C ++' =&gt; 'bof'\n);\n\nprint \"Entrer le nom d'un langage : \"\nchomp (my $response = &lt;STDIN&gt;);\n\nprint (\"$response est $langages{$response} !\\n\") \nif exists $langages{$response} or die \"$response n'\u00e9xiste pas !\\n\";\n</code></pre>"},{"location":"dev/perl/#boucles","title":"Boucles","text":""},{"location":"dev/perl/#for-foreach","title":"For || Foreach","text":"<p>For ou Foreach on la m\u00eame signification</p> <pre><code>use stric\n\nmy $langages = (\nPerl   =&gt; 'super',\nPython =&gt; 'geniale',\nRuby   =&gt; 'ouais',\nPascal =&gt; 'bof',\nC      =&gt; 'bof,\n'C ++' =&gt; 'bof'\n);\n\nprint \"Element : $_\\n\" for (sort keys %langages);\n</code></pre>"},{"location":"dev/perl/#while","title":"while","text":"<p>Tant que quoi ?</p> <pre><code>while(&lt;STDIN&gt;) {\nchomp;\ndie \"Fin.\" unless $_; # ou 'last unless $_;' pour quitter la boucle\nprint \"coucou $_\";\n}\n</code></pre>"},{"location":"dev/perl/#pseaudo-case","title":"pseaudo case","text":"<p>La fonction case n'\u00e9xiste pas mais un bricolage est possible :</p> <pre><code>print \"Entrer un nombre entre 1 et 3 : \";\nmy $response = &lt;STDIN&gt;;\n\nfor ($response) {\n$_ == 1 &amp;&amp; print \"C'est un\\n\"\n$_ == 2 &amp;&amp; print \"C'est deux\\n\"\n$_ == 3 &amp;&amp; print \"C'est trois\\n\"\n}\n</code></pre>"},{"location":"dev/perl/#fichier","title":"Fichier","text":""},{"location":"dev/perl/#ouvrir-un-fichier","title":"Ouvrir un Fichier","text":"<p>'FILE' en majuscule -&gt; Convention de Perl - '&lt;' = read only - '&gt;' = write only - '+&gt;' = read / write / del - '&gt;&gt;' = add only - '+&gt;&gt;' = read / write / add</p> <p>Ouvrir un fichier avec :</p> <p>open FILE, '&lt;'</p>"},{"location":"dev/perl/#librairies","title":"Librairies","text":""},{"location":"dev/perl/#rest","title":"REST","text":""},{"location":"dev/perl/#client","title":"CLIENT","text":"<p>Comment afficher le token g\u00e9ner\u00e9 :</p> <p>print $authToken-&gt;{'authToken'}, \"\\n\";</p>"},{"location":"dev/python/","title":"Python","text":"<p>Python tips &amp; tricks</p>"},{"location":"dev/python/#syntaxe","title":"Syntaxe","text":"<p>Coding:</p> <ul> <li>Format UTF-8 : <code>## -*- coding:Utf-8 -*-</code></li> </ul> <p>Shebang:</p> <ul> <li><code>#!/usr/bin/env python3</code></li> </ul>"},{"location":"dev/python/#librairy","title":"Librairy","text":""},{"location":"dev/python/#import","title":"Import","text":"<p>You can import a single module from a library:</p> <pre><code>from LIBRAIRIE import module\n</code></pre> <p>You can also import full library:</p> <pre><code>from LIBRAIRIE import *\n</code></pre> <p>From python.py file:</p> <pre><code>from fichier import classe\n</code></pre>"},{"location":"dev/python/#keys","title":"Keys","text":"<p>How to use keys from list ?</p> <pre><code>print(\"My name is %s !\" % liste_nom['name']) \nprint(\"My name is %(name)s !\" % d)\nprint(\"My name is {0} !\".format(d['name']))\n</code></pre>"},{"location":"dev/python/#check","title":"Check","text":"<p>Use <code>try</code> to verify block</p> <pre><code>try: ## V\u00e9rifier ce bloc\n    file = open('infos.txt', 'r')\n    print(file.read())\nexcept: ## Si erreur se trouve dans try\n    print(\"erreur\")\n    finally: ## Qui s'\u00e9xecutera quoi qu'il arrive des blocs pr\u00e9c\u00e9dents\nfile.close\n</code></pre> <p>The verification can take the form of several methods:</p> <pre><code>execpt IOError ## Pour se qui concerne les fichier ou \u00e9l\u00e8ments en dur\nexcept ValueError ## Qui concernera les \u00e9rreurs de conversions\n</code></pre> <p>The safest method remains the 'with' option:</p> <pre><code>try: ## V\u00e9rifier ce bloc\n    with open('infox.txt', 'r') as file: ## Avec le fichier, l'ouvrir en var file\n    for line in file.readlines():\n    print(int(line.strip()))\nexcept IOError as err:\n    print(\"Erreur de fichier\", err)\nexcept ValueError:\n    print(\"Erreur de conversion\")\nexcept:\n    print(\"Erreur inconnue, tous aux abris.\")\nelse:\n    print(\"Fichier connue de tous wallah\")\n</code></pre>"},{"location":"dev/python/#conparators","title":"Conparators","text":""},{"location":"dev/python/#operators","title":"Operators","text":"Operator Description == Equal to &gt; Greater then &gt;= Greter than or equal &lt; Less then &lt;= Less then or equal != Not equal"},{"location":"dev/python/#example","title":"Example","text":"<pre><code>#!/usr/bin/env python3\n\nage = 99\n\nif age &lt;= 35:\n    print('You are old enough to be a Representative, Senator, or the President.')\nelif age &gt;= 30:\n    print('You are old enough to be a Senator.')\nelif age &gt;= 25:\n    print('You are old enough to be a Representative.')\nelse:\n    print('You are not old enough to be a Representativen Senator or the President.')\n\nprint('Have a nice day!')\n</code></pre> <p>Result :</p> <pre><code>You are old enough to be a Senator.\nHave a nice day!\n</code></pre>"},{"location":"dev/python/#boolean-operators","title":"Boolean Operators","text":"Operator Description and Evalutates to True if both statements are true, otherwiser evaluates to False. or Evaluates to True if either of the statements is true, otherwise evaluates to False. not Evaluates to the opposite of the statement."},{"location":"dev/python/#numbers","title":"Numbers","text":"<p>How to work betwen numbers variables ?</p> <p>For example, we gona talking about <code>age</code></p> <pre><code>age = 18\n</code></pre> <p>So tu use age into operators, you have to format the <code>age</code> var using <code>int</code></p> <pre><code>int(age)\n</code></pre> <p>Python Tips</p> <p>If you need to use the age var along your script convert this var to an interger</p> <pre><code>age = 18 # or age = input('Tell me your age please? ')\nage = int(age)\n</code></pre>"},{"location":"dev/python/#functions","title":"Functions","text":"<p>Mindset of functions :</p> <ol> <li>Don't Repeat Yourselft</li> <li>Write one tim, use many times</li> </ol> <p>Example of function code block</p> <p><pre><code>def function_name():\n    # code block\n</code></pre> as</p> <pre><code>def say_hi():\n    print('Hi!')\n</code></pre> <p>To run any function, just have to call it like :</p> <pre><code>def say_hi():\n    print('Hi!')\n\nsay_hi() # &lt; run the function say_hi\n</code></pre> <p>Warning</p> <p>Keep inmind that any function must be defined before to be next called</p>"},{"location":"dev/python/#parameters","title":"Parameters","text":"<p>Example of parameters using def function</p> <pre><code># functions\ndef say_hi(name):\n    print('Hi {}!'.format(name))\n\n# vars\nname = input('Fill your name: ')\n\n# run functions\nsay_hi('Toto')\nsay_hi('Peoples')\nsay_hi(name)\n</code></pre> <p>Result :</p> <pre><code>Fill your name: Toto\nHi Toto!\nHi Peoples!\nHi Sam!\n</code></pre>"},{"location":"dev/python/#default-value","title":"Default value","text":"<p>In case that the parameter is missing, we can suggest default value parameters</p> <pre><code>def say_hi(name = 'there'):\n    print('Hi {}!'.format(name))\n\nsay_hi()\nsay_hi('Toto')\n</code></pre> <p>Result:</p> <pre><code>Hi there!\nHi Toto!\n</code></pre> <p>Example of more complexe parameters.</p> <p>Both of them are named as 'Doe' by default :</p> <pre><code>def say_hi(first, last = 'Doe'):\n    print('Hi {} {}!'.format(first, last))\n\nsay_hi (last = 'Doe', first = 'Jane')\nsay_hi (first = 'John')\nsay_hi('Janie', 'Doe')\nsay_hi('Johnny')\n</code></pre> <p>Result:</p> <pre><code>Hi Jane Doe!\nHi John Doe!\nHi Janie Doe!\nHi Johnny Doe!\n</code></pre>"},{"location":"dev/python/#returning-data","title":"Returning data","text":"<p>Into your function, it could be clever to add like comment as :</p> <p><code>\"\"\"Def function usage/utility\"\"\"</code></p> <pre><code>def say_hi(first, last = 'Doe'):\n\"\"\"Say Hi using firstname and lastname when default one isn't used\"\"\"\n    print('Hi {} {}!'.format(first, last))\n</code></pre> <p>Example of returning satus <code>True</code> or <code>False</code></p> <pre><code>def true_or_false(number):\n\"\"\"Determine if a number is true or false.\"\"\"\n\n    if number % 2 == 0:\n        return True\n    else: \n        return False\n\nprint(true_or_false(7))\n</code></pre> <p>In this case</p> <pre><code>False\n</code></pre> <p>Use multiple functions nested</p> <pre><code>#!/usr/env/bin python3\n\n# define functions\ndef get_name():\n    firstname = input(\"What's U'r firstname ? \")\n    lastname = input(\"What's U'r lastname ? \")\n    return firstname\n    return lastname\n\ndef say_name(firstname, lastname = 'Doe'):\n    print(\"U'r name is {} {}.\".format(firstname, lastname))\n    print(\"Yes I know I'm mentalist.\")\n\ndef get_and_say_name():\n\"\"\"Get and display name\"\"\"\n    Identity = get_name()\n    say_name(Identity)\n\n# run function.s\nget_and_say_name()\n</code></pre> <p>Result :</p> <pre><code>What's U'r firstname ? Sam\nWhat's U'r lastname ? \nU'r name is Toto Doe.\nYes I know I'm mentalist\n</code></pre>"},{"location":"dev/python/#virtual-venv","title":"Virtual venv","text":"<p>AKA <code>venv</code> , that is better to use venv to allow using multiple versions and avoid to pollute your machine</p> <p>Info</p> <p>A virtual environement ne require privileges</p>"},{"location":"dev/python/#create-python-venv","title":"Create python venv","text":"<p>Here name  defined is : <code>pyvenv</code></p> <pre><code>python3 -m venv pyvenv\n</code></pre>"},{"location":"dev/python/#source-it","title":"Source it","text":"<pre><code>source pyvenv/bin/active\n</code></pre>"},{"location":"dev/python/#download-modules","title":"Download module.s","text":"<pre><code>mkdir module; cd module\npip download module_name\n</code></pre>"},{"location":"dev/python/#using-file","title":"Using file","text":"<p>Requirements.txt</p>"},{"location":"dev/python/#requierements","title":"Requierements","text":"<p>You have to fill the module name wished to the <code>requierements.txt</code> file. </p> <p>This file is used to build your envirement</p> <pre><code>echo \"module_name\" &gt;&gt; requirements.txt\n</code></pre>"},{"location":"dev/python/#install-virtual-environement","title":"Install virtual environement","text":"<pre><code>pip install --no-index --find-links module/ -r requirements.txt\n</code></pre>"},{"location":"dev/python/#lists","title":"Lists","text":""},{"location":"dev/python/#list","title":"List","text":"<p>Lists are created using comma separated values between square brackets.</p> <p>The format is :</p> <pre><code>list = [item_1, item2, item_X]\n</code></pre> <p>Items in a list can be accessed by index.</p> <p>Warning</p> <p>Lists are zero based</p> <p>Access items from the end of the list by using negative indice</p> <p>The last item in a list is : </p> <pre><code>list = [-1]\n</code></pre> <p>Add items to a list by using the <code>append()</code> or <code>extend()</code> list methods.</p> <p>Example of code</p> <pre><code>animals = ['man', 'bear', 'pig']\nprint(animals[0]) # print the fist item of the index\n\nanimals[0] = 'cat' # susbtitute man by cat\nprint(animals[0]) # reassigned variable\nprint(animals[-3]) # Negative index (pig man to man&lt;cat)\n\nanimals.append('cow') # add cow to the index\nmore_animals = ['horse', 'turtle'] # agrement the animals index\nanimals.extend(more_animals) # insert the more_animals list into the animals\nprint(animals[-1]) # display the first item from the reverse reading\n\nanimals.insert(0, 'dog') # insert a new item to the first entry\nprint(animals) # display index\n</code></pre> <p>Output :</p> <pre><code>man\ncat\ncat\nturtle\n['dog', 'cat', 'bear', 'pig', 'cow', 'horse', 'turtle'\n</code></pre>"},{"location":"dev/python/#slices","title":"Slices","text":"<p>Access a portion of a list using a slice.</p> <p>The format is :</p> <pre><code>list[start, stop]\n</code></pre> <p>The list <code>index()</code> method accepts a value as a parameter and returns the index of the first value in the list or an exception if the value is not in the list</p> <pre><code>animals = ['man', 'bear', 'pig', 'cow', 'duck', 'horse']\n# Positions man:1, bear:2, pig:3, cow:4, duck:5, horse:6\n\nsome_animals = animals[1:4] # display from item 1 to item 4\nprint('Some animals:    {}'.format(some_animals))\n\nfirst_two = animals[0:2] # display the two first items\nprint('Some animals:    {}'.format(first_two))\n\nfirst_two_again = animals[:2] # display the two first items\nprint('Some animals:    {}'.format(first_two_again))\n\nlast_two = animals[-2:] # display the two last items\nprint('Some animals:    {}'.format(last_two))\n\npart_of_horse = 'horse'[1:3] # display from the first excluded to the third included \nprint(part_of_horse)\n\nprepart_of_horse = 'horse'[:3] # display from the first included to the third included \nprint(prepart_of_horse)\n</code></pre> <p>Output :</p> <pre><code>Some animals:    ['bear', 'pig', 'cow']\nSome animals:    ['man', 'bear']\nSome animals:    ['man', 'bear']\nSome animals:    ['duck', 'horse']\nor\nhor\n</code></pre>"},{"location":"dev/python/#exception-handing","title":"Exception Handing","text":"<pre><code>animals = ['man', 'bear', 'pig']\n\nbear_index = animals.index('bear') # display the bear item position\nprint(bear_index)\n\n# Searching for 'cat' into the animals index\ntry:\n    cat_index = animals.index('cat')\nexcept:\n    cat_index = 'No cats found.'\n\nprint(cat_index)\n</code></pre> <p>Output :</p> <pre><code>1\nNo cats found.\n</code></pre>"},{"location":"dev/python/#loops","title":"Loops","text":"<p>Loop through a list using a for loop.</p> <p>The format is :</p> <pre><code>for item_var in list:\n    # block of code\n</code></pre> <pre><code>animals = ['man', 'bear', 'pig']\nfor animal in animals:\n    print(animal)\n    print(animal.upper()) # to UPPER list\n</code></pre>"},{"location":"dev/python/#while","title":"While","text":"<p>The code block in a while loop executes as long as the condition evaluates to true.</p> <p>The format is :</p> <pre><code>while condition:\n    # block of code\n</code></pre> <pre><code>animals = ['man', 'bear', 'pig']\nwhile animals:\n    print(animals) # while there is an item into the animal intex, print-it\n</code></pre> <pre><code>animals = ['man', 'bear', 'pig', 'cow', 'duck', 'horse']\nanimal_index = 0 # defined var to loop the animals index\n\nwhile animal_index &lt; len(animals): # len = output the number of item.s\n    print(animals[animal_index])\n    animal_index += 1 # increment this variable by listing of the animals index\n</code></pre>"},{"location":"dev/python/#sorting","title":"Sorting","text":"<p>To sort a list, use the <code>sort()</code> list method or the built-in <code>sorted()</code> function.</p> <pre><code>animals = ['man', 'bear', 'pig']\nsorted_animals = sorted(animals) # sorted() = to sort sorted_animals var\nprint('Animals list:              {}'.format(animals))\nprint('Sorted animals list:       {}'.format(sorted_animals))\n\nanimals.sort() # .sort() = to globaly sort animals var\nprint('Animals after sort method: {}'.format(animals))\n</code></pre> <p>Concatenate two list </p> <pre><code>animals = ['man', 'bear', 'pig']\nmore_animals = ['cow', 'duck', 'horse']\nall_animals = animals + more_animals\nprint(all_animals)\n</code></pre> <p>To determine the number of any item of list</p> <pre><code>animals = ['man', 'bear', 'pig']\nprint(len(animals))   # print the number of items\nanimals.append('cow') # add cow item into animals\nprint(len(animals))   # print the number of items (+ cow for now)\n</code></pre>"},{"location":"dev/python/#ranges","title":"Ranges","text":"<p>The built-in <code>range()</code> function generates a list of numbers.</p> <p>The format is :</p> <pre><code>range(start, stop, step)\n</code></pre> <p>Range from the list :</p> <pre><code>for number in range(3): # From 0 included to 3 excluded = 0, 1, 2\n    print(number)\n\nfor number in range(1, 3): # From 1 included to 3 excluded = 1, 2\n    print(number)\n\nfor number in range(1, 10, 2): # From 1 included to 1O excluded steped by 2 = 1, 3, 5, 7, 9\n    print(number)\n</code></pre> <p>Based on the item position :</p> <pre><code>animals = ['man', 'bear', 'pig', 'cow', 'duck', 'horse', 'dog']\nfor number in range(0, len(animals), 2): # from 0 to animals item numbers steped by 2 = man, pig, duck, dog\n    print(animals[number])\n</code></pre>"},{"location":"dev/python/#conclusion","title":"Conclusion","text":"<p>Example of code with sections of Lists merged</p> <pre><code>#!/usr/bin/env python\n\n# var\ntodo_index = []\ndone = False\n\n# while done var is 'False'\nwhile not done:\n    new_task = input('Enter a task for your to-do list. Press &lt;enter&gt; when done: ')\n    if len(new_task) == 0: # if len of new_task is equal to 0\n        done = True\n    else:\n        todo_index.append(new_task) # add entry to the index\n        print('Task has been added.')\n\n# display\nprint()\nprint('Your To-Do list:')\nprint('-' * 16)\n\nfor task in todo_index: # From index, get items\n    print(task)\n</code></pre>"},{"location":"dev/python/#dictionaries","title":"Dictionaries","text":"<p>the dictionary is a data type that</p> <ul> <li>Hold key-value pairs called items.</li> <li>AKA associative arrays, has tables and hases.</li> </ul>"},{"location":"dev/python/#creating","title":"Creating","text":""},{"location":"dev/python/#items","title":"Items","text":"<p>Dictionary referred to as associative arrays hases or hash tables dictionaries using comma-separated items between curly braces</p> <p>Syntax</p> <pre><code>dictionary_name = {key_1: value_1, key_X: value_X}\n\ndictionary_name = {}\n\ndictionary_name[key]\n</code></pre> <p>Value from Key</p> <pre><code>contacts = {'Jason': '555-0123', 'Carl': '555-0987'}\njasons_phone = contacts['Jason']\ncarls_phone = contacts['Carl']\n\nprint('Dial {} to call Jason.'format(jasons_phone))\nprint('Dial {} to call Carl.'format(carls_phone))\n</code></pre>"},{"location":"dev/python/#adding","title":"Adding","text":"<p>Replace Key value from dictionary</p> <pre><code>contacts = {'Jason': '555-0123', 'Carl': '555-0987'}\ncontacts['Jason'] = '555-0000'\njasons_phone = contacts['Jason']\nprint('Dial {} to call Jason.'format(jasons_phone))\n</code></pre> <p>Add Key from dictionary</p> <pre><code>contacts = {'Jason': '555-0123', 'Carl': '555-0987'}\ncontacts = ['Tony'] = '555-0570'\n</code></pre>"},{"location":"dev/python/#removing","title":"Removing","text":"<p>Remove key from dictionary using <code>del</code></p> <pre><code>contacts = {'Jason': '555-0123', 'Carl': '555-0987'}\ndel contacts['Jason']\n</code></pre>"},{"location":"dev/python/#searching","title":"Searching","text":"<p>To verify if certain key is existing into a dictionary</p> <pre><code>contacts = {\n    'Jason': ['555-0123', '555-0000'],\n    'Carl': '555-0987'\n}\n\nif 'Jason' in contacts.keys():\n    print(\"Jason's phone number is:\")\n    print(contacts['Jason'][0])\n\nif 'Tony' in contacts.keys():\n    print(\"Tony's phone number is:\")\n    print(contacts['Tony'][0])\n</code></pre> <p>Output :</p> <pre><code>Jason's phone number is:\n555-0123\n</code></pre>"},{"location":"dev/python/#does-it-exist","title":"Does it exist ?","text":"<p>True or false will be returned</p> <pre><code>contacts = {\n    'Jason': ['555-0123', '555-0000'],\n    'Carl': '555-0987'\n}\nprint('555-0987' in contacts.values())\n</code></pre> <p>Output :</p> <pre><code>True\n</code></pre>"},{"location":"dev/python/#nesting","title":"Nesting","text":"<p>Find multiple items attached to a key from list</p> <pre><code>contacts = {\n    'Jason': ['555-0123', '555-0000'],\n    'Carl': '555-0987'\n}\n\nfor number in contacts['Jason']:\n    print('Phone number: {}'.format(number))\n</code></pre> <p>Output :</p> <pre><code>Phone number: 555-0123\nPhone number: 555-0000\n</code></pre>"},{"location":"dev/python/#looping","title":"Looping","text":"<p>There is the syntax :</p> <pre><code>for key_variable in dictionary_name:\n    # code block\n    # dictionary_name[key_variable]\n\nfor contact in contacts:\n    # code block\n\nfor person in people:\n    # code block\n</code></pre> <p>Example :</p> <pre><code>contacts = {\n    'Jason': ['555-0123', '555-0000'],\n    'Carl': '555-0987'\n}\n\nfor contact in contacts:\n    print('The number for {0} is {1}.'.format(contact, contacts[contact]))\n</code></pre> <p>Output :</p> <pre><code>The number for Jason is ['555-0123', '555-0000'].\nThe number for Carl is 555-0987.\n</code></pre> <p>Equivalent to previous example :</p> <pre><code>contacts = {\n    'Jason': ['555-0123', '555-0000'],\n    'Carl': '555-0987'\n}\n\nfor person, phone_number in contacts.items():\n    print('The number for {0} is {1}.'.format(person, phone_number))\n</code></pre> <p>Index nested :</p> <pre><code>contacts = {\n    'Jason': {\n        'phone': ['555-0123', '555-0000'],\n        'email': 'jsaon@example.com'\n    },\n    'Carl': {\n        'phone': '555-0987',\n        'email': 'carl@example.com'\n    }\n}\n\nfor contact in contacts:\n    print(\"{}'s contact info:\".format(contact))\n    print(contacts[contact]['phone'])\n    print(contacts[contact]['email'])\n\n# or\n\nfor person in contacts:\n    print(\"The {0}'s phone number is {1}. His mail is {2}\".format(person, contacts[person]['phone'], contacts[person]['email']))\n</code></pre> <p>Output :</p> <pre><code>Jason's contact info:\n['555-0123', '555-0000']\njsaon@example.com\nCarl's contact info:\n555-0987\ncarl@example.com\n\n# or\n\nThe Jason's phone number is ['555-0123', '555-0000']. His mail is jsaon@example.com\nThe Carl's phone number is 555-0987. His mail is carl@example.com\n</code></pre>"},{"location":"dev/python/#conclusion_1","title":"Conclusion","text":"<p>Dictionnaries hold key-value pairs, called items</p> <pre><code>dictionary_name = {key_1: value_1, key_X: value_X}\n</code></pre> <p>Access the values stored in a dictionary by key</p> <pre><code>dictionary_name[key]\n</code></pre> <p>Determine if a value exists use the value in <code>dictionary_name.values()</code>, wtich returns a boolean.</p> <p>The <code>values()</code> dictionary method returns a list of the values stored in that dictionary.</p>"},{"location":"dev/python/#tkinter","title":"TKinter","text":"<p>TKinter is a library to manage window.s</p> <p>Example of code :</p> <pre><code>from Tkinter import *\nfenetre = Tk()\nlabel = Label(fenetre, text=\"Exmple de coprs de fen\u00eatre\")\nlabel.pack()\nfenetre.mainloop()\n</code></pre>"},{"location":"dev/python/#customize-window","title":"Customize window","text":"<p>List of elements used to customize a window <code>window = Tk()*</code></p> <ul> <li>window.title(\"My application\")</li> <li>window.geometry(\"720x480\")</li> <li>window.minsize(700, 300)</li> <li>window.iconbitmap(\"image.ico\")</li> <li>window.config(background='#CC0000')</li> </ul>"},{"location":"dev/python/#widget","title":"Widget","text":""},{"location":"dev/python/#checkboxes","title":"Checkboxes","text":"<p>Checkbox list :</p> <pre><code>caseACocher1 = Checkbutton(window, text=\"Box N\u00b01\").pack()\ncaseACocher2 = Checkbutton(window, text=\"Box N\u00b02\").pack()\n...\n</code></pre>"},{"location":"dev/python/#input-field","title":"Input field","text":"<pre><code>value = StringVar()\nvalue.set(\"Text zone\")\nentree = Entry(window, textvariable=value, width=30)\nentree.pack()\n</code></pre>"},{"location":"dev/python/#menu-bar","title":"Menu bar","text":"<p>File menu :</p> <pre><code>file_menu = Menu(menu_bar, tearoff=0)\nfile_menu.add_command(label=\"New\", command=generate_password)\nfile_menu.add_command(label=\"Quit\", command=window.quit)\nmenu_bar.add_cascade(label=\"File\", menu=file_menu)\n</code></pre>"},{"location":"dev/readme/","title":"README","text":"<p>DevOps is the combination of cultural philosophies, practices, and tools that increases an organization's ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes.</p> <p></p>"},{"location":"dev/terraform/","title":"Terraform","text":""},{"location":"dev/terraform/#what-is-terraform","title":"What is Terraform ?","text":"<p>Terraform is an infrastructure as code tool that lets you build, change, and version cloud and on-prem resources safely and efficiently.</p>"},{"location":"dev/terraform/#how-does-it-works","title":"How does it works ?","text":"<p>Terraform creates and manages resources on cloud platforms and other services through their application programming interfaces (APIs). Providers enable Terraform to work with virtually any platform or service with an accessible API.</p> <p>The core Terraform workflow consists of three stages:</p> <ul> <li> <p>Write: You define resources, which may be across multiple cloud providers and services. For example, you might create a configuration to deploy an application on virtual machines in a Virtual Private Cloud (VPC) network with security groups and a load balancer.</p> </li> <li> <p>Plan: Terraform creates an execution plan describing the infrastructure it will create, update, or destroy based on the existing infrastructure and your configuration.</p> </li> <li> <p>Apply: On approval, Terraform performs the proposed operations in the correct order, respecting any resource dependencies. For example, if you update the properties of a VPC and change the number of virtual machines in that VPC, Terraform will recreate the VPC before scaling the virtual machines.</p> </li> </ul> <p></p>"},{"location":"dev/terraform/#installation","title":"Installation","text":""},{"location":"dev/terraform/#ubuntudebian","title":"Ubuntu/Debian","text":"<p>Add keys</p> <pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\n</code></pre> <p>Add repo list</p> <pre><code>echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\n</code></pre> <p>Update and install</p> <pre><code>sudo apt update &amp;&amp; sudo apt install terraform\n</code></pre>"},{"location":"dev/terraform/#syntaxe","title":"Syntaxe","text":"<p>Travaillons sur un fichier <code>main.tf</code></p>"},{"location":"dev/terraform/#exemple","title":"Exemple","text":"<pre><code>output \"VAR\" {\nvalue = \"Hello World! \"\n}\n</code></pre>"},{"location":"dev/terraform/#tfstate","title":"tfstate","text":"<p>tfstate file is equivalent as logfile. It keeps stateS</p>"},{"location":"dev/terraform/#test-apply","title":"Test &amp; Apply","text":""},{"location":"dev/terraform/#test","title":"Test","text":"<pre><code>terraform plan\n</code></pre>"},{"location":"dev/terraform/#apply","title":"Apply","text":"<pre><code>terraform apply\n</code></pre>"},{"location":"dev/terraform/#graph","title":"Graph","text":"<pre><code>terraform graph | dot -Tsvg &gt; graph.svg\n</code></pre> <p>Example code :</p> <pre><code>digraph {\n    compound = \"true\"\n    newrank = \"true\"\n    subgraph \"root\" {\n        \"[root] aws_instance.test_ec2 (expand)\" [label = \"aws_instance.test_ec2\", shape = \"box\"]\n        \"[root] provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\" [label = \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\", shape = \"diamond\"]\n        \"[root] aws_instance.test_ec2 (expand)\" -&gt; \"[root] provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\"\n        \"[root] provider[\\\"registry.terraform.io/hashicorp/aws\\\"] (close)\" -&gt; \"[root] aws_instance.test_ec2 (expand)\"\n        \"[root] root\" -&gt; \"[root] provider[\\\"registry.terraform.io/hashicorp/aws\\\"] (close)\"\n    }\n}\n</code></pre>"},{"location":"dev/terraform/#providers","title":"Providers","text":""},{"location":"dev/terraform/#aws","title":"AWS","text":""},{"location":"dev/terraform/#prerequisites","title":"Prerequisites","text":""},{"location":"dev/terraform/#iam","title":"IAM","text":"<p>Keys :</p> <p></p> <p></p> <p></p> <p></p> <p>Warning</p> <p>Copy somewhere your keys</p> <p></p> <p>Generate keys :</p> <p></p> <p></p> <p>Create instance :</p> <p>Example <code>main.tf</code></p> <ul> <li>key name = key pairs</li> </ul> <pre><code>provider \"aws\" {\nregion     = \"eu-central-1\"\naccess_key = \"*************\"\nsecret_key = \"*******************\"\n}\n\nresource \"aws_instance\" \"test_ec2\" {\nami           = \"ami-0ec7f9846da6b0f61\" # Ubuntu Server 22.04 LTS (HVM)\ninstance_type = \"t2.micro\"\nkey_name      = \"***********\"\n\ntags = {\nName = \"test01\"\n}\n}\n</code></pre>"},{"location":"dev/tower-cli/","title":"Tower-CLI","text":"<p>Tower-cli is a command line tool for Ansible Tower. It allows Tower commands to be easily run from the UNIX command line. It can also be used as a client library for other python apps, or as a reference for others developing API interactions with Tower\u2019s REST API.</p>"},{"location":"dev/tower-cli/#installation","title":"Installation","text":"<p>Installing the ansible tower-cli through two differents methodes. Python Virtual environenment or from git hub</p>"},{"location":"dev/tower-cli/#from-source","title":"From Source","text":"<p>Using the main repository : tower-cli</p> <p>Clone it and make the installation</p> <pre><code>git clone https://github.com/ansible/tower-cli.git\nmake install\n</code></pre>"},{"location":"dev/tower-cli/#python-venv","title":"Python Venv","text":"<p>Use python pip</p> <pre><code>pip install tower-cli\n</code></pre>"},{"location":"dev/tower-cli/#configuration","title":"Configuration","text":"<p>You can configure tower-cli from <code>~/.tower_cli.cfg</code> file situated on your own home or /etc/tower-cli/tower-cli.</p> <p>By default, this file is about :</p> <pre><code>$ tower-cli config\n\n# Defaults.\nverify_ssl: True\nusername:\nformat: human\ninsecure: False\ncolor: True\nuse_token: False\nhost: 127.0.0.1\ncertificate:\noauth_token:\npassword:\nverbose: False\ndescription_on: False\n</code></pre> <p>Let insert element one by one like :</p> <pre><code>tower-cli config username = toto\n</code></pre> <p>or modify the configuration file.</p>"},{"location":"dev/tower-cli/#usage","title":"Usage","text":""},{"location":"dev/tower-cli/#inventories","title":"Inventories","text":"<p>List Hosts by inventory</p> <p>-i : inventory name</p> <p>-a : all (pages)</p> <pre><code>tower-cli host list -i inventoriy_name -a\n</code></pre>"},{"location":"dev/tower-cli/#team","title":"Team","text":"<p>Associate user to team :</p> <pre><code>tower-cli team associate --user user_name --team team_name\n</code></pre>"},{"location":"dev/tower-cli/#group","title":"Group","text":"<p>Associate user to group :</p> <pre><code>tower-cli group associate --user user_name --group group_name\n</code></pre>"},{"location":"dev/tower-cli/#host","title":"Host","text":"<p>Associate host to group :</p> <pre><code>tower-cli host associate --host host_name --group group_name\n</code></pre>"},{"location":"dev/vagrant/","title":"Vagrant","text":""},{"location":"dev/vagrant/#install-from-source","title":"Install from source","text":"<ul> <li>Add hashicorp repository</li> </ul> <pre><code>dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo\n</code></pre> <ul> <li>Installing package</li> </ul> <pre><code>dnf install vagrant\n</code></pre>"},{"location":"dev/vagrant/#init-project","title":"Init project","text":"<pre><code>vagrant init hashicorp/bionic64\n</code></pre> <p>A <code>Vagrantfile</code> has been placed in this directory. You are now ready to <code>vagrant up</code> your first virtual environment! Please read the comments in the Vagrantfile as well as documentation on <code>vagrantup.com</code> for more information on using Vagrant.</p>"},{"location":"dev/python/args-and-kwargs/","title":"Python Args and Kwargs","text":"<p> Python Args and Kwargs </p> <p> Python args and kwargs Made Easy <code>args and <code>*kwargs</code> may seem scary, but the truth is that they are not that difficult to grasp and have the power to grant your functions with lots of flexibility.    <p>Read the article Python *args and **kwargs Made Easy for a more in deep introduction.</p>"},{"location":"dev/python/args-and-kwargs/#args-and-kwargs","title":"Args and Kwargs","text":"<p><code>*args</code> and <code>**kwargs</code> allow you to pass an undefined number of arguments and keywords when calling a function.</p> <pre><code>&gt;&gt;&gt; def some_function(*args, **kwargs):\n...     pass\n...\n&gt;&gt;&gt; # call some_function with any number of arguments\n&gt;&gt;&gt; some_function(arg1, arg2, arg3)\n\n&gt;&gt;&gt; # call some_function with any number of keywords\n&gt;&gt;&gt; some_function(key1=arg1, key2=arg2, key3=arg3)\n\n&gt;&gt;&gt; # call both, arguments and keywords\n&gt;&gt;&gt; some_function(arg, key1=arg1)\n\n&gt;&gt;&gt; # or none\n&gt;&gt;&gt; some_function()\n</code></pre> <p>      Python conventions         The words <code>args and <code>*kwargs</code> are conventions. They are not imposed by the interpreter, but considered good practice by the Python community."},{"location":"dev/python/args-and-kwargs/#args","title":"args","text":"<p>You can access the arguments through the <code>args</code> variable:</p> <pre><code>&gt;&gt;&gt; def some_function(*args):\n...     print(f'Arguments passed: {args} as {type(args)}')\n...\n&gt;&gt;&gt; some_function('arg1', 'arg2', 'arg3')\n# Arguments passed: ('arg1', 'arg2', 'arg3') as &lt;class 'tuple'&gt;\n</code></pre>"},{"location":"dev/python/args-and-kwargs/#kwargs","title":"kwargs","text":"<p>Keywords are accessed through the <code>kwargs</code> variable:</p> <pre><code>&gt;&gt;&gt; def some_function(**kwargs):\n...     print(f'keywords: {kwargs} as {type(kwargs)}')\n...\n&gt;&gt;&gt; some_function(key1='arg1', key2='arg2')\n# keywords: {'key1': 'arg1', 'key2': 'arg2'} as &lt;class 'dict'&gt;\n</code></pre>"},{"location":"dev/python/basics/","title":"Python Basics","text":"<p> Python Basics </p> <p>We all need to start somewhere, so how about doing it here.</p> <p>      From the Python 3 tutorial      Python is an easy to learn, powerful programming language [...] Python\u2019s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development.    </p>"},{"location":"dev/python/basics/#math-operators","title":"Math Operators","text":"<p>From highest to lowest precedence:</p> Operators Operation Example ** Exponent <code>2 ** 3 = 8</code> % Modulus/Remainder <code>22 % 8 = 6</code> // Integer division <code>22 // 8 = 2</code> / Division <code>22 / 8 = 2.75</code> * Multiplication <code>3 * 3 = 9</code> - Subtraction <code>5 - 2 = 3</code> + Addition <code>2 + 2 = 4</code> <p>Examples of expressions:</p> <pre><code>&gt;&gt;&gt; 2 + 3 * 6\n# 20\n\n&gt;&gt;&gt; (2 + 3) * 6\n# 30\n\n&gt;&gt;&gt; 2 ** 8\n#256\n\n&gt;&gt;&gt; 23 // 7\n# 3\n\n&gt;&gt;&gt; 23 % 7\n# 2\n\n&gt;&gt;&gt; (5 - 1) * ((7 + 1) / (3 - 1))\n# 16.0\n</code></pre>"},{"location":"dev/python/basics/#augmented-assignment-operators","title":"Augmented Assignment Operators","text":"Operator Equivalent <code>var += 1</code> <code>var = var + 1</code> <code>var -= 1</code> <code>var = var - 1</code> <code>var *= 1</code> <code>var = var * 1</code> <code>var /= 1</code> <code>var = var / 1</code> <code>var %= 1</code> <code>var = var % 1</code> <p>Examples:</p> <pre><code>&gt;&gt;&gt; greeting = 'Hello'\n&gt;&gt;&gt; greeting += ' world!'\n&gt;&gt;&gt; greeting\n# 'Hello world!'\n\n&gt;&gt;&gt; number = 1\n&gt;&gt;&gt; number += 1\n&gt;&gt;&gt; number\n# 2\n\n&gt;&gt;&gt; my_list = ['item']\n&gt;&gt;&gt; my_list *= 3\n&gt;&gt;&gt; my_list\n# ['item', 'item', 'item']\n</code></pre>"},{"location":"dev/python/basics/#data-types","title":"Data Types","text":"Data Type Examples Integers <code>-2, -1, 0, 1, 2, 3, 4, 5</code> Floating-point numbers <code>-1.25, -1.0, --0.5, 0.0, 0.5, 1.0, 1.25</code> Strings <code>'a', 'aa', 'aaa', 'Hello!', '11 cats'</code>"},{"location":"dev/python/basics/#concatenation-and-replication","title":"Concatenation and Replication","text":"<p>String concatenation:</p> <pre><code>&gt;&gt;&gt; 'Alice' 'Bob'\n# 'AliceBob'\n</code></pre> <p>String replication:</p> <pre><code>&gt;&gt;&gt; 'Alice' * 5\n# 'AliceAliceAliceAliceAlice'\n</code></pre>"},{"location":"dev/python/basics/#variables","title":"Variables","text":"<p>You can name a variable anything as long as it obeys the following rules:</p> <ol> <li>It can be only one word.</li> </ol> <pre><code>&gt;&gt;&gt; # bad\n&gt;&gt;&gt; my variable = 'Hello'\n\n&gt;&gt;&gt; # good\n&gt;&gt;&gt; var = 'Hello'\n</code></pre> <ol> <li>It can use only letters, numbers, and the underscore (<code>_</code>) character.</li> </ol> <pre><code>&gt;&gt;&gt; # bad\n&gt;&gt;&gt; %$@variable = 'Hello'\n\n&gt;&gt;&gt; # good\n&gt;&gt;&gt; my_var = 'Hello'\n\n&gt;&gt;&gt; # good\n&gt;&gt;&gt; my_var_2 = 'Hello'\n</code></pre> <ol> <li>It can\u2019t begin with a number.</li> </ol> <pre><code>&gt;&gt;&gt; # this wont work\n&gt;&gt;&gt; 23_var = 'hello'\n</code></pre> <ol> <li>Variable name starting with an underscore (<code>_</code>) are considered as \"unuseful\".</li> </ol> <pre><code>&gt;&gt;&gt; # _spam should not be used again in the code\n&gt;&gt;&gt; _spam = 'Hello'\n</code></pre>"},{"location":"dev/python/basics/#comments","title":"Comments","text":"<p>Inline comment:</p> <pre><code># This is a comment\n</code></pre> <p>Multiline comment:</p> <pre><code># This is a\n# multiline comment\n</code></pre> <p>Code with a comment:</p> <pre><code>a = 1  # initialization\n</code></pre> <p>Please note the two spaces in front of the comment.</p> <p>Function docstring:</p> <pre><code>def foo():\n\"\"\"\n    This is a function docstring\n    You can also use:\n    ''' Function Docstring '''\n    \"\"\"\n</code></pre>"},{"location":"dev/python/basics/#the-print-function","title":"The print() Function","text":"<p>The <code>print()</code> function writes the value of the argument(s) it is given. [...] it handles multiple arguments, floating point-quantities, and strings. Strings are printed without quotes, and a space is inserted between items, so you can format things nicely:</p> <pre><code>&gt;&gt;&gt; print('Hello world!')\n# Hello world!\n\n&gt;&gt;&gt; a = 1\n&gt;&gt;&gt; print('Hello world!', a)\n# Hello world! 1\n</code></pre>"},{"location":"dev/python/basics/#the-end-keyword","title":"The end keyword","text":"<p>The keyword argument <code>end</code> can be used to avoid the newline after the output, or end the output with a different string:</p> <pre><code>phrase = ['printed', 'with', 'a', 'dash', 'in', 'between']\n&gt;&gt;&gt; for word in phrase:\n...     print(word, end='-')\n...\n# printed-with-a-dash-in-between-\n</code></pre>"},{"location":"dev/python/basics/#the-sep-keyword","title":"The sep keyword","text":"<p>The keyword <code>sep</code> specify how to separate the objects, if there is more than one:</p> <pre><code>print('cats', 'dogs', 'mice', sep=',')\n# cats,dogs,mice\n</code></pre>"},{"location":"dev/python/basics/#the-input-function","title":"The input() Function","text":"<p>This function takes the input from the user and converts it into a string:</p> <pre><code>&gt;&gt;&gt; print('What is your name?')   # ask for their name\n&gt;&gt;&gt; my_name = input()\n&gt;&gt;&gt; print('Hi, {}'.format(my_name))\n# What is your name?\n# Martha\n# Hi, Martha\n</code></pre> <p><code>input()</code> can also set a default message without using <code>print()</code>:</p> <pre><code>&gt;&gt;&gt; my_name = input('What is your name? ')  # default message\n&gt;&gt;&gt; print('Hi, {}'.format(my_name))\n# What is your name? Martha\n# Hi, Martha\n</code></pre> <p>It is also possible to use formatted strings to avoid using .format:</p> <pre><code>&gt;&gt;&gt; my_name = input('What is your name? ')  # default message\n&gt;&gt;&gt; print(f'Hi, {my_name}')\n# What is your name? Martha\n# Hi, Martha\n</code></pre>"},{"location":"dev/python/basics/#the-len-function","title":"The len() Function","text":"<p>Evaluates to the integer value of the number of characters in a string, list, dictionary, etc.:</p> <pre><code>&gt;&gt;&gt; len('hello')\n# 5\n\n&gt;&gt;&gt; len(['cat', 3, 'dog'])\n# 3\n</code></pre> <p> Test of emptiness      Test of emptiness of strings, lists, dictionaries, etc., should not use     <code>len</code>, but prefer direct boolean evaluation.    </p> <p>Test of emptiness example:</p> <pre><code>&gt;&gt;&gt; a = [1, 2, 3]\n\n# bad\n&gt;&gt;&gt; if len(a) &gt; 0:  # evaluates to True\n...     print(\"the list is not empty!\")\n...\n# the list is not empty!\n\n# good\n&gt;&gt;&gt; if a: # evaluates to True\n...     print(\"the list is not empty!\")\n...\n# the list is not empty!\n</code></pre>"},{"location":"dev/python/basics/#the-str-int-and-float-functions","title":"The str(), int(), and float() Functions","text":"<p>These functions allow you to change the type of variable. For example, you can transform from an <code>integer</code> or <code>float</code> to a <code>string</code>:</p> <pre><code>&gt;&gt;&gt; str(29)\n# '29'\n\n&gt;&gt;&gt; str(-3.14)\n# '-3.14'\n</code></pre> <p>Or from a <code>string</code> to an <code>integer</code> or <code>float</code>:</p> <pre><code>&gt;&gt;&gt; int('11')\n# 11\n\n&gt;&gt;&gt; float('3.14')\n# 3.14\n</code></pre>"},{"location":"dev/python/built-in-functions/","title":"Python built-in functions","text":"<p> Python Built-in Functions </p> <p>The Python interpreter has a number of functions and types built into it that are always available.</p>"},{"location":"dev/python/built-in-functions/#python-built-in-functions","title":"Python built-in Functions","text":"Function Description abs() Return the absolute value of a number. aiter() Return an asynchronous iterator for an asynchronous iterable. all() Return True if all elements of the iterable are true. any() Return True if any element of the iterable is true. ascii() Return a string with a printable representation of an object. bin() Convert an integer number to a binary string. bool() Return a Boolean value. breakpoint() Drops you into the debugger at the call site. bytearray() Return a new array of bytes. bytes() Return a new \u201cbytes\u201d object. callable() Return True if the object argument is callable, False if not. chr() Return the string representing a character. classmethod() Transform a method into a class method. compile() Compile the source into a code or AST object. complex() Return a complex number with the value real + imag*1j. delattr() Deletes the named attribute, provided the object allows it. dict() Create a new dictionary. dir() Return the list of names in the current local scope. divmod() Return a pair of numbers consisting of their quotient and remainder. enumerate() Return an enumerate object. eval() Evaluates and executes an expression. exec() This function supports dynamic execution of Python code. filter() Construct an iterator from an iterable and returns true. float() Return a floating point number from a number or string. format() Convert a value to a \u201cformatted\u201d representation. frozenset() Return a new frozenset object. getattr() Return the value of the named attribute of object. globals() Return the dictionary implementing the current module namespace. hasattr() True if the string is the name of one of the object\u2019s attributes. hash() Return the hash value of the object. help() Invoke the built-in help system. hex() Convert an integer number to a lowercase hexadecimal string. id() Return the \u201cidentity\u201d of an object. input() This function takes an input and converts it into a string. int() Return an integer object constructed from a number or string. isinstance() Return True if the object argument is an instance of an object. issubclass() Return True if class is a subclass of classinfo. iter() Return an iterator object. len() Return the length (the number of items) of an object. list() Rather than being a function, list is a mutable sequence type. locals() Update and return a dictionary with the current local symbol table. map() Return an iterator that applies function to every item of iterable. max() Return the largest item in an iterable. min() Return the smallest item in an iterable. next() Retrieve the next item from the iterator. object() Return a new featureless object. oct() Convert an integer number to an octal string. open() Open file and return a corresponding file object. ord() Return an integer representing the Unicode code point of a character. pow() Return base to the power exp. print() Print objects to the text stream file. property() Return a property attribute. repr() Return a string containing a printable representation of an object. reversed() Return a reverse iterator. round() Return number rounded to ndigits precision after the decimal point. set() Return a new set object. setattr() This is the counterpart of getattr(). slice() Return a sliced object representing a set of indices. sorted() Return a new sorted list from the items in iterable. staticmethod() Transform a method into a static method. str() Return a str version of object. sum() Sums start and the items of an iterable. super() Return a proxy object that delegates method calls to a parent or sibling. tuple() Rather than being a function, is actually an immutable sequence type. type() Return the type of an object. vars() Return the dict attribute for any other object with a dict attribute. zip() Iterate over several iterables in parallel. import() This function is invoked by the import statement."},{"location":"dev/python/comprehensions/","title":"Python Comprehensions","text":"<p> Python Comprehensions </p> <p>List Comprehensions are a special kind of syntax that let us create lists out of other lists, and are incredibly useful when dealing with numbers and with one or two levels of nested for loops.</p> <p>      From the Python 3 tutorial      List comprehensions provide a concise way to create lists. [...] or to create a subsequence of those elements that satisfy a certain condition.    </p> <p>Read Python Comprehensions: A step by step Introduction for a more in-deep or introduction.</p>"},{"location":"dev/python/comprehensions/#list-comprehension","title":"List comprehension","text":"<p>This is how we create a new list from an existing collection with a For Loop:</p> <pre><code>&gt;&gt;&gt; names = ['Charles', 'Susan', 'Patrick', 'George']\n\n&gt;&gt;&gt; new_list = []\n&gt;&gt;&gt; for n in names:\n...     new_list.append(n)\n...\n&gt;&gt;&gt; new_list\n# ['Charles', 'Susan', 'Patrick', 'George']\n</code></pre> <p>And this is how we do the same with a List Comprehension:</p> <pre><code>&gt;&gt;&gt; names = ['Charles', 'Susan', 'Patrick', 'George']\n\n&gt;&gt;&gt; new_list = [n for n in names]\n&gt;&gt;&gt; new_list\n# ['Charles', 'Susan', 'Patrick', 'George']\n</code></pre> <p>We can do the same with numbers:</p> <pre><code>&gt;&gt;&gt; n = [(a, b) for a in range(1, 3) for b in range(1, 3)]\n&gt;&gt;&gt; n\n# [(1, 1), (1, 2), (2, 1), (2, 2)]\n</code></pre>"},{"location":"dev/python/comprehensions/#adding-conditionals","title":"Adding conditionals","text":"<p>If we want <code>new_list</code> to have only the names that start with C, with a for loop, we would do it like this:</p> <pre><code>&gt;&gt;&gt; names = ['Charles', 'Susan', 'Patrick', 'George', 'Carol']\n\n&gt;&gt;&gt; new_list = []\n&gt;&gt;&gt; for n in names:\n...     if n.startswith('C'):\n...         new_list.append(n)\n...\n&gt;&gt;&gt; print(new_list)\n# ['Charles', 'Carol']\n</code></pre> <p>In a List Comprehension, we add the <code>if</code> statement at the end:</p> <pre><code>&gt;&gt;&gt; new_list = [n for n in names if n.startswith('C')]\n&gt;&gt;&gt; print(new_list)\n# ['Charles', 'Carol']\n</code></pre> <p>To use an <code>if-else</code> statement in a List Comprehension:</p> <pre><code>&gt;&gt;&gt; nums = [1, 2, 3, 4, 5, 6]\n&gt;&gt;&gt; new_list = [num*2 if num % 2 == 0 else num for num in nums]\n&gt;&gt;&gt; print(new_list)\n# [1, 4, 3, 8, 5, 12]\n</code></pre> <p>      Set and Dict comprehensions         The basics of <code>list</code> comprehensions also apply to sets and dictionaries.    </p>"},{"location":"dev/python/comprehensions/#set-comprehension","title":"Set comprehension","text":"<pre><code>&gt;&gt;&gt; b = {\"abc\", \"def\"}\n&gt;&gt;&gt; {s.upper() for s in b}\n{\"ABC\", \"DEF\"}\n</code></pre>"},{"location":"dev/python/comprehensions/#dict-comprehension","title":"Dict comprehension","text":"<pre><code>&gt;&gt;&gt; c = {'name': 'Pooka', 'age': 5}\n&gt;&gt;&gt; {v: k for k, v in c.items()}\n{'Pooka': 'name', 5: 'age'}\n</code></pre> <p>A List comprehension can be generated from a dictionary:</p> <pre><code>&gt;&gt;&gt; c = {'name': 'Pooka', 'first_name': 'Oooka'}\n&gt;&gt;&gt; [\"{}:{}\".format(k.upper(), v.upper()) for k, v in c.items()]\n['NAME:POOKA', 'FIRST_NAME:OOOKA']\n</code></pre>"},{"location":"dev/python/context-manager/","title":"Python Context Manager","text":"<p> Python Context Manager </p> <p>While Python's context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes.</p>"},{"location":"dev/python/context-manager/#the-with-statement","title":"The with statement","text":"<p>A context manager is an object that is notified when a context (a block of code) starts and ends. You commonly use one with the <code>with</code> statement. It takes care of the notifying.</p> <p>For example, file objects are context managers. When a context ends, the file object is closed automatically:</p> <pre><code>&gt;&gt;&gt; with open(filename) as f:\n...     file_contents = f.read()\n...\n&gt;&gt;&gt; # the open_file object has automatically been closed.\n</code></pre> <p>Anything that ends execution of the block causes the context manager's exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager, you can ensure that precautions are always taken to prevent damage or loss in this way.</p>"},{"location":"dev/python/context-manager/#writing-your-own-context-manager","title":"Writing your own context manager","text":"<p>It is also possible to write a context manager using generator syntax thanks to the <code>contextlib.contextmanager</code> decorator:</p> <pre><code>&gt;&gt;&gt; import contextlib\n&gt;&gt;&gt; @contextlib.contextmanager\n... def context_manager(num):\n...     print('Enter')\n...     yield num + 1\n...     print('Exit')\n...\n&gt;&gt;&gt; with context_manager(2) as cm:\n...     # the following instructions are run when\n...     # the 'yield' point of the context manager is\n...     # reached. 'cm' will have the value that was yielded\n...     print('Right in the middle with cm = {}'.format(cm))\n...\n# Enter\n# Right in the middle with cm = 3\n# Exit\n</code></pre>"},{"location":"dev/python/context-manager/#class-based-context-manager","title":"Class based context manager","text":"<p>You can define class based context manager. The key methods are <code>__enter__</code> and <code>__exit__</code> <pre><code>class ContextManager:\n    def __enter__(self, *args, **kwargs):\n        print(\"--enter--\")\n\n    def __exit__(self, *args):\n        print(\"--exit--\")\n\n\nwith ContextManager():\n    print(\"test\")\n#--enter--\n#test\n#--exit--\n</code></pre></p>"},{"location":"dev/python/control-flow/","title":"Python Control Flow","text":"<p> Python Control Flow </p> <p>      Python control flow       Control flow is the order in which individual statements, instructions, or function calls are executed or evaluated. The control flow of a Python program is regulated by conditional statements, loops, and function calls.    </p>"},{"location":"dev/python/control-flow/#comparison-operators","title":"Comparison Operators","text":"Operator Meaning <code>==</code> Equal to <code>!=</code> Not equal to <code>&lt;</code> Less than <code>&gt;</code> Greater Than <code>&lt;=</code> Less than or Equal to <code>&gt;=</code> Greater than or Equal to <p>These operators evaluate to True or False depending on the values you give them.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; 42 == 42\nTrue\n\n&gt;&gt;&gt; 40 == 42\nFalse\n\n&gt;&gt;&gt; 'hello' == 'hello'\nTrue\n\n&gt;&gt;&gt; 'hello' == 'Hello'\nFalse\n\n&gt;&gt;&gt; 'dog' != 'cat'\nTrue\n\n&gt;&gt;&gt; 42 == 42.0\nTrue\n\n&gt;&gt;&gt; 42 == '42'\nFalse\n</code></pre>"},{"location":"dev/python/control-flow/#boolean-operators","title":"Boolean Operators","text":"<p>There are three Boolean operators: <code>and</code>, <code>or</code>, and <code>not</code>.</p> <p>The <code>and</code> Operator\u2019s Truth Table:</p> Expression Evaluates to <code>True and True</code> <code>True</code> <code>True and False</code> <code>False</code> <code>False and True</code> <code>False</code> <code>False and False</code> <code>False</code> <p>The <code>or</code> Operator\u2019s Truth Table:</p> Expression Evaluates to <code>True or True</code> <code>True</code> <code>True or False</code> <code>True</code> <code>False or True</code> <code>True</code> <code>False or False</code> <code>False</code> <p>The <code>not</code> Operator\u2019s Truth Table:</p> Expression Evaluates to <code>not True</code> <code>False</code> <code>not False</code> <code>True</code>"},{"location":"dev/python/control-flow/#mixing-operators","title":"Mixing Operators","text":"<p>You can mix boolean and comparison operators:</p> <pre><code>&gt;&gt;&gt; (4 &lt; 5) and (5 &lt; 6)\nTrue\n\n&gt;&gt;&gt; (4 &lt; 5) and (9 &lt; 6)\nFalse\n\n&gt;&gt;&gt; (1 == 2) or (2 == 2)\nTrue\n</code></pre> <p>Also, you can mix use multiple Boolean operators in an expression, along with the comparison operators:</p> <pre><code>&gt;&gt;&gt; 2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2\nTrue\n</code></pre>"},{"location":"dev/python/control-flow/#if-statements","title":"if Statements","text":"<p>The <code>if</code> statement evaluates an expression, and if that expression is <code>True</code>, it then executes the following indented code:</p> <pre><code>&gt;&gt;&gt; name = 'Debora'\n\n&gt;&gt;&gt; if name == 'Debora':\n...    print('Hi, Debora')\n...\n# Hi, Debora\n\n&gt;&gt;&gt; if name != 'George':\n...    print('You are not George')\n...\n# You are not George\n</code></pre> <p>The <code>else</code> statement executes only if the evaluation of the <code>if</code> and all the <code>elif</code> expressions are <code>False</code>:</p> <pre><code>&gt;&gt;&gt; name = 'Debora'\n\n&gt;&gt;&gt; if name == 'George':\n...    print('Hi, George.')\n... else:\n...    print('You are not George')\n...\n# You are not George\n</code></pre> <p>Only after the <code>if</code> statement expression is <code>False</code>, the <code>elif</code> statement is evaluated and executed:</p> <pre><code>&gt;&gt;&gt; name = 'George'\n\n&gt;&gt;&gt; if name == 'Debora':\n...    print('Hi Debora!')\n... elif name == 'George':\n...    print('Hi George!')\n...\n# Hi George!\n</code></pre> <p>the <code>elif</code> and <code>else</code> parts are optional.</p> <pre><code>&gt;&gt;&gt; name = 'Antony'\n\n&gt;&gt;&gt; if name == 'Debora':\n...    print('Hi Debora!')\n... elif name == 'George':\n...    print('Hi George!')\n... else:\n...    print('Who are you?')\n...\n# Who are you?\n</code></pre>"},{"location":"dev/python/control-flow/#ternary-conditional-operator","title":"Ternary Conditional Operator","text":"<p>Many programming languages have a ternary operator, which define a conditional expression. The most common usage is to make a terse, simple conditional assignment statement. In other words, it offers one-line code to evaluate the first expression if the condition is true, and otherwise it evaluates the second expression.</p> <pre><code>&lt;expression1&gt; if &lt;condition&gt; else &lt;expression2&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;&gt;&gt; age = 15\n\n&gt;&gt;&gt; # this if statement:\n&gt;&gt;&gt; if age &lt; 18:\n...    print('kid')\n... else:\n...    print('adult')\n...\n# output: kid\n\n&gt;&gt;&gt; # is equivalent to this ternary operator:\n&gt;&gt;&gt; print('kid' if age &lt; 18 else 'adult')\n# output: kid\n</code></pre> <p>Ternary operators can be chained:</p> <pre><code>&gt;&gt;&gt; age = 15\n\n&gt;&gt;&gt; # this ternary operator:\n&gt;&gt;&gt; print('kid' if age &lt; 13 else 'teen' if age &lt; 18 else 'adult')\n\n&gt;&gt;&gt; # is equivalent to this if statement:\n&gt;&gt;&gt; if age &lt; 18:\n...     if age &lt; 13:\n...         print('kid')\n...     else:\n...         print('teen')\n... else:\n...     print('adult')\n...\n# output: teen\n</code></pre>"},{"location":"dev/python/control-flow/#switch-case-statement","title":"Switch-Case Statement","text":"<p>      Switch-Case statements       In computer programming languages, a switch statement is a type of selection control mechanism used to allow the value of a variable or expression to change the control flow of program execution via search and map.    </p> <p>The Switch-Case statements, or Structural Pattern Matching, was firstly introduced in 2020 via PEP 622, and then officially released with Python 3.10 in September 2022.</p> <p>      Official Tutorial       The PEP 636 provides an official tutorial for the Python Pattern matching or Switch-Case statements.    </p>"},{"location":"dev/python/control-flow/#matching-single-values","title":"Matching single values","text":"<pre><code>&gt;&gt;&gt; response_code = 201\n&gt;&gt;&gt; match response_code:\n...     case 200:\n...         print(\"OK\")\n...     case 201:\n...         print(\"Created\")\n...     case 300:\n...         print(\"Multiple Choices\")\n...     case 307:\n...         print(\"Temporary Redirect\")\n...     case 404:\n...         print(\"404 Not Found\")\n...     case 500:\n...         print(\"Internal Server Error\")\n...     case 502:\n...         print(\"502 Bad Gateway\")\n...\n# Created\n</code></pre>"},{"location":"dev/python/control-flow/#matching-with-the-or-pattern","title":"Matching with the or Pattern","text":"<p>In this example, the pipe character (<code>|</code> or <code>or</code>) allows python to return the same response for two or more cases.</p> <pre><code>&gt;&gt;&gt; response_code = 502\n&gt;&gt;&gt; match response_code:\n...     case 200 | 201:\n...         print(\"OK\")\n...     case 300 | 307:\n...         print(\"Redirect\")\n...     case 400 | 401:\n...         print(\"Bad Request\")\n...     case 500 | 502:\n...         print(\"Internal Server Error\")\n...\n# Internal Server Error\n</code></pre>"},{"location":"dev/python/control-flow/#matching-by-the-length-of-an-iterable","title":"Matching by the length of an Iterable","text":"<pre><code>&gt;&gt;&gt; today_responses = [200, 300, 404, 500]\n&gt;&gt;&gt; match today_responses:\n...     case [a]:\n...             print(f\"One response today: {a}\")\n...     case [a, b]:\n...             print(f\"Two responses today: {a} and {b}\")\n...     case [a, b, *rest]:\n...             print(f\"All responses: {a}, {b}, {rest}\")\n...\n# All responses: 200, 300, [404, 500]\n</code></pre>"},{"location":"dev/python/control-flow/#default-value","title":"Default value","text":"<p>The underscore symbol (<code>_</code>) is used to define a default case:</p> <pre><code>&gt;&gt;&gt; response_code = 800\n&gt;&gt;&gt; match response_code:\n...     case 200 | 201:\n...         print(\"OK\")\n...     case 300 | 307:\n...         print(\"Redirect\")\n...     case 400 | 401:\n...         print(\"Bad Request\")\n...     case 500 | 502:\n...         print(\"Internal Server Error\")\n...     case _:\n...         print(\"Invalid Code\")\n...\n# Invalid Code\n</code></pre>"},{"location":"dev/python/control-flow/#matching-builtin-classes","title":"Matching Builtin Classes","text":"<pre><code>&gt;&gt;&gt; response_code = \"300\"\n&gt;&gt;&gt; match response_code:\n...     case int():\n...             print('Code is a number')\n...     case str():\n...             print('Code is a string')\n...     case _:\n...             print('Code is neither a string nor a number')\n...\n# Code is a string\n</code></pre>"},{"location":"dev/python/control-flow/#guarding-match-case-statements","title":"Guarding Match-Case Statements","text":"<pre><code>&gt;&gt;&gt; response_code = 300\n&gt;&gt;&gt; match response_code:\n...     case int():\n...             if response_code &gt; 99 and response_code &lt; 500:\n...                 print('Code is a valid number')\n...     case _:\n...             print('Code is an invalid number')\n...\n# Code is a valid number\n</code></pre>"},{"location":"dev/python/control-flow/#while-loop-statements","title":"while Loop Statements","text":"<p>The while statement is used for repeated execution as long as an expression is <code>True</code>:</p> <pre><code>&gt;&gt;&gt; spam = 0\n&gt;&gt;&gt; while spam &lt; 5:\n...     print('Hello, world.')\n...     spam = spam + 1\n...\n# Hello, world.\n# Hello, world.\n# Hello, world.\n# Hello, world.\n# Hello, world.\n</code></pre>"},{"location":"dev/python/control-flow/#break-statements","title":"break Statements","text":"<p>If the execution reaches a <code>break</code> statement, it immediately exits the <code>while</code> loop\u2019s clause:</p> <pre><code>&gt;&gt;&gt; while True:\n...     name = input('Please type your name: ')\n...     if name == 'your name':\n...         break\n...\n&gt;&gt;&gt; print('Thank you!')\n# Please type your name: your name\n# Thank you!\n</code></pre>"},{"location":"dev/python/control-flow/#continue-statements","title":"continue Statements","text":"<p>When the program execution reaches a <code>continue</code> statement, the program execution immediately jumps back to the start of the loop.</p> <pre><code>&gt;&gt;&gt; while True:\n...     name = input('Who are you? ')\n...     if name != 'Joe':\n...         continue\n...     password = input('Password? (It is a fish.): ')\n...     if password == 'swordfish':\n...         break\n...\n&gt;&gt;&gt; print('Access granted.')\n# Who are you? Charles\n# Who are you? Debora\n# Who are you? Joe\n# Password? (It is a fish.): swordfish\n# Access granted.\n</code></pre>"},{"location":"dev/python/control-flow/#for-loop","title":"For loop","text":"<p>The <code>for</code> loop iterates over a <code>list</code>, <code>tuple</code>, <code>dictionary</code>, <code>set</code> or <code>string</code>:</p> <pre><code>&gt;&gt;&gt; pets = ['Bella', 'Milo', 'Loki']\n&gt;&gt;&gt; for pet in pets:\n...     print(pet)\n...\n# Bella\n# Milo\n# Loki\n</code></pre>"},{"location":"dev/python/control-flow/#the-range-function","title":"The range() function","text":"<p>The <code>range()</code> function returns a sequence of numbers. It starts from 0, increments by 1, and stops before a specified number:</p> <pre><code>&gt;&gt;&gt; for i in range(5):\n...     print(f'Will stop at 5! or 4? ({i})')\n...\n# Will stop at 5! or 4? (0)\n# Will stop at 5! or 4? (1)\n# Will stop at 5! or 4? (2)\n# Will stop at 5! or 4? (3)\n# Will stop at 5! or 4? (4)\n</code></pre> <p>The <code>range()</code> function can also modify it's 3 defaults arguments. The first two will be the <code>start</code> and <code>stop</code> values, and the third will be the <code>step</code> argument. The step is the amount that the variable is increased by after each iteration.</p> <pre><code># range(start, stop, step)\n&gt;&gt;&gt; for i in range(0, 10, 2):\n...    print(i)\n...\n# 0\n# 2\n# 4\n# 6\n# 8\n</code></pre> <p>You can even use a negative number for the step argument to make the for loop count down instead of up.</p> <pre><code>&gt;&gt;&gt; for i in range(5, -1, -1):\n...     print(i)\n...\n# 5\n# 4\n# 3\n# 2\n# 1\n# 0\n</code></pre>"},{"location":"dev/python/control-flow/#for-else-statement","title":"For else statement","text":"<p>This allows to specify a statement to execute in case of the full loop has been executed. Only useful when a <code>break</code> condition can occur in the loop:</p> <pre><code>&gt;&gt;&gt; for i in [1, 2, 3, 4, 5]:\n...    if i == 3:\n...        break\n... else:\n...    print(\"only executed when no item is equal to 3\")\n</code></pre>"},{"location":"dev/python/control-flow/#ending-a-program-with-sysexit","title":"Ending a Program with sys.exit()","text":"<p><code>exit()</code> function allows exiting Python.</p> <pre><code>&gt;&gt;&gt; import sys\n\n&gt;&gt;&gt; while True:\n...     feedback = input('Type exit to exit: ')\n...     if feedback == 'exit':\n...         print(f'You typed {feedback}.')\n...         sys.exit()\n...\n# Type exit to exit: open\n# Type exit to exit: close\n# Type exit to exit: exit\n# You typed exit\n</code></pre>"},{"location":"dev/python/dataclasses/","title":"Python Dataclasses","text":"<p> Python Dataclasses </p> <p><code>Dataclasses</code> are python classes, but are suited for storing data objects. This module provides a decorator and functions for automatically adding generated special methods such as <code>__init__()</code> and <code>__repr__()</code> to user-defined classes.</p>"},{"location":"dev/python/dataclasses/#features","title":"Features","text":"<ol> <li> <p>They store data and represent a certain data type. Ex: A number. For people familiar with ORMs, a model instance is a data object. It represents a specific kind of entity. It holds attributes that define or represent the entity.</p> </li> <li> <p>They can be compared to other objects of the same type. Ex: A number can be greater than, less than, or equal to another number.</p> </li> </ol> <p>Python 3.7 provides a decorator dataclass that is used to convert a class into a dataclass.</p> <pre><code>&gt;&gt;&gt; class Number:\n...     def __init__(self, val):\n...         self.val = val\n...\n&gt;&gt;&gt; obj = Number(2)\n&gt;&gt;&gt; obj.val\n# 2\n</code></pre> <p>with dataclass</p> <pre><code>&gt;&gt;&gt; @dataclass\n... class Number:\n...     val: int\n...\n&gt;&gt;&gt; obj = Number(2)\n&gt;&gt;&gt; obj.val\n# 2\n</code></pre>"},{"location":"dev/python/dataclasses/#default-values","title":"Default values","text":"<p>It is easy to add default values to the fields of your data class.</p> <pre><code>&gt;&gt;&gt; @dataclass\n... class Product:\n...     name: str\n...     count: int = 0\n...     price: float = 0.0\n...\n&gt;&gt;&gt; obj = Product(\"Python\")\n&gt;&gt;&gt; obj.name\n# Python\n\n&gt;&gt;&gt; obj.count\n# 0\n\n&gt;&gt;&gt; obj.price\n# 0.0\n</code></pre>"},{"location":"dev/python/dataclasses/#type-hints","title":"Type hints","text":"<p>It is mandatory to define the data type in dataclass. However, If you would rather not specify the datatype then, use <code>typing.Any</code>.</p> <pre><code>&gt;&gt;&gt; from dataclasses import dataclass\n&gt;&gt;&gt; from typing import Any\n\n&gt;&gt;&gt; @dataclass\n... class WithoutExplicitTypes:\n...    name: Any\n...    value: Any = 42\n</code></pre>"},{"location":"dev/python/debugging/","title":"Python Debugging","text":"<p> Python Debugging </p> <p> Finding and resolving bugs      In computer programming and software development, debugging is the process of finding and resolving bugs (defects or problems that prevent correct operation) within computer programs, software, or systems.    </p>"},{"location":"dev/python/debugging/#raising-exceptions","title":"Raising Exceptions","text":"<p>Exceptions are raised with a raise statement. In code, a raise statement consists of the following:</p> <ul> <li>The <code>raise</code> keyword</li> <li>A call to the <code>Exception()</code> function</li> <li>A string with a helpful error message passed to the <code>Exception()</code> function</li> </ul> <pre><code>&gt;&gt;&gt; raise Exception('This is the error message.')\n# Traceback (most recent call last):\n#   File \"&lt;pyshell#191&gt;\", line 1, in &lt;module&gt;\n#     raise Exception('This is the error message.')\n# Exception: This is the error message.\n</code></pre> <p>Typically, it\u2019s the code that calls the function, not the function itself, that knows how to handle an exception. So, you will commonly see a raise statement inside a function and the <code>try</code> and <code>except</code> statements in the code calling the function.</p> <pre><code>&gt;&gt;&gt; def box_print(symbol, width, height):\n...     if len(symbol) != 1:\n...       raise Exception('Symbol must be a single character string.')\n...     if width &lt;= 2:\n...       raise Exception('Width must be greater than 2.')\n...     if height &lt;= 2:\n...       raise Exception('Height must be greater than 2.')\n...     print(symbol * width)\n...     for i in range(height - 2):\n...         print(symbol + (' ' * (width - 2)) + symbol)\n...     print(symbol * width)\n...\n&gt;&gt;&gt; for sym, w, h in (('*', 4, 4), ('O', 20, 5), ('x', 1, 3), ('ZZ', 3, 3)):\n...     try:\n...         box_print(sym, w, h)\n...     except Exception as err:\n...         print('An exception happened: ' + str(err))\n...\n# ****\n# *  *\n# *  *\n# ****\n# OOOOOOOOOOOOOOOOOOOO\n# O                  O\n# O                  O\n# O                  O\n# OOOOOOOOOOOOOOOOOOOO\n# An exception happened: Width must be greater than 2.\n# An exception happened: Symbol must be a single character string.\n</code></pre> <p>Read more about Exception Handling.</p>"},{"location":"dev/python/debugging/#getting-the-traceback-as-a-string","title":"Getting the Traceback as a string","text":"<p>The <code>traceback</code> is displayed by Python whenever a raised exception goes unhandled. But can also obtain it as a string by calling traceback.format_exc(). This function is useful if you want the information from an exception\u2019s traceback but also want an except statement to gracefully handle the exception. You will need to import Python\u2019s traceback module before calling this function.</p> <pre><code>&gt;&gt;&gt; import traceback\n\n&gt;&gt;&gt; try:\n...     raise Exception('This is the error message.')\n&gt;&gt;&gt; except:\n...     with open('errorInfo.txt', 'w') as error_file:\n...         error_file.write(traceback.format_exc())\n...     print('The traceback info was written to errorInfo.txt.')\n...\n# 116\n# The traceback info was written to errorInfo.txt.\n</code></pre> <p>The 116 is the return value from the <code>write()</code> method, since 116 characters were written to the file. The <code>traceback</code> text was written to errorInfo.txt.</p> <pre><code>Traceback (most recent call last):\n  File \"&lt;pyshell#28&gt;\", line 2, in &lt;module&gt;\nException: This is the error message.\n</code></pre>"},{"location":"dev/python/debugging/#assertions","title":"Assertions","text":"<p>An assertion is a sanity check to make sure your code isn\u2019t doing something obviously wrong. These sanity checks are performed by <code>assert</code> statements. If the sanity check fails, then an <code>AssertionError</code> exception is raised. In code, an <code>assert</code> statement consists of the following:</p> <ul> <li>The <code>assert</code> keyword</li> <li>A condition (that is, an expression that evaluates to <code>True</code> or <code>False</code>)</li> <li>A comma</li> <li>A <code>string</code> to display when the condition is <code>False</code></li> </ul> <pre><code>&gt;&gt;&gt; pod_bay_door_status = 'open'\n&gt;&gt;&gt; assert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'\n\n&gt;&gt;&gt; pod_bay_door_status = 'I\\'m sorry, Dave. I\\'m afraid I can\\'t do that.'\n&gt;&gt;&gt; assert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'\n# Traceback (most recent call last):\n#   File \"&lt;pyshell#10&gt;\", line 1, in &lt;module&gt;\n#     assert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'\n# AssertionError: The pod bay doors need to be \"open\".\n</code></pre> <p>In plain English, an assert statement says, \u201cI assert that this condition holds true, and if not, there is a bug somewhere in the program.\u201d Unlike exceptions, your code should not handle assert statements with try and except; if an assert fails, your program should crash. By failing fast like this, you shorten the time between the original cause of the bug and when you first notice the bug. This will reduce the amount of code you will have to check before finding the code that\u2019s causing the bug.</p>"},{"location":"dev/python/debugging/#disabling-assertions","title":"Disabling Assertions","text":"<p>Assertions can be disabled by passing the <code>-O</code> option when running Python.</p>"},{"location":"dev/python/debugging/#logging","title":"Logging","text":"<p>To enable the <code>logging</code> module to display log messages on your screen as your program runs, copy the following to the top of your program:</p> <pre><code>&gt;&gt;&gt; import logging\n&gt;&gt;&gt; logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')\n</code></pre> <p>Say you wrote a function to calculate the factorial of a number. In mathematics, factorial 4 is 1 \u00d7 2 \u00d7 3 \u00d7 4, or 24. Factorial 7 is 1 \u00d7 2 \u00d7 3 \u00d7 4 \u00d7 5 \u00d7 6 \u00d7 7, or 5,040. Open a new file editor window and enter the following code. It has a bug in it, but you will also enter several log messages to help yourself figure out what is going wrong. Save the program as factorialLog.py.</p> <pre><code>&gt;&gt;&gt; import logging\n&gt;&gt;&gt; logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')\n&gt;&gt;&gt; logging.debug('Start of program')\n\n&gt;&gt;&gt; def factorial(n):\n...     logging.debug('Start of factorial(%s)' % (n))\n...     total = 1\n...     for i in range(1, n + 1):\n...         total *= i\n...         logging.debug('i is ' + str(i) + ', total is ' + str(total))\n...     logging.debug('End of factorial(%s)' % (n))\n...     return total\n...\n&gt;&gt;&gt; print(factorial(5))\n&gt;&gt;&gt; logging.debug('End of program')\n# 2015-05-23 16:20:12,664 - DEBUG - Start of program\n# 2015-05-23 16:20:12,664 - DEBUG - Start of factorial(5)\n# 2015-05-23 16:20:12,665 - DEBUG - i is 0, total is 0\n# 2015-05-23 16:20:12,668 - DEBUG - i is 1, total is 0\n# 2015-05-23 16:20:12,670 - DEBUG - i is 2, total is 0\n# 2015-05-23 16:20:12,673 - DEBUG - i is 3, total is 0\n# 2015-05-23 16:20:12,675 - DEBUG - i is 4, total is 0\n# 2015-05-23 16:20:12,678 - DEBUG - i is 5, total is 0\n# 2015-05-23 16:20:12,680 - DEBUG - End of factorial(5)\n# 0\n# 2015-05-23 16:20:12,684 - DEBUG - End of program\n</code></pre>"},{"location":"dev/python/debugging/#logging-levels","title":"Logging Levels","text":"<p>Logging levels provide a way to categorize your log messages by importance. There are five logging levels, described in Table 10-1 from least to most important. Messages can be logged at each level using a different logging function.</p> Level Logging Function Description <code>DEBUG</code> <code>logging.debug()</code> The lowest level. Used for small details. Usually you care about these messages only when diagnosing problems. <code>INFO</code> <code>logging.info()</code> Used to record information on general events in your program or confirm that things are working at their point in the program. <code>WARNING</code> <code>logging.warning()</code> Used to indicate a potential problem that doesn\u2019t prevent the program from working but might do so in the future. <code>ERROR</code> <code>logging.error()</code> Used to record an error that caused the program to fail to do something. <code>CRITICAL</code> <code>logging.critical()</code> The highest level. Used to indicate a fatal error that has caused or is about to cause the program to stop running entirely."},{"location":"dev/python/debugging/#disabling-logging","title":"Disabling Logging","text":"<p>After you\u2019ve debugged your program, you probably don\u2019t want all these log messages cluttering the screen. The logging.disable() function disables these so that you don\u2019t have to go into your program and remove all the logging calls by hand.</p> <pre><code>&gt;&gt;&gt; import logging\n\n&gt;&gt;&gt; logging.basicConfig(level=logging.INFO, format=' %(asctime)s -%(levelname)s - %(message)s')\n&gt;&gt;&gt; logging.critical('Critical error! Critical error!')\n# 2015-05-22 11:10:48,054 - CRITICAL - Critical error! Critical error!\n\n&gt;&gt;&gt; logging.disable(logging.CRITICAL)\n&gt;&gt;&gt; logging.critical('Critical error! Critical error!')\n&gt;&gt;&gt; logging.error('Error! Error!')\n</code></pre>"},{"location":"dev/python/debugging/#logging-to-a-file","title":"Logging to a File","text":"<p>Instead of displaying the log messages to the screen, you can write them to a text file. The <code>logging.basicConfig()</code> function takes a filename keyword argument, like so:</p> <pre><code>&gt;&gt;&gt; import logging\n&gt;&gt;&gt; logging.basicConfig(filename='myProgramLog.txt', level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')\n</code></pre>"},{"location":"dev/python/dictionaries/","title":"Python Dictionaries","text":"<p> Python Dictionaries </p> <p>In Python, a dictionary is an ordered (from Python &gt; 3.7) collection of <code>key</code>: <code>value</code> pairs.</p> <p>      From the Python 3 documentation      The main operations on a dictionary are storing a value with some key and extracting the value given the key. It is also possible to delete a key:value pair with <code>del</code>.    </p> <p>Example Dictionary:</p> <pre><code>my_cat = {\n    'size': 'fat',\n    'color': 'gray',\n    'disposition': 'loud'\n}\n</code></pre>"},{"location":"dev/python/dictionaries/#set-key-value-using-subscript-operator","title":"Set key, value using subscript operator <code>[]</code>","text":"<pre><code>&gt;&gt;&gt; my_cat = {\n...  'size': 'fat',\n...  'color': 'gray',\n...  'disposition': 'loud',\n... }\n&gt;&gt;&gt; my_cat['age_years'] = 2\n&gt;&gt;&gt; print(my_cat)\n...\n# {'size': 'fat', 'color': 'gray', 'disposition': 'loud', 'age_years': 2}\n</code></pre>"},{"location":"dev/python/dictionaries/#get-value-using-subscript-operator","title":"Get value using subscript operator <code>[]</code>","text":"<p>In case the key is not present in dictionary <code>KeyError</code> is raised.</p> <pre><code>&gt;&gt;&gt; my_cat = {\n...  'size': 'fat',\n...  'color': 'gray',\n...  'disposition': 'loud',\n... }\n&gt;&gt;&gt; print(my_cat['size'])\n...\n# fat\n&gt;&gt;&gt; print(my_cat['eye_color'])\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# KeyError: 'eye_color'\n</code></pre>"},{"location":"dev/python/dictionaries/#values","title":"values()","text":"<p>The <code>values()</code> method gets the values of the dictionary:</p> <pre><code>&gt;&gt;&gt; pet = {'color': 'red', 'age': 42}\n&gt;&gt;&gt; for value in pet.values():\n...     print(value)\n...\n# red\n# 42\n</code></pre>"},{"location":"dev/python/dictionaries/#keys","title":"keys()","text":"<p>The <code>keys()</code> method gets the keys of the dictionary:</p> <pre><code>&gt;&gt;&gt; pet = {'color': 'red', 'age': 42}\n&gt;&gt;&gt; for key in pet.keys():\n...     print(key)\n...\n# color\n# age\n</code></pre> <p>There is no need to use .keys() since by default you will loop through keys:</p> <pre><code>&gt;&gt;&gt; pet = {'color': 'red', 'age': 42}\n&gt;&gt;&gt; for key in pet:\n...     print(key)\n...\n# color\n# age\n</code></pre>"},{"location":"dev/python/dictionaries/#items","title":"items()","text":"<p>The <code>items()</code> method gets the items of a dictionary and returns them as a Tuple:</p> <pre><code>&gt;&gt;&gt; pet = {'color': 'red', 'age': 42}\n&gt;&gt;&gt; for item in pet.items():\n...     print(item)\n...\n# ('color', 'red')\n# ('age', 42)\n</code></pre> <p>Using the <code>keys()</code>, <code>values()</code>, and <code>items()</code> methods, a for loop can iterate over the keys, values, or key-value pairs in a dictionary, respectively.</p> <pre><code>&gt;&gt;&gt; pet = {'color': 'red', 'age': 42}\n&gt;&gt;&gt; for key, value in pet.items():\n...     print(f'Key: {key} Value: {value}')\n...\n# Key: color Value: red\n# Key: age Value: 42\n</code></pre>"},{"location":"dev/python/dictionaries/#get","title":"get()","text":"<p>The <code>get()</code> method returns the value of an item with the given key. If the key doesn't exist, it returns <code>None</code>:</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33}\n\n&gt;&gt;&gt; f'My wife name is {wife.get(\"name\")}'\n# 'My wife name is Rose'\n\n&gt;&gt;&gt; f'She is {wife.get(\"age\")} years old.'\n# 'She is 33 years old.'\n\n&gt;&gt;&gt; f'She is deeply in love with {wife.get(\"husband\")}'\n# 'She is deeply in love with None'\n</code></pre> <p>You can also change the default <code>None</code> value to one of your choice:</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33}\n\n&gt;&gt;&gt; f'She is deeply in love with {wife.get(\"husband\", \"lover\")}'\n# 'She is deeply in love with lover'\n</code></pre>"},{"location":"dev/python/dictionaries/#adding-items-with-setdefault","title":"Adding items with setdefault()","text":"<p>It's possible to add an item to a dictionary in this way:</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33}\n&gt;&gt;&gt; if 'has_hair' not in wife:\n...     wife['has_hair'] = True\n</code></pre> <p>Using the <code>setdefault</code> method, we can make the same code more short:</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33}\n&gt;&gt;&gt; wife.setdefault('has_hair', True)\n&gt;&gt;&gt; wife\n# {'name': 'Rose', 'age': 33, 'has_hair': True}\n</code></pre>"},{"location":"dev/python/dictionaries/#removing-items","title":"Removing Items","text":""},{"location":"dev/python/dictionaries/#pop","title":"pop()","text":"<p>The <code>pop()</code> method removes and returns an item based on a given key.</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33, 'hair': 'brown'}\n&gt;&gt;&gt; wife.pop('age')\n# 33\n&gt;&gt;&gt; wife\n# {'name': 'Rose', 'hair': 'brown'}\n</code></pre>"},{"location":"dev/python/dictionaries/#popitem","title":"popitem()","text":"<p>The <code>popitem()</code> method removes the last item in a dictionary and returns it.</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33, 'hair': 'brown'}\n&gt;&gt;&gt; wife.popitem()\n# ('hair', 'brown')\n&gt;&gt;&gt; wife\n# {'name': 'Rose', 'age': 33}\n</code></pre>"},{"location":"dev/python/dictionaries/#del","title":"del()","text":"<p>The <code>del()</code> method removes an item based on a given key.</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33, 'hair': 'brown'}\n&gt;&gt;&gt; del wife['age']\n&gt;&gt;&gt; wife\n# {'name': 'Rose', 'hair': 'brown'}\n</code></pre>"},{"location":"dev/python/dictionaries/#clear","title":"clear()","text":"<p>The<code>clear()</code> method removes all the items in a dictionary.</p> <pre><code>&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33, 'hair': 'brown'}\n&gt;&gt;&gt; wife.clear()\n&gt;&gt;&gt; wife\n# {}\n</code></pre>"},{"location":"dev/python/dictionaries/#checking-keys-in-a-dictionary","title":"Checking keys in a Dictionary","text":"<pre><code>&gt;&gt;&gt; person = {'name': 'Rose', 'age': 33}\n\n&gt;&gt;&gt; 'name' in person.keys()\n# True\n\n&gt;&gt;&gt; 'height' in person.keys()\n# False\n\n&gt;&gt;&gt; 'skin' in person # You can omit keys()\n# False\n</code></pre>"},{"location":"dev/python/dictionaries/#checking-values-in-a-dictionary","title":"Checking values in a Dictionary","text":"<pre><code>&gt;&gt;&gt;  person = {'name': 'Rose', 'age': 33}\n\n&gt;&gt;&gt; 'Rose' in person.values()\n# True\n\n&gt;&gt;&gt; 33 in person.values()\n# True\n</code></pre>"},{"location":"dev/python/dictionaries/#pretty-printing","title":"Pretty Printing","text":"<pre><code>&gt;&gt;&gt; import pprint\n\n&gt;&gt;&gt; wife = {'name': 'Rose', 'age': 33, 'has_hair': True, 'hair_color': 'brown', 'height': 1.6, 'eye_color': 'brown'}\n&gt;&gt;&gt; pprint.pprint(wife)\n# {'age': 33,\n#  'eye_color': 'brown',\n#  'hair_color': 'brown',\n#  'has_hair': True,\n#  'height': 1.6,\n#  'name': 'Rose'}\n</code></pre>"},{"location":"dev/python/dictionaries/#merge-two-dictionaries","title":"Merge two dictionaries","text":"<p>For Python 3.5+:</p> <pre><code>&gt;&gt;&gt; dict_a = {'a': 1, 'b': 2}\n&gt;&gt;&gt; dict_b = {'b': 3, 'c': 4}\n&gt;&gt;&gt; dict_c = {**dict_a, **dict_b}\n&gt;&gt;&gt; dict_c\n# {'a': 1, 'b': 3, 'c': 4}\n</code></pre>"},{"location":"dev/python/exception-handling/","title":"Python Exception Handling","text":"<p> Python Exception Handling </p> <p> Exception handling      In computing and computer programming, exception handling is the process of responding to the occurrence of exceptions \u2013 anomalous or exceptional conditions requiring special processing.    </p> <p>Python has many built-in exceptions that are raised when a program encounters an error, and most external libraries, like the popular Requests, include his own custom exceptions that we will need to deal to.</p>"},{"location":"dev/python/exception-handling/#basic-exception-handling","title":"Basic exception handling","text":"<p>You can't divide by zero, that is a mathematical true, and if you try to do it in Python, the interpreter will raise the built-in exception ZeroDivisionError:</p> <pre><code>&gt;&gt;&gt; def divide(dividend , divisor):\n...     print(dividend / divisor)\n...\n&gt;&gt;&gt; divide(dividend=10, divisor=5)\n# 5\n\n&gt;&gt;&gt; divide(dividend=10, divisor=0)\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# ZeroDivisionError: division by zero\n</code></pre> <p>Let's say we don't want our program to stop its execution or show the user an output he will not understand. Say we want to print a useful and clear message, then we need to handle the exception with the <code>try</code> and <code>except</code> keywords:</p> <pre><code>&gt;&gt;&gt; def divide(dividend , divisor):\n...     try:\n...         print(dividend / divisor)\n...     except ZeroDivisionError:\n...         print('You can not divide by 0')\n...\n&gt;&gt;&gt; divide(dividend=10, divisor=5)\n# 5\n\n&gt;&gt;&gt; divide(dividend=10, divisor=0)\n# You can not divide by 0\n</code></pre>"},{"location":"dev/python/exception-handling/#final-code-in-exception-handling","title":"Final code in exception handling","text":"<p>The code inside the <code>finally</code> section is always executed, no matter if an exception has been raised or not:</p> <pre><code>&gt;&gt;&gt; def divide(dividend , divisor):\n...     try:\n...         print(dividend / divisor)\n...     except ZeroDivisionError:\n...         print('You can not divide by 0')\n...     finally:\n...         print('Execution finished')\n...\n&gt;&gt;&gt; divide(dividend=10, divisor=5)\n# 5\n# Execution finished\n\n&gt;&gt;&gt; divide(dividend=10, divisor=0)\n# You can not divide by 0\n# Execution finished\n</code></pre>"},{"location":"dev/python/exception-handling/#custom-exceptions","title":"Custom Exceptions","text":"<p>Custom exceptions initialize by creating a <code>class</code> that inherits from the base <code>Exception</code> class of Python, and are raised using the <code>raise</code> keyword:</p> <pre><code>&gt;&gt;&gt; class MyCustomException(Exception):\n...     pass\n...\n&gt;&gt;&gt; raise MyCustomException\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# __main__.MyCustomException\n</code></pre> <p>To declare a custom exception message, you can pass it as a parameter:</p> <pre><code>&gt;&gt;&gt; class MyCustomException(Exception):\n...     pass\n...\n&gt;&gt;&gt; raise MyCustomException('A custom message for my custom exception')\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# __main__.MyCustomException: A custom message for my custom exception\n</code></pre> <p>Handling a custom exception is the same as any other:</p> <pre><code>&gt;&gt;&gt; try:\n...     raise MyCustomException('A custom message for my custom exception')\n&gt;&gt;&gt; except MyCustomException:\n...     print('My custom exception was raised')\n...\n# My custom exception was raised\n</code></pre>"},{"location":"dev/python/file-directory-path/","title":"File and directory Paths","text":"<p> Handling file and directory Paths </p> <p>There are two main modules in Python that deal with path manipulation. One is the <code>os.path</code> module and the other is the <code>pathlib</code> module.</p> <p>      os.path VS pathlib         The <code>pathlib</code> module was added in Python 3.4, offering an object-oriented way to handle file system paths.    </p>"},{"location":"dev/python/file-directory-path/#linux-and-windows-paths","title":"Linux and Windows Paths","text":"<p>On Windows, paths are written using backslashes (<code>\\</code>) as the separator between folder names. On Unix based operating system such as macOS, Linux, and BSDs, the forward slash (<code>/</code>) is used as the path separator. Joining paths can be a headache if your code needs to work on different platforms.</p> <p>Fortunately, Python provides easy ways to handle this. We will showcase how to deal with both, <code>os.path.join</code> and <code>pathlib.Path.joinpath</code></p> <p>Using <code>os.path.join</code> on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.path.join('usr', 'bin', 'spam')\n# 'usr\\\\bin\\\\spam'\n</code></pre> <p>And using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; print(Path('usr').joinpath('bin').joinpath('spam'))\n# usr/bin/spam\n</code></pre> <p><code>pathlib</code> also provides a shortcut to joinpath using the <code>/</code> operator:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; print(Path('usr') / 'bin' / 'spam')\n# usr/bin/spam\n</code></pre> <p>Notice the path separator is different between Windows and Unix based operating system, that's why you want to use one of the above methods instead of adding strings together to join paths together.</p> <p>Joining paths is helpful if you need to create different file paths under the same directory.</p> <p>Using <code>os.path.join</code> on Windows:</p> <pre><code>&gt;&gt;&gt; my_files = ['accounts.txt', 'details.csv', 'invite.docx']\n\n&gt;&gt;&gt; for filename in my_files:\n...     print(os.path.join('C:\\\\Users\\\\asweigart', filename))\n...\n# C:\\Users\\asweigart\\accounts.txt\n# C:\\Users\\asweigart\\details.csv\n# C:\\Users\\asweigart\\invite.docx\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; my_files = ['accounts.txt', 'details.csv', 'invite.docx']\n&gt;&gt;&gt; home = Path.home()\n&gt;&gt;&gt; for filename in my_files:\n...     print(home / filename)\n...\n# /home/asweigart/accounts.txt\n# /home/asweigart/details.csv\n# /home/asweigart/invite.docx\n</code></pre>"},{"location":"dev/python/file-directory-path/#the-current-working-directory","title":"The current working directory","text":"<p>Using <code>os</code> on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.getcwd()\n# 'C:\\\\Python34'\n&gt;&gt;&gt; os.chdir('C:\\\\Windows\\\\System32')\n\n&gt;&gt;&gt; os.getcwd()\n# 'C:\\\\Windows\\\\System32'\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; from os import chdir\n\n&gt;&gt;&gt; print(Path.cwd())\n# /home/asweigart\n\n&gt;&gt;&gt; chdir('/usr/lib/python3.6')\n&gt;&gt;&gt; print(Path.cwd())\n# /usr/lib/python3.6\n</code></pre>"},{"location":"dev/python/file-directory-path/#creating-new-folders","title":"Creating new folders","text":"<p>Using <code>os</code> on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.makedirs('C:\\\\delicious\\\\walnut\\\\waffles')\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; cwd = Path.cwd()\n&gt;&gt;&gt; (cwd / 'delicious' / 'walnut' / 'waffles').mkdir()\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n#   File \"/usr/lib/python3.6/pathlib.py\", line 1226, in mkdir\n#     self._accessor.mkdir(self, mode)\n#   File \"/usr/lib/python3.6/pathlib.py\", line 387, in wrapped\n#     return strfunc(str(pathobj), *args)\n# FileNotFoundError: [Errno 2] No such file or directory: '/home/asweigart/delicious/walnut/waffles'\n</code></pre> <p>Oh no, we got a nasty error! The reason is that the 'delicious' directory does not exist, so we cannot make the 'walnut' and the 'waffles' directories under it. To fix this, do:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; cwd = Path.cwd()\n&gt;&gt;&gt; (cwd / 'delicious' / 'walnut' / 'waffles').mkdir(parents=True)\n</code></pre> <p>And all is good :)</p>"},{"location":"dev/python/file-directory-path/#absolute-vs-relative-paths","title":"Absolute vs. Relative paths","text":"<p>There are two ways to specify a file path.</p> <ul> <li>An absolute path, which always begins with the root folder</li> <li>A relative path, which is relative to the program\u2019s current working directory</li> </ul> <p>There are also the dot (<code>.</code>) and dot-dot (<code>..</code>) folders. These are not real folders, but special names that can be used in a path. A single period (\u201cdot\u201d) for a folder name is shorthand for \u201cthis directory.\u201d Two periods (\u201cdot-dot\u201d) means \u201cthe parent folder.\u201d</p>"},{"location":"dev/python/file-directory-path/#handling-absolute-paths","title":"Handling Absolute paths","text":"<p>To see if a path is an absolute path:</p> <p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.path.isabs('/')\n# True\n\n&gt;&gt;&gt; os.path.isabs('..')\n# False\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; Path('/').is_absolute()\n# True\n\n&gt;&gt;&gt; Path('..').is_absolute()\n# False\n</code></pre> <p>You can extract an absolute path with both <code>os.path</code> and <code>pathlib</code></p> <p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.getcwd()\n'/home/asweigart'\n\n&gt;&gt;&gt; os.path.abspath('..')\n'/home'\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>from pathlib import Path\nprint(Path.cwd())\n# /home/asweigart\n\nprint(Path('..').resolve())\n# /home\n</code></pre>"},{"location":"dev/python/file-directory-path/#handling-relative-paths","title":"Handling Relative paths","text":"<p>You can get a relative path from a starting path to another path.</p> <p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.path.relpath('/etc/passwd', '/')\n# 'etc/passwd'\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; print(Path('/etc/passwd').relative_to('/'))\n# etc/passwd\n</code></pre>"},{"location":"dev/python/file-directory-path/#path-and-file-validity","title":"Path and File validity","text":""},{"location":"dev/python/file-directory-path/#checking-if-a-filedirectory-exists","title":"Checking if a file/directory exists","text":"<p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.path.exists('.')\n# True\n\n&gt;&gt;&gt; os.path.exists('setup.py')\n# True\n\n&gt;&gt;&gt; os.path.exists('/etc')\n# True\n\n&gt;&gt;&gt; os.path.exists('nonexistentfile')\n# False\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>from pathlib import Path\n\n&gt;&gt;&gt; Path('.').exists()\n# True\n\n&gt;&gt;&gt; Path('setup.py').exists()\n# True\n\n&gt;&gt;&gt; Path('/etc').exists()\n# True\n\n&gt;&gt;&gt; Path('nonexistentfile').exists()\n# False\n</code></pre>"},{"location":"dev/python/file-directory-path/#checking-if-a-path-is-a-file","title":"Checking if a path is a file","text":"<p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.path.isfile('setup.py')\n# True\n\n&gt;&gt;&gt; os.path.isfile('/home')\n# False\n\n&gt;&gt;&gt; os.path.isfile('nonexistentfile')\n# False\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; Path('setup.py').is_file()\n# True\n\n&gt;&gt;&gt; Path('/home').is_file()\n# False\n\n&gt;&gt;&gt; Path('nonexistentfile').is_file()\n# False\n</code></pre>"},{"location":"dev/python/file-directory-path/#checking-if-a-path-is-a-directory","title":"Checking if a path is a directory","text":"<p>Using <code>os.path</code> on *nix:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.path.isdir('/')\n# True\n\n&gt;&gt;&gt; os.path.isdir('setup.py')\n# False\n\n&gt;&gt;&gt; os.path.isdir('/spam')\n# False\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; Path('/').is_dir()\n# True\n\n&gt;&gt;&gt; Path('setup.py').is_dir()\n# False\n\n&gt;&gt;&gt; Path('/spam').is_dir()\n# False\n</code></pre>"},{"location":"dev/python/file-directory-path/#getting-a-files-size-in-bytes","title":"Getting a file's size in bytes","text":"<p>Using <code>os.path</code> on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.path.getsize('C:\\\\Windows\\\\System32\\\\calc.exe')\n# 776192\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; stat = Path('/bin/python3.6').stat()\n&gt;&gt;&gt; print(stat) # stat contains some other information about the file as well\n# os.stat_result(st_mode=33261, st_ino=141087, st_dev=2051, st_nlink=2, st_uid=0,\n# --snip--\n# st_gid=0, st_size=10024, st_atime=1517725562, st_mtime=1515119809, st_ctime=1517261276)\n\n&gt;&gt;&gt; print(stat.st_size) # size in bytes\n# 10024\n</code></pre>"},{"location":"dev/python/file-directory-path/#listing-directories","title":"Listing directories","text":"<p>Listing directory contents using <code>os.listdir</code> on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.listdir('C:\\\\Windows\\\\System32')\n# ['0409', '12520437.cpx', '12520850.cpx', '5U877.ax', 'aaclient.dll',\n# --snip--\n# 'xwtpdui.dll', 'xwtpw32.dll', 'zh-CN', 'zh-HK', 'zh-TW', 'zipfldr.dll']\n</code></pre> <p>Listing directory contents using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; for f in Path('/usr/bin').iterdir():\n...     print(f)\n...\n# ...\n# /usr/bin/tiff2rgba\n# /usr/bin/iconv\n# /usr/bin/ldd\n# /usr/bin/cache_restore\n# /usr/bin/udiskie\n# /usr/bin/unix2dos\n# /usr/bin/t1reencode\n# /usr/bin/epstopdf\n# /usr/bin/idle3\n# ...\n</code></pre>"},{"location":"dev/python/file-directory-path/#directory-file-sizes","title":"Directory file sizes","text":"<p>      WARNING         Directories themselves also have a size! So, you might want to check for whether a path is a file or directory using the methods in the methods discussed in the above section.    </p> <p>Using <code>os.path.getsize()</code> and <code>os.listdir()</code> together on Windows:</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; total_size = 0\n\n&gt;&gt;&gt; for filename in os.listdir('C:\\\\Windows\\\\System32'):\n...     total_size = total_size + os.path.getsize(os.path.join('C:\\\\Windows\\\\System32', filename))\n...\n&gt;&gt;&gt; print(total_size)\n# 1117846456\n</code></pre> <p>Using <code>pathlib</code> on *nix:</p> <pre><code>&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; total_size = 0\n&gt;&gt;&gt; for sub_path in Path('/usr/bin').iterdir():\n...     total_size += sub_path.stat().st_size\n...\n&gt;&gt;&gt; print(total_size)\n# 1903178911\n</code></pre>"},{"location":"dev/python/file-directory-path/#copying-files-and-folders","title":"Copying files and folders","text":"<p>The <code>shutil</code> module provides functions for copying files, as well as entire folders.</p> <pre><code>&gt;&gt;&gt; import shutil, os\n\n&gt;&gt;&gt; os.chdir('C:\\\\')\n&gt;&gt;&gt; shutil.copy('C:\\\\spam.txt', 'C:\\\\delicious')\n# C:\\\\delicious\\\\spam.txt'\n\n&gt;&gt;&gt; shutil.copy('eggs.txt', 'C:\\\\delicious\\\\eggs2.txt')\n# 'C:\\\\delicious\\\\eggs2.txt'\n</code></pre> <p>While <code>shutil.copy()</code> will copy a single file, <code>shutil.copytree()</code> will copy an entire folder and every folder and file contained in it:</p> <pre><code>&gt;&gt;&gt; import shutil, os\n\n&gt;&gt;&gt; os.chdir('C:\\\\')\n&gt;&gt;&gt; shutil.copytree('C:\\\\bacon', 'C:\\\\bacon_backup')\n# 'C:\\\\bacon_backup'\n</code></pre>"},{"location":"dev/python/file-directory-path/#moving-and-renaming","title":"Moving and Renaming","text":"<pre><code>&gt;&gt;&gt; import shutil\n\n&gt;&gt;&gt; shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')\n# 'C:\\\\eggs\\\\bacon.txt'\n</code></pre> <p>The destination path can also specify a filename. In the following example, the source file is moved and renamed:</p> <pre><code>&gt;&gt;&gt; shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs\\\\new_bacon.txt')\n# 'C:\\\\eggs\\\\new_bacon.txt'\n</code></pre> <p>If there is no eggs folder, then <code>move()</code> will rename bacon.txt to a file named eggs:</p> <pre><code>&gt;&gt;&gt; shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')\n# 'C:\\\\eggs'\n</code></pre>"},{"location":"dev/python/file-directory-path/#deleting-files-and-folders","title":"Deleting files and folders","text":"<ul> <li> <p>Calling <code>os.unlink(path)</code> or <code>Path.unlink()</code> will delete the file at path.</p> </li> <li> <p>Calling <code>os.rmdir(path)</code> or <code>Path.rmdir()</code> will delete the folder at path. This folder must be empty of any files or folders.</p> </li> <li> <p>Calling <code>shutil.rmtree(path)</code> will remove the folder at path, and all files and folders it contains will also be deleted.</p> </li> </ul>"},{"location":"dev/python/file-directory-path/#walking-a-directory-tree","title":"Walking a Directory Tree","text":"<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt;\n&gt;&gt;&gt; for folder_name, subfolders, filenames in os.walk('C:\\\\delicious'):\n...     print(f'The current folder is {folder_name}')\n...     for subfolder in subfolders:\n...         print('SUBFOLDER OF {folder_name}: {subfolder}')\n...     for filename in filenames:\n...         print('FILE INSIDE {folder_name}: filename{filename}')\n...     print('')\n...\n# The current folder is C:\\delicious\n# SUBFOLDER OF C:\\delicious: cats\n# SUBFOLDER OF C:\\delicious: walnut\n# FILE INSIDE C:\\delicious: spam.txt\n\n# The current folder is C:\\delicious\\cats\n# FILE INSIDE C:\\delicious\\cats: catnames.txt\n# FILE INSIDE C:\\delicious\\cats: zophie.jpg\n\n# The current folder is C:\\delicious\\walnut\n# SUBFOLDER OF C:\\delicious\\walnut: waffles\n\n# The current folder is C:\\delicious\\walnut\\waffles\n# FILE INSIDE C:\\delicious\\walnut\\waffles: butter.txt\n</code></pre> <p>      Pathlib vs Os Module    <code>pathlib</code> provides a lot more functionality than the ones listed above, like getting file name, getting file extension, reading/writing a file without manually opening it, etc. See the official documentation if you intend to know more.    </p>"},{"location":"dev/python/functions/","title":"Python Functions","text":"<p> Python Functions </p> <p> Programming Functions      A function is a block of organized code that is used to perform a single task. They provide better modularity for your application and reuse-ability.    </p>"},{"location":"dev/python/functions/#function-arguments","title":"Function Arguments","text":"<p>A function can take <code>arguments</code> and <code>return values</code>:</p> <p>In the following example, the function say_hello receives the argument \"name\" and prints a greeting:</p> <pre><code>&gt;&gt;&gt; def say_hello(name):\n...    print(f'Hello {name}')\n...\n&gt;&gt;&gt; say_hello('Carlos')\n# Hello Carlos\n\n&gt;&gt;&gt; say_hello('Wanda')\n# Hello Wanda\n\n&gt;&gt;&gt; say_hello('Rose')\n# Hello Rose\n</code></pre>"},{"location":"dev/python/functions/#keyword-arguments","title":"Keyword Arguments","text":"<p>To improve code readability, we should be as explicit as possible. We can achieve this in our functions by using <code>Keyword Arguments</code>:</p> <pre><code>&gt;&gt;&gt; def say_hi(name, greeting):\n...    print(f\"{greeting} {name}\")\n...\n&gt;&gt;&gt; # without keyword arguments\n&gt;&gt;&gt; say_hi('John', 'Hello')\n# Hello John\n\n&gt;&gt;&gt; # with keyword arguments\n&gt;&gt;&gt; say_hi(name='Anna', greeting='Hi')\n# Hi Anna\n</code></pre>"},{"location":"dev/python/functions/#return-values","title":"Return Values","text":"<p>When creating a function using the <code>def</code> statement, you can specify what the return value should be with a <code>return</code> statement. A return statement consists of the following:</p> <ul> <li> <p>The <code>return</code> keyword.</p> </li> <li> <p>The value or expression that the function should return.</p> </li> </ul> <pre><code>&gt;&gt;&gt; def sum_two_numbers(number_1, number_2):\n...    return number_1 + number_2\n...\n&gt;&gt;&gt; result = sum_two_numbers(7, 8)\n&gt;&gt;&gt; print(result)\n# 15\n</code></pre>"},{"location":"dev/python/functions/#local-and-global-scope","title":"Local and Global Scope","text":"<ul> <li> <p>Code in the global scope cannot use any local variables.</p> </li> <li> <p>However, a local scope can access global variables.</p> </li> <li> <p>Code in a function\u2019s local scope cannot use variables in any other local scope.</p> </li> <li> <p>You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.</p> </li> </ul> <pre><code>global_variable = 'I am available everywhere'\n\n&gt;&gt;&gt; def some_function():\n...     print(global_variable)  # because is global\n...     local_variable = \"only available within this function\"\n...     print(local_variable)\n...\n&gt;&gt;&gt; # the following code will throw error because\n&gt;&gt;&gt; # 'local_variable' only exists inside 'some_function'\n&gt;&gt;&gt; print(local_variable)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 10, in &lt;module&gt;\nNameError: name 'local_variable' is not defined\n</code></pre>"},{"location":"dev/python/functions/#the-global-statement","title":"The global Statement","text":"<p>If you need to modify a global variable from within a function, use the global statement:</p> <pre><code>&gt;&gt;&gt; def spam():\n...     global eggs\n...     eggs = 'spam'\n...\n&gt;&gt;&gt; eggs = 'global'\n&gt;&gt;&gt; spam()\n&gt;&gt;&gt; print(eggs)\n</code></pre> <p>There are four rules to tell whether a variable is in a local scope or global scope:</p> <ol> <li> <p>If a variable is being used in the global scope (that is, outside all functions), then it is always a global variable.</p> </li> <li> <p>If there is a global statement for that variable in a function, it is a global variable.</p> </li> <li> <p>Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.</p> </li> <li> <p>But if the variable is not used in an assignment statement, it is a global variable.</p> </li> </ol>"},{"location":"dev/python/functions/#lambda-functions","title":"Lambda Functions","text":"<p>In Python, a lambda function is a single-line, anonymous function, which can have any number of arguments, but it can only have one expression.</p> <p>      From the Python 3 Tutorial      lambda is a minimal function definition that can be used inside an expression. Unlike FunctionDef, body holds a single node.    </p> <p>      Single line expression         Lambda functions can only evaluate an expression, like a single line of code.    </p> <p>This function:</p> <pre><code>&gt;&gt;&gt; def add(x, y):\n...     return x + y\n...\n&gt;&gt;&gt; add(5, 3)\n# 8\n</code></pre> <p>Is equivalent to the lambda function:</p> <pre><code>&gt;&gt;&gt; add = lambda x, y: x + y\n&gt;&gt;&gt; add(5, 3)\n# 8\n</code></pre> <p>Like regular nested functions, lambdas also work as lexical closures:</p> <pre><code>&gt;&gt;&gt; def make_adder(n):\n...     return lambda x: x + n\n...\n&gt;&gt;&gt; plus_3 = make_adder(3)\n&gt;&gt;&gt; plus_5 = make_adder(5)\n\n&gt;&gt;&gt; plus_3(4)\n# 7\n&gt;&gt;&gt; plus_5(4)\n# 9\n</code></pre>"},{"location":"dev/python/json-yaml/","title":"Python Json and YAML","text":"<p> JSON and YAML </p>"},{"location":"dev/python/json-yaml/#json","title":"JSON","text":"<p>JSON stands for JavaScript Object Notation and is a lightweight format for storing and transporting data. Json is often used when data is sent from a server to a web page.</p> <pre><code>&gt;&gt;&gt; import json\n&gt;&gt;&gt; with open(\"filename.json\", \"r\") as f:\n...     content = json.load(f)\n</code></pre> <p>Write a JSON file with:</p> <pre><code>&gt;&gt;&gt; import json\n\n&gt;&gt;&gt; content = {\"name\": \"Joe\", \"age\": 20}\n&gt;&gt;&gt; with open(\"filename.json\", \"w\") as f:\n...     json.dump(content, f, indent=2)\n</code></pre>"},{"location":"dev/python/json-yaml/#yaml","title":"YAML","text":"<p>Compared to JSON, YAML allows a much better human maintainability and gives ability to add comments. It is a convenient choice for configuration files where a human will have to edit.</p> <p>There are two main libraries allowing to access to YAML files:</p> <ul> <li>PyYaml</li> <li>Ruamel.yaml</li> </ul> <p>Install them using <code>pip install</code> in your virtual environment.</p> <p>The first one is easier to use but the second one, Ruamel, implements much better the YAML specification, and allow for example to modify a YAML content without altering comments.</p> <p>Open a YAML file with:</p> <pre><code>&gt;&gt;&gt; from ruamel.yaml import YAML\n\n&gt;&gt;&gt; with open(\"filename.yaml\") as f:\n...     yaml=YAML()\n...     yaml.load(f)\n</code></pre>"},{"location":"dev/python/json-yaml/#anyconfig","title":"Anyconfig","text":"<p>Anyconfig is a very handy package, allowing to abstract completely the underlying configuration file format. It allows to load a Python dictionary from JSON, YAML, TOML, and so on.</p> <p>Install it with:</p> <pre><code>pip install anyconfig\n</code></pre> <p>Usage:</p> <pre><code>&gt;&gt;&gt; import anyconfig\n&gt;&gt;&gt; conf1 = anyconfig.load(\"/path/to/foo/conf.d/a.yml\")\n</code></pre>"},{"location":"dev/python/lists-and-tuples/","title":"Python Lists and Tuples","text":"<p> Python Lists </p> <p>Lists are one of the 4 data types in Python used to store collections of data.</p> <pre><code>['John', 'Peter', 'Debora', 'Charles']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#getting-values-with-indexes","title":"Getting values with indexes","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[0]\n# 'table'\n\n&gt;&gt;&gt; furniture[1]\n# 'chair'\n\n&gt;&gt;&gt; furniture[2]\n# 'rack'\n\n&gt;&gt;&gt; furniture[3]\n# 'shelf'\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#negative-indexes","title":"Negative indexes","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[-1]\n# 'shelf'\n\n&gt;&gt;&gt; furniture[-3]\n# 'chair'\n\n&gt;&gt;&gt; f'The {furniture[-1]} is bigger than the {furniture[-3]}'\n# 'The shelf is bigger than the chair'\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#getting-sublists-with-slices","title":"Getting sublists with Slices","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[0:4]\n# ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[1:3]\n# ['chair', 'rack']\n\n&gt;&gt;&gt; furniture[0:-1]\n# ['table', 'chair', 'rack']\n\n&gt;&gt;&gt; furniture[:2]\n# ['table', 'chair']\n\n&gt;&gt;&gt; furniture[1:]\n# ['chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[:]\n# ['table', 'chair', 'rack', 'shelf']\n</code></pre> <p>Slicing the complete list will perform a copy:</p> <pre><code>&gt;&gt;&gt; spam2 = spam[:]\n# ['cat', 'bat', 'rat', 'elephant']\n\n&gt;&gt;&gt; spam.append('dog')\n&gt;&gt;&gt; spam\n# ['cat', 'bat', 'rat', 'elephant', 'dog']\n\n&gt;&gt;&gt; spam2\n# ['cat', 'bat', 'rat', 'elephant']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#getting-a-list-length-with-len","title":"Getting a list length with len()","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; len(furniture)\n# 4\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#changing-values-with-indexes","title":"Changing values with indexes","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[0] = 'desk'\n&gt;&gt;&gt; furniture\n# ['desk', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; furniture[2] = furniture[1]\n&gt;&gt;&gt; furniture\n# ['desk', 'chair', 'chair', 'shelf']\n\n&gt;&gt;&gt; furniture[-1] = 'bed'\n&gt;&gt;&gt; furniture\n# ['desk', 'chair', 'chair', 'bed']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#concatenation-and-replication","title":"Concatenation and Replication","text":"<pre><code>&gt;&gt;&gt; [1, 2, 3] + ['A', 'B', 'C']\n# [1, 2, 3, 'A', 'B', 'C']\n\n&gt;&gt;&gt; ['X', 'Y', 'Z'] * 3\n# ['X', 'Y', 'Z', 'X', 'Y', 'Z', 'X', 'Y', 'Z']\n\n&gt;&gt;&gt; my_list = [1, 2, 3]\n&gt;&gt;&gt; my_list = my_list + ['A', 'B', 'C']\n&gt;&gt;&gt; my_list\n# [1, 2, 3, 'A', 'B', 'C']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#using-for-loops-with-lists","title":"Using for loops with Lists","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; for item in furniture:\n...     print(item)\n# table\n# chair\n# rack\n# shelf\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#getting-the-index-in-a-loop-with-enumerate","title":"Getting the index in a loop with enumerate()","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n\n&gt;&gt;&gt; for index, item in enumerate(furniture):\n...     print(f'index: {index} - item: {item}')\n# index: 0 - item: table\n# index: 1 - item: chair\n# index: 2 - item: rack\n# index: 3 - item: shelf\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#loop-in-multiple-lists-with-zip","title":"Loop in Multiple Lists with zip()","text":"<pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; price = [100, 50, 80, 40]\n\n&gt;&gt;&gt; for item, amount in zip(furniture, price):\n...     print(f'The {item} costs ${amount}')\n# The table costs $100\n# The chair costs $50\n# The rack costs $80\n# The shelf costs $40\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#the-in-and-not-in-operators","title":"The in and not in operators","text":"<pre><code>&gt;&gt;&gt; 'rack' in ['table', 'chair', 'rack', 'shelf']\n# True\n\n&gt;&gt;&gt; 'bed' in ['table', 'chair', 'rack', 'shelf']\n# False\n\n&gt;&gt;&gt; 'bed' not in furniture\n# True\n\n&gt;&gt;&gt; 'rack' not in furniture\n# False\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#the-multiple-assignment-trick","title":"The Multiple Assignment Trick","text":"<p>The multiple assignment trick is a shortcut that lets you assign multiple variables with the values in a list in one line of code. So instead of doing this:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; table = furniture[0]\n&gt;&gt;&gt; chair = furniture[1]\n&gt;&gt;&gt; rack = furniture[2]\n&gt;&gt;&gt; shelf = furniture[3]\n</code></pre> <p>You could type this line of code:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; table, chair, rack, shelf = furniture\n\n&gt;&gt;&gt; table\n# 'table'\n\n&gt;&gt;&gt; chair\n# 'chair'\n\n&gt;&gt;&gt; rack\n# 'rack'\n\n&gt;&gt;&gt; shelf\n# 'shelf'\n</code></pre> <p>The multiple assignment trick can also be used to swap the values in two variables:</p> <pre><code>&gt;&gt;&gt; a, b = 'table', 'chair'\n&gt;&gt;&gt; a, b = b, a\n&gt;&gt;&gt; print(a)\n# chair\n\n&gt;&gt;&gt; print(b)\n# table\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#the-index-method","title":"The index Method","text":"<p>The <code>index</code> method allows you to find the index of a value by passing its name:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; furniture.index('chair')\n# 1\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#adding-values","title":"Adding Values","text":""},{"location":"dev/python/lists-and-tuples/#append","title":"append()","text":"<p><code>append</code> adds an element to the end of a <code>list</code>:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; furniture.append('bed')\n&gt;&gt;&gt; furniture\n# ['table', 'chair', 'rack', 'shelf', 'bed']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#insert","title":"insert()","text":"<p><code>insert</code> adds an element to a <code>list</code> at a given position:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; furniture.insert(1, 'bed')\n&gt;&gt;&gt; furniture\n# ['table', 'bed', 'chair', 'rack', 'shelf']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#removing-values","title":"Removing Values","text":""},{"location":"dev/python/lists-and-tuples/#del","title":"del()","text":"<p><code>del</code> removes an item using the index:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; del furniture[2]\n&gt;&gt;&gt; furniture\n# ['table', 'chair', 'shelf']\n\n&gt;&gt;&gt; del furniture[2]\n&gt;&gt;&gt; furniture\n# ['table', 'chair']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#remove","title":"remove()","text":"<p><code>remove</code> removes an item with using actual value of it:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; furniture.remove('chair')\n&gt;&gt;&gt; furniture\n# ['table', 'rack', 'shelf']\n</code></pre> <p>      Removing repeated items         If the value appears multiple times in the list, only the first instance of the value will be removed.    </p>"},{"location":"dev/python/lists-and-tuples/#pop","title":"pop()","text":"<p>By default, <code>pop</code> will remove and return the last item of the list. You can also pass the index of the element as an optional parameter:</p> <pre><code>&gt;&gt;&gt; animals = ['cat', 'bat', 'rat', 'elephant']\n\n&gt;&gt;&gt; animals.pop()\n'elephant'\n\n&gt;&gt;&gt; animals\n['cat', 'bat', 'rat']\n\n&gt;&gt;&gt; animals.pop(0)\n'cat'\n\n&gt;&gt;&gt; animals\n['bat', 'rat']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#sorting-values-with-sort","title":"Sorting values with sort()","text":"<pre><code>&gt;&gt;&gt; numbers = [2, 5, 3.14, 1, -7]\n&gt;&gt;&gt; numbers.sort()\n&gt;&gt;&gt; numbers\n# [-7, 1, 2, 3.14, 5]\n\nfurniture = ['table', 'chair', 'rack', 'shelf']\nfurniture.sort()\nfurniture\n# ['chair', 'rack', 'shelf', 'table']\n</code></pre> <p>You can also pass <code>True</code> for the <code>reverse</code> keyword argument to have <code>sort()</code> sort the values in reverse order:</p> <pre><code>&gt;&gt;&gt; furniture.sort(reverse=True)\n&gt;&gt;&gt; furniture\n# ['table', 'shelf', 'rack', 'chair']\n</code></pre> <p>If you need to sort the values in regular alphabetical order, pass <code>str.lower</code> for the key keyword argument in the sort() method call:</p> <pre><code>&gt;&gt;&gt; letters = ['a', 'z', 'A', 'Z']\n&gt;&gt;&gt; letters.sort(key=str.lower)\n&gt;&gt;&gt; letters\n# ['a', 'A', 'z', 'Z']\n</code></pre> <p>You can use the built-in function <code>sorted</code> to return a new list:</p> <pre><code>&gt;&gt;&gt; furniture = ['table', 'chair', 'rack', 'shelf']\n&gt;&gt;&gt; sorted(furniture)\n# ['chair', 'rack', 'shelf', 'table']\n</code></pre>"},{"location":"dev/python/lists-and-tuples/#the-tuple-data-type","title":"The Tuple data type","text":"<p> Tuples vs Lists      The key difference between tuples and lists is that, while <code>tuples</code> are immutable objects, <code>lists</code> are mutable. This means that tuples cannot be changed while the lists can be modified. Tuples are more memory efficient than the lists.    </p> <pre><code>&gt;&gt;&gt; furniture = ('table', 'chair', 'rack', 'shelf')\n\n&gt;&gt;&gt; furniture[0]\n# 'table'\n\n&gt;&gt;&gt; furniture[1:3]\n# ('chair', 'rack')\n\n&gt;&gt;&gt; len(furniture)\n# 4\n</code></pre> <p>The main way that tuples are different from lists is that tuples, like strings, are immutable.</p>"},{"location":"dev/python/lists-and-tuples/#converting-between-list-and-tuple","title":"Converting between list() and tuple()","text":"<pre><code>&gt;&gt;&gt; tuple(['cat', 'dog', 5])\n# ('cat', 'dog', 5)\n\n&gt;&gt;&gt; list(('cat', 'dog', 5))\n# ['cat', 'dog', 5]\n\n&gt;&gt;&gt; list('hello')\n# ['h', 'e', 'l', 'l', 'o']\n</code></pre>"},{"location":"dev/python/main/","title":"Python Main function","text":"<p> Main top-level script environment </p>"},{"location":"dev/python/main/#what-is-it","title":"What is it","text":"<p><code>__main__</code> is the name of the scope in which top-level code executes. A module\u2019s name is set equal to <code>__main__</code> when read from standard input, a script, or from an interactive prompt.</p> <p>A module can discover whether it is running in the main scope by checking its own <code>__name__</code>, which allows a common idiom for conditionally executing code in a module. When it is run as a script or with <code>python -m</code> but not when it is imported:</p> <pre><code>&gt;&gt;&gt; if __name__ == \"__main__\":\n...     # execute only if run as a script\n...     main()\n</code></pre> <p>For a package, the same effect can be achieved by including a main.py module, the contents of which will be executed when the module is run with -m.</p> <p>For example, we are developing a script designed to be used as a module, we should do:</p> <pre><code>&gt;&gt;&gt; def add(a, b):\n...     return a+b\n...\n&gt;&gt;&gt; if __name__ == \"__main__\":\n...     add(3, 5)\n</code></pre>"},{"location":"dev/python/main/#advantages","title":"Advantages","text":"<ol> <li>Every Python module has it\u2019s <code>__name__</code> defined and if this is <code>__main__</code>, it implies that the module is run standalone by the user, and we can do corresponding appropriate actions.</li> <li>If you import this script as a module in another script, the name is set to the name of the script/module.</li> <li>Python files can act as either reusable modules, or as standalone programs.</li> <li>if <code>__name__ == \u201cmain\u201d:</code> is used to execute some code only if the file run directly, and is not being imported.</li> </ol>"},{"location":"dev/python/manipulating-strings/","title":"Manipulating strings","text":"<p> Manipulating Strings </p>"},{"location":"dev/python/manipulating-strings/#escape-characters","title":"Escape characters","text":"<p>An escape character is created by typing a backslash <code>\\</code> followed by the character you want to insert.</p> Escape character Prints as <code>\\'</code> Single quote <code>\\\"</code> Double quote <code>\\t</code> Tab <code>\\n</code> Newline (line break) <code>\\\\</code> Backslash <code>\\b</code> Backspace <code>\\ooo</code> Octal value <code>\\r</code> Carriage Return <pre><code>&gt;&gt;&gt; print(\"Hello there!\\nHow are you?\\nI\\'m doing fine.\")\n# Hello there!\n# How are you?\n# I'm doing fine.\n</code></pre>"},{"location":"dev/python/manipulating-strings/#raw-strings","title":"Raw strings","text":"<p>A raw string entirely ignores all escape characters and prints any backslash that appears in the string.</p> <pre><code>&gt;&gt;&gt; print(r\"Hello there!\\nHow are you?\\nI\\'m doing fine.\")\n# Hello there!\\nHow are you?\\nI\\'m doing fine.\n</code></pre> <p>Raw strings are mostly used for regular expression definition.</p>"},{"location":"dev/python/manipulating-strings/#multiline-strings","title":"Multiline Strings","text":"<pre><code>&gt;&gt;&gt; print(\n... \"\"\"Dear Alice,\n...\n... Eve's cat has been arrested for catnapping,\n... cat burglary, and extortion.\n...\n... Sincerely,\n... Bob\"\"\"\n... )\n\n# Dear Alice,\n\n# Eve's cat has been arrested for catnapping,\n# cat burglary, and extortion.\n\n# Sincerely,\n# Bob\n</code></pre>"},{"location":"dev/python/manipulating-strings/#indexing-and-slicing-strings","title":"Indexing and Slicing strings","text":"<pre><code>H   e   l   l   o       w   o   r   l   d    !\n0   1   2   3   4   5   6   7   8   9   10   11\n</code></pre>"},{"location":"dev/python/manipulating-strings/#indexing","title":"Indexing","text":"<pre><code>&gt;&gt;&gt; spam = 'Hello world!'\n\n&gt;&gt;&gt; spam[0]\n# 'H'\n\n&gt;&gt;&gt; spam[4]\n# 'o'\n\n&gt;&gt;&gt; spam[-1]\n# '!'\n</code></pre>"},{"location":"dev/python/manipulating-strings/#slicing","title":"Slicing","text":"<pre><code>&gt;&gt;&gt; spam = 'Hello world!'\n\n&gt;&gt;&gt; spam[0:5]\n# 'Hello'\n\n&gt;&gt;&gt; spam[:5]\n# 'Hello'\n\n&gt;&gt;&gt; spam[6:]\n# 'world!'\n\n&gt;&gt;&gt; spam[6:-1]\n# 'world'\n\n&gt;&gt;&gt; spam[:-1]\n# 'Hello world'\n\n&gt;&gt;&gt; spam[::-1]\n# '!dlrow olleH'\n\n&gt;&gt;&gt; fizz = spam[0:5]\n&gt;&gt;&gt; fizz\n# 'Hello'\n</code></pre>"},{"location":"dev/python/manipulating-strings/#the-in-and-not-in-operators","title":"The in and not in operators","text":"<pre><code>&gt;&gt;&gt; 'Hello' in 'Hello World'\n# True\n\n&gt;&gt;&gt; 'Hello' in 'Hello'\n# True\n\n&gt;&gt;&gt; 'HELLO' in 'Hello World'\n# False\n\n&gt;&gt;&gt; '' in 'spam'\n# True\n\n&gt;&gt;&gt; 'cats' not in 'cats and dogs'\n# False\n</code></pre>"},{"location":"dev/python/manipulating-strings/#upper-lower-and-title","title":"upper(), lower() and title()","text":"<p>Transforms a string to upper, lower and title case:</p> <pre><code>&gt;&gt;&gt; greet = 'Hello world!'\n&gt;&gt;&gt; greet.upper()\n# 'HELLO WORLD!'\n\n&gt;&gt;&gt; greet.lower()\n# 'hello world!'\n\n&gt;&gt;&gt; greet.title()\n# 'Hello World!'\n</code></pre>"},{"location":"dev/python/manipulating-strings/#isupper-and-islower-methods","title":"isupper() and islower() methods","text":"<p>Returns <code>True</code> or <code>False</code> after evaluating if a string is in upper or lower case:</p> <pre><code>&gt;&gt;&gt; spam = 'Hello world!'\n&gt;&gt;&gt; spam.islower()\n# False\n\n&gt;&gt;&gt; spam.isupper()\n# False\n\n&gt;&gt;&gt; 'HELLO'.isupper()\n# True\n\n&gt;&gt;&gt; 'abc12345'.islower()\n# True\n\n&gt;&gt;&gt; '12345'.islower()\n# False\n\n&gt;&gt;&gt; '12345'.isupper()\n# False\n</code></pre>"},{"location":"dev/python/manipulating-strings/#the-isx-string-methods","title":"The isX string methods","text":"Method Description isalpha() returns <code>True</code> if the string consists only of letters. isalnum() returns <code>True</code> if the string consists only of letters and numbers. isdecimal() returns <code>True</code> if the string consists only of numbers. isspace() returns <code>True</code> if the string consists only of spaces, tabs, and new-lines. istitle() returns <code>True</code> if the string consists only of words that begin with an uppercase letter followed by only lowercase characters."},{"location":"dev/python/manipulating-strings/#startswith-and-endswith","title":"startswith() and endswith()","text":"<pre><code>&gt;&gt;&gt; 'Hello world!'.startswith('Hello')\n# True\n\n&gt;&gt;&gt; 'Hello world!'.endswith('world!')\n# True\n\n&gt;&gt;&gt; 'abc123'.startswith('abcdef')\n# False\n\n&gt;&gt;&gt; 'abc123'.endswith('12')\n# False\n\n&gt;&gt;&gt; 'Hello world!'.startswith('Hello world!')\n# True\n\n&gt;&gt;&gt; 'Hello world!'.endswith('Hello world!')\n# True\n</code></pre>"},{"location":"dev/python/manipulating-strings/#join-and-split","title":"join() and split()","text":""},{"location":"dev/python/manipulating-strings/#join","title":"join()","text":"<p>The <code>join()</code> method takes all the items in an iterable, like a list, dictionary, tuple or set, and joins them into a string. You can also specify a separator.</p> <pre><code>&gt;&gt;&gt; ''.join(['My', 'name', 'is', 'Simon'])\n'MynameisSimon'\n\n&gt;&gt;&gt; ', '.join(['cats', 'rats', 'bats'])\n# 'cats, rats, bats'\n\n&gt;&gt;&gt; ' '.join(['My', 'name', 'is', 'Simon'])\n# 'My name is Simon'\n\n&gt;&gt;&gt; 'ABC'.join(['My', 'name', 'is', 'Simon'])\n# 'MyABCnameABCisABCSimon'\n</code></pre>"},{"location":"dev/python/manipulating-strings/#split","title":"split()","text":"<p>The <code>split()</code> method splits a <code>string</code> into a <code>list</code>. By default, it will use whitespace to separate the items, but you can also set another character of choice:</p> <pre><code>&gt;&gt;&gt; 'My name is Simon'.split()\n# ['My', 'name', 'is', 'Simon']\n\n&gt;&gt;&gt; 'MyABCnameABCisABCSimon'.split('ABC')\n# ['My', 'name', 'is', 'Simon']\n\n&gt;&gt;&gt; 'My name is Simon'.split('m')\n# ['My na', 'e is Si', 'on']\n\n&gt;&gt;&gt; ' My  name is  Simon'.split()\n# ['My', 'name', 'is', 'Simon']\n\n&gt;&gt;&gt; ' My  name is  Simon'.split(' ')\n# ['', 'My', '', 'name', 'is', '', 'Simon']\n</code></pre>"},{"location":"dev/python/manipulating-strings/#justifying-text-with-rjust-ljust-and-center","title":"Justifying text with rjust(), ljust() and center()","text":"<pre><code>&gt;&gt;&gt; 'Hello'.rjust(10)\n# '     Hello'\n\n&gt;&gt;&gt; 'Hello'.rjust(20)\n# '               Hello'\n\n&gt;&gt;&gt; 'Hello World'.rjust(20)\n# '         Hello World'\n\n&gt;&gt;&gt; 'Hello'.ljust(10)\n# 'Hello     '\n\n&gt;&gt;&gt; 'Hello'.center(20)\n# '       Hello       '\n</code></pre> <p>An optional second argument to <code>rjust()</code> and <code>ljust()</code> will specify a fill character apart from a space character:</p> <pre><code>&gt;&gt;&gt; 'Hello'.rjust(20, '*')\n# '***************Hello'\n\n&gt;&gt;&gt; 'Hello'.ljust(20, '-')\n# 'Hello---------------'\n\n&gt;&gt;&gt; 'Hello'.center(20, '=')\n# '=======Hello========'\n</code></pre>"},{"location":"dev/python/manipulating-strings/#removing-whitespace-with-strip-rstrip-and-lstrip","title":"Removing whitespace with strip(), rstrip(), and lstrip()","text":"<pre><code>&gt;&gt;&gt; spam = '    Hello World     '\n&gt;&gt;&gt; spam.strip()\n# 'Hello World'\n\n&gt;&gt;&gt; spam.lstrip()\n# 'Hello World     '\n\n&gt;&gt;&gt; spam.rstrip()\n# '    Hello World'\n\n&gt;&gt;&gt; spam = 'SpamSpamBaconSpamEggsSpamSpam'\n&gt;&gt;&gt; spam.strip('ampS')\n# 'BaconSpamEggs'\n</code></pre>"},{"location":"dev/python/oop-basics/","title":"Oop basics","text":"<p>title: Python OOP Basics</p>"},{"location":"dev/python/oop-basics/#description-object-oriented-programming-oop-is-a-programming-paradigm-that-revolves-around-the-concept-of-objects-which-are-instances-of-classes-oop-principles-are-fundamental-concepts-that-guide-the-design-and-development-of-software-in-an-object-oriented-way-in-python-oop-is-supported-by-the-use-of-classes-and-objects-here-are-some-of-the-basic-oop-principles-in-python","title":"description: Object-Oriented Programming (OOP) is a programming paradigm that revolves around the concept of objects, which are instances of classes. OOP principles are fundamental concepts that guide the design and development of software in an object-oriented way. In Python, OOP is supported by the use of classes and objects. Here are some of the basic OOP principles in Python","text":"<p> Python OOP Basics </p> <p> Object-Oriented Programming      Object-oriented programming (OOP) is a programming paradigm based on the concept of \"objects\", which can contain data and code. The data is in the form of fields (often known as attributes or properties), and the code is in the form of procedures (often known as methods).    </p>"},{"location":"dev/python/oop-basics/#encapsulation","title":"Encapsulation","text":"<p>Encapsulation is one of the fundamental concepts of object-oriented programming, which helps to protect the data and methods of an object from unauthorized access and modification. It is a way to achieve data abstraction, which means that the implementation details of an object are hidden from the outside world, and only the essential information is exposed.</p> <p>In Python, encapsulation can be achieved by using access modifiers. Access modifiers are keywords that define the accessibility of attributes and methods in a class. The three access modifiers available in Python are public, private, and protected. However, Python does not have an explicit way of defining access modifiers like some other programming languages such as Java and C++. Instead, it uses a convention of using underscore prefixes to indicate the access level.</p> <p>In the given code example, the class MyClass has two attributes, _protected_var and __private_var. The _protected_var is marked as protected by using a single underscore prefix. This means that the attribute can be accessed within the class and its subclasses but not outside the class. The __private_var is marked as private by using two underscore prefixes. This means that the attribute can only be accessed within the class and not outside the class, not even in its subclasses.</p> <p>When we create an object of the MyClass class, we can access the _protected_var attribute using the object name with a single underscore prefix. However, we cannot access the __private_var attribute using the object name, as it is hidden from the outside world. If we try to access the __private_var attribute, we will get an AttributeError as shown in the code.</p> <p>In summary, encapsulation is an important concept in object-oriented programming that helps to protect the implementation details of an object. In Python, we can achieve encapsulation by using access modifiers and using underscore prefixes to indicate the access level.</p> <pre><code># Define a class named MyClass\nclass MyClass:\n\n    # Constructor method that initializes the class object\n    def __init__(self):\n\n        # Define a protected variable with an initial value of 10\n        # The variable name starts with a single underscore, which indicates protected access\n        self._protected_var = 10\n\n        # Define a private variable with an initial value of 20\n        # The variable name starts with two underscores, which indicates private access\n        self.__private_var = 20\n\n# Create an object of MyClass class\nobj = MyClass()\n\n# Access the protected variable using the object name and print its value\n# The protected variable can be accessed outside the class but\n# it is intended to be used within the class or its subclasses\nprint(obj._protected_var)   # output: 10\n\n# Try to access the private variable using the object name and print its value\n# The private variable cannot be accessed outside the class, even by its subclasses\n# This will raise an AttributeError because the variable is not accessible outside the class\nprint(obj.__private_var)    # AttributeError: 'MyClass' object has no attribute '__private_var'\n</code></pre>"},{"location":"dev/python/oop-basics/#inheritance","title":"Inheritance","text":"<p>Inheritance promotes code reuse and allows you to create a hierarchy of classes that share common attributes and methods. It helps in creating clean and organized code by keeping related functionality in one place and promoting the concept of modularity. The base class from which a new class is derived is also known as a parent class, and the new class is known as the child class or subclass.</p> <p>In the code, we define a class named Animal which has a constructor method that initializes the class object with a name attribute and a method named speak. The speak method is defined in the Animal class but does not have a body.</p> <p>We then define two subclasses named Dog and Cat which inherit from the Animal class. These subclasses override the speak method of the Animal class.</p> <p>We create a Dog object with a name attribute \"Rover\" and a Cat object with a name attribute \"Whiskers\". We call the speak method of the Dog object using dog.speak(), and it prints \"Woof!\" because the speak method of the Dog class overrides the speak method of the Animal class. Similarly, we call the speak method of the Cat object using cat.speak(), and it prints \"Meow!\" because the speak method of the Cat class overrides the speak method of the Animal class.</p> <pre><code># Define a class named Animal\nclass Animal:\n\n    # Constructor method that initializes the class object with a name attribute\n    def __init__(self, name):\n        self.name = name\n\n    # Method that is defined in the Animal class but does not have a body\n    # This method will be overridden in the subclasses of Animal\n    def speak(self):\n        print(\"\")\n\n# Define a subclass named Dog that inherits from the Animal class\nclass Dog(Animal):\n\n    # Override the speak method of the Animal class\n    def speak(self):\n        print(\"Woof!\")\n\n# Define a subclass named Cat that inherits from the Animal class\nclass Cat(Animal):\n\n    # Override the speak method of the Animal class\n    def speak(self):\n        print(\"Meow!\")\n\n# Create a Dog object with a name attribute \"Rover\"\ndog = Dog(\"Rover\")\n\n# Create a Cat object with a name attribute \"Whiskers\"\ncat = Cat(\"Whiskers\")\n\n# Call the speak method of the Dog class and print the output\n# The speak method of the Dog class overrides the speak method of the Animal class\n# Therefore, when we call the speak method of the Dog object, it will print \"Woof!\"\ndog.speak()   # output: Woof!\n\n# Call the speak method of the Cat class and print the output\n# The speak method of the Cat class overrides the speak method of the Animal class\n# Therefore, when we call the speak method of the Cat object, it will print \"Meow!\"\ncat.speak()   # output: Meow!\n</code></pre>"},{"location":"dev/python/oop-basics/#polymorphism","title":"Polymorphism","text":"<p>Polymorphism is an important concept in object-oriented programming that allows you to write code that can work with objects of different classes in a uniform way. In Python, polymorphism is achieved by using method overriding or method overloading.</p> <p>Method overriding is when a subclass provides its own implementation of a method that is already defined in its parent class. This allows the subclass to modify the behavior of the method without changing its name or signature.</p> <p>Method overloading is when multiple methods have the same name but different parameters. Python does not support method overloading directly, but it can be achieved using default arguments or variable-length arguments.</p> <p>Polymorphism makes it easier to write flexible and reusable code. It allows you to write code that can work with different objects without needing to know their specific types.</p> <pre><code>#The Shape class is defined with an abstract area method, which is intended to be overridden by subclasses.\nclass Shape:\n    def area(self):\n        pass\n\nclass Rectangle(Shape):\n    # The Rectangle class is defined with an __init__ method that initializes\n    # width and height instance variables.\n    # It also defines an area method that calculates and returns\n    # the area of a rectangle using the width and height instance variables.\n    def __init__(self, width, height):\n        self.width = width  # Initialize width instance variable\n        self.height = height  # Initialize height instance variable\n\n    def area(self):\n        return self.width * self.height  # Return area of rectangle\n\n\n # The Circle class is defined with an __init__ method\n # that initializes a radius instance variable.\n # It also defines an area method that calculates and\n # returns the area of a circle using the radius instance variable.\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius  # Initialize radius instance variable\n\n    def area(self):\n        return 3.14 * self.radius ** 2  # Return area of circle using pi * r^2\n\n# The shapes list is created with one Rectangle object and one Circle object. The for\n# loop iterates over each object in the list and calls the area method of each object\n# The output will be the area of the rectangle (20) and the area of the circle (153.86).\nshapes = [Rectangle(4, 5), Circle(7)]  # Create a list of Shape objects\nfor shape in shapes:\n    print(shape.area())  # Output the area of each Shape object\n</code></pre>"},{"location":"dev/python/oop-basics/#abstraction","title":"Abstraction","text":"<p>Abstraction is an important concept in object-oriented programming (OOP) because it allows you to focus on the essential features of an object or system while ignoring the details that aren't relevant to the current context. By reducing complexity and hiding unnecessary details, abstraction can make code more modular, easier to read, and easier to maintain.</p> <p>In Python, abstraction can be achieved by using abstract classes or interfaces. An abstract class is a class that cannot be instantiated directly, but is meant to be subclassed by other classes. It often includes abstract methods that have no implementation, but provide a template for how the subclass should be implemented. This allows the programmer to define a common interface for a group of related classes, while still allowing each class to have its own specific behavior.</p> <p>An interface, on the other hand, is a collection of method signatures that a class must implement in order to be considered \"compatible\" with the interface. Interfaces are often used to define a common set of methods that multiple classes can implement, allowing them to be used interchangeably in certain contexts.</p> <p>Python does not have built-in support for abstract classes or interfaces, but they can be implemented using the abc (abstract base class) module. This module provides the ABC class and the abstractmethod decorator, which can be used to define abstract classes and methods.</p> <p>Overall, abstraction is a powerful tool for managing complexity and improving code quality in object-oriented programming, and Python provides a range of options for achieving abstraction in your code.</p> <pre><code># Import the abc module to define abstract classes and methods\nfrom abc import ABC, abstractmethod\n\n# Define an abstract class called Shape that has an abstract method called area\nclass Shape(ABC):\n    @abstractmethod\n    def area(self):\n        pass\n\n# Define a Rectangle class that inherits from Shape\nclass Rectangle(Shape):\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    # Implement the area method for Rectangles\n    def area(self):\n        return self.width * self.height\n\n# Define a Circle class that also inherits from Shape\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius\n\n    # Implement the area method for Circles\n    def area(self):\n        return 3.14 * self.radius ** 2\n\n# Create a list of shapes that includes both Rectangles and Circles\nshapes = [Rectangle(4, 5), Circle(7)]\n\n# Loop through each shape in the list and print its area\nfor shape in shapes:\n    print(shape.area())\n</code></pre> <p>These are some of the basic OOP principles in Python. This page is currently in progress and more detailed examples and explanations will be coming soon.</p>"},{"location":"dev/python/reading-and-writing-files/","title":"Reading and writing files","text":"<p> Reading and Writing Files </p>"},{"location":"dev/python/reading-and-writing-files/#the-file-readingwriting-process","title":"The file Reading/Writing process","text":"<p>To read/write to a file in Python, you will want to use the <code>with</code> statement, which will close the file for you after you are done, managing the available resources for you.</p>"},{"location":"dev/python/reading-and-writing-files/#opening-and-reading-files","title":"Opening and reading files","text":"<p>The <code>open</code> function opens a file and return a corresponding file object.</p> <pre><code>&gt;&gt;&gt; with open('C:\\\\Users\\\\your_home_folder\\\\hi.txt') as hello_file:\n...     hello_content = hello_file.read()\n...\n&gt;&gt;&gt; hello_content\n'Hello World!'\n</code></pre> <p>Alternatively, you can use the readlines() method to get a list of string values from the file, one string for each line of text:</p> <pre><code>&gt;&gt;&gt; with open('sonnet29.txt') as sonnet_file:\n...     sonnet_file.readlines()\n...\n# [When, in disgrace with fortune and men's eyes,\\n',\n# ' I all alone beweep my  outcast state,\\n',\n# And trouble deaf heaven with my bootless cries,\\n', And\n# look upon myself and curse my fate,']\n</code></pre> <p>You can also iterate through the file line by line:</p> <pre><code>&gt;&gt;&gt; with open('sonnet29.txt') as sonnet_file:\n...     for line in sonnet_file:\n...         print(line, end='')\n...\n# When, in disgrace with fortune and men's eyes,\n# I all alone beweep my outcast state,\n# And trouble deaf heaven with my bootless cries,\n# And look upon myself and curse my fate,\n</code></pre>"},{"location":"dev/python/reading-and-writing-files/#writing-to-files","title":"Writing to files","text":"<pre><code>&gt;&gt;&gt; with open('bacon.txt', 'w') as bacon_file:\n...     bacon_file.write('Hello world!\\n')\n...\n# 13\n\n&gt;&gt;&gt; with open('bacon.txt', 'a') as bacon_file:\n...     bacon_file.write('Bacon is not a vegetable.')\n...\n# 25\n\n&gt;&gt;&gt; with open('bacon.txt') as bacon_file:\n...     content = bacon_file.read()\n...\n&gt;&gt;&gt; print(content)\n# Hello world!\n# Bacon is not a vegetable.\n</code></pre>"},{"location":"dev/python/regular-expressions/","title":"Python Regular Expressions","text":"<p> Regular Expressions </p> <p> Regular expressions      A regular expression (shortened as regex [...]) is a sequence of characters that specifies a search pattern in text. [...] used by string-searching algorithms for \"find\" or \"find and replace\" operations on strings, or for input validation.    </p> <ol> <li>Import the regex module with <code>import re</code>.</li> <li>Create a Regex object with the <code>re.compile()</code> function. (Remember to use a raw string.)</li> <li>Pass the string you want to search into the Regex object\u2019s <code>search()</code> method. This returns a <code>Match</code> object.</li> <li>Call the Match object\u2019s <code>group()</code> method to return a string of the actual matched text.</li> </ol> <p>All the regex functions in Python are in the re module:</p> <pre><code>&gt;&gt;&gt; import re\n</code></pre>"},{"location":"dev/python/regular-expressions/#regex-symbols","title":"Regex symbols","text":"Symbol Matches <code>?</code> zero or one of the preceding group. <code>*</code> zero or more of the preceding group. <code>+</code> one or more of the preceding group. <code>{n}</code> exactly n of the preceding group. <code>{n,}</code> n or more of the preceding group. <code>{,m}</code> 0 to m of the preceding group. <code>{n,m}</code> at least n and at most m of the preceding p. <code>{n,m}?</code> or <code>*?</code> or <code>+?</code> performs a non-greedy match of the preceding p. <code>^spam</code> means the string must begin with spam. <code>spam$</code> means the string must end with spam. <code>.</code> any character, except newline characters. <code>\\d</code>, <code>\\w</code>, and <code>\\s</code> a digit, word, or space character, respectively. <code>\\D</code>, <code>\\W</code>, and <code>\\S</code> anything except a digit, word, or space, respectively. <code>[abc]</code> any character between the brackets (such as a, b, ). <code>[^abc]</code> any character that isn\u2019t between the brackets."},{"location":"dev/python/regular-expressions/#matching-regex-objects","title":"Matching regex objects","text":"<pre><code>&gt;&gt;&gt; phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d')\n\n&gt;&gt;&gt; mo = phone_num_regex.search('My number is 415-555-4242.')\n\n&gt;&gt;&gt; print(f'Phone number found: {mo.group()}')\n# Phone number found: 415-555-4242\n</code></pre>"},{"location":"dev/python/regular-expressions/#grouping-with-parentheses","title":"Grouping with parentheses","text":"<pre><code>&gt;&gt;&gt; phone_num_regex = re.compile(r'(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)')\n&gt;&gt;&gt; mo = phone_num_regex.search('My number is 415-555-4242.')\n\n&gt;&gt;&gt; mo.group(1)\n# '415'\n\n&gt;&gt;&gt; mo.group(2)\n# '555-4242'\n\n&gt;&gt;&gt; mo.group(0)\n# '415-555-4242'\n\n&gt;&gt;&gt; mo.group()\n# '415-555-4242'\n</code></pre> <p>To retrieve all the groups at once use the <code>groups()</code> method:</p> <pre><code>&gt;&gt;&gt; mo.groups()\n('415', '555-4242')\n\n&gt;&gt;&gt; area_code, main_number = mo.groups()\n\n&gt;&gt;&gt; print(area_code)\n415\n\n&gt;&gt;&gt; print(main_number)\n555-4242\n</code></pre>"},{"location":"dev/python/regular-expressions/#multiple-groups-with-pipe","title":"Multiple groups with Pipe","text":"<p>You can use the <code>|</code> character anywhere you want to match one of many expressions.</p> <pre><code>&gt;&gt;&gt; hero_regex = re.compile (r'Batman|Tina Fey')\n\n&gt;&gt;&gt; mo1 = hero_regex.search('Batman and Tina Fey.')\n&gt;&gt;&gt; mo1.group()\n# 'Batman'\n\n&gt;&gt;&gt; mo2 = hero_regex.search('Tina Fey and Batman.')\n&gt;&gt;&gt; mo2.group()\n# 'Tina Fey'\n</code></pre> <p>You can also use the pipe to match one of several patterns as part of your regex:</p> <pre><code>&gt;&gt;&gt; bat_regex = re.compile(r'Bat(man|mobile|copter|bat)')\n&gt;&gt;&gt; mo = bat_regex.search('Batmobile lost a wheel')\n\n&gt;&gt;&gt; mo.group()\n# 'Batmobile'\n\n&gt;&gt;&gt; mo.group(1)\n# 'mobile'\n</code></pre>"},{"location":"dev/python/regular-expressions/#optional-matching-with-the-question-mark","title":"Optional matching with the Question Mark","text":"<p>The <code>?</code> character flags the group that precedes it as an optional part of the pattern.</p> <pre><code>&gt;&gt;&gt; bat_regex = re.compile(r'Bat(wo)?man')\n\n&gt;&gt;&gt; mo1 = bat_regex.search('The Adventures of Batman')\n&gt;&gt;&gt; mo1.group()\n# 'Batman'\n\n&gt;&gt;&gt; mo2 = bat_regex.search('The Adventures of Batwoman')\n&gt;&gt;&gt; mo2.group()\n# 'Batwoman'\n</code></pre>"},{"location":"dev/python/regular-expressions/#matching-zero-or-more-with-the-star","title":"Matching zero or more with the Star","text":"<p>The <code>*</code> (star or asterisk) means \u201cmatch zero or more\u201d. The group that precedes the star can occur any number of times in the text.</p> <pre><code>&gt;&gt;&gt; bat_regex = re.compile(r'Bat(wo)*man')\n&gt;&gt;&gt; mo1 = bat_regex.search('The Adventures of Batman')\n&gt;&gt;&gt; mo1.group()\n'Batman'\n\n&gt;&gt;&gt; mo2 = bat_regex.search('The Adventures of Batwoman')\n&gt;&gt;&gt; mo2.group()\n'Batwoman'\n\n&gt;&gt;&gt; mo3 = bat_regex.search('The Adventures of Batwowowowoman')\n&gt;&gt;&gt; mo3.group()\n'Batwowowowoman'\n</code></pre>"},{"location":"dev/python/regular-expressions/#matching-one-or-more-with-the-plus","title":"Matching one or more with the Plus","text":"<p>The <code>+</code> (or plus) means match one or more. The group preceding a plus must appear at least once:</p> <pre><code>&gt;&gt;&gt; bat_regex = re.compile(r'Bat(wo)+man')\n\n&gt;&gt;&gt; mo1 = bat_regex.search('The Adventures of Batwoman')\n&gt;&gt;&gt; mo1.group()\n# 'Batwoman'\n\n&gt;&gt;&gt; mo2 = bat_regex.search('The Adventures of Batwowowowoman')\n&gt;&gt;&gt; mo2.group()\n# 'Batwowowowoman'\n\n&gt;&gt;&gt; mo3 = bat_regex.search('The Adventures of Batman')\n&gt;&gt;&gt; mo3 is None\n# True\n</code></pre>"},{"location":"dev/python/regular-expressions/#matching-specific-repetitions-with-curly-brackets","title":"Matching specific repetitions with Curly Brackets","text":"<p>If you have a group that you want to repeat a specific number of times, follow the group in your regex with a number in curly brackets:</p> <pre><code>&gt;&gt;&gt; ha_regex = re.compile(r'(Ha){3}')\n\n&gt;&gt;&gt; mo1 = ha_regex.search('HaHaHa')\n&gt;&gt;&gt; mo1.group()\n# 'HaHaHa'\n\n&gt;&gt;&gt; mo2 = ha_regex.search('Ha')\n&gt;&gt;&gt; mo2 is None\n# True\n</code></pre> <p>Instead of one number, you can specify a range with minimum and a maximum in between the curly brackets. For example, the regex (Ha){3,5} will match 'HaHaHa', 'HaHaHaHa', and 'HaHaHaHaHa'.</p> <pre><code>&gt;&gt;&gt; ha_regex = re.compile(r'(Ha){2,3}')\n&gt;&gt;&gt; mo1 = ha_regex.search('HaHaHaHa')\n&gt;&gt;&gt; mo1.group()\n# 'HaHaHa'\n</code></pre>"},{"location":"dev/python/regular-expressions/#greedy-and-non-greedy-matching","title":"Greedy and non-greedy matching","text":"<p>Python\u2019s regular expressions are greedy by default: in ambiguous situations they will match the longest string possible. The non-greedy version of the curly brackets, which matches the shortest string possible, has the closing curly bracket followed by a question mark.</p> <pre><code>&gt;&gt;&gt; greedy_ha_regex = re.compile(r'(Ha){3,5}')\n\n&gt;&gt;&gt; mo1 = greedy_ha_regex.search('HaHaHaHaHa')\n&gt;&gt;&gt; mo1.group()\n# 'HaHaHaHaHa'\n\n&gt;&gt;&gt; non_greedy_ha_regex = re.compile(r'(Ha){3,5}?')\n&gt;&gt;&gt; mo2 = non_greedy_ha_regex.search('HaHaHaHaHa')\n&gt;&gt;&gt; mo2.group()\n# 'HaHaHa'\n</code></pre>"},{"location":"dev/python/regular-expressions/#the-findall-method","title":"The findall() method","text":"<p>The <code>findall()</code> method will return the strings of every match in the searched string.</p> <pre><code>&gt;&gt;&gt; phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d') # has no groups\n\n&gt;&gt;&gt; phone_num_regex.findall('Cell: 415-555-9999 Work: 212-555-0000')\n# ['415-555-9999', '212-555-0000']\n</code></pre>"},{"location":"dev/python/regular-expressions/#making-your-own-character-classes","title":"Making your own character classes","text":"<p>You can define your own character class using square brackets. For example, the character class [aeiouAEIOU] will match any vowel, both lowercase and uppercase.</p> <pre><code>&gt;&gt;&gt; vowel_regex = re.compile(r'[aeiouAEIOU]')\n&gt;&gt;&gt; vowel_regex.findall('Robocop eats baby food. BABY FOOD.')\n# ['o', 'o', 'o', 'e', 'a', 'a', 'o', 'o', 'A', 'O', 'O']\n</code></pre> <p>You can also include ranges of letters or numbers by using a hyphen. For example, the character class [a-zA-Z0-9] will match all lowercase letters, uppercase letters, and numbers.</p> <p>By placing a caret character (<code>^</code>) just after the character class\u2019s opening bracket, you can make a negative character class that will match all the characters that are not in the character class:</p> <pre><code>&gt;&gt;&gt; consonant_regex = re.compile(r'[^aeiouAEIOU]')\n&gt;&gt;&gt; consonant_regex.findall('Robocop eats baby food. BABY FOOD.')\n# ['R', 'b', 'c', 'p', ' ', 't', 's', ' ', 'b', 'b', 'y', ' ', 'f', 'd', '.', '\n# ', 'B', 'B', 'Y', ' ', 'F', 'D', '.']\n</code></pre>"},{"location":"dev/python/regular-expressions/#the-caret-and-dollar-sign-characters","title":"The Caret and Dollar sign characters","text":"<ul> <li> <p>You can also use the caret symbol <code>^</code> at the start of a regex to indicate that a match must occur at the beginning of the searched text.</p> </li> <li> <p>Likewise, you can put a dollar sign <code>$</code> at the end of the regex to indicate the string must end with this regex pattern.</p> </li> <li> <p>And you can use the <code>^</code> and <code>$</code> together to indicate that the entire string must match the regex.</p> </li> </ul> <p>The <code>r'^Hello</code>' regular expression string matches strings that begin with 'Hello':</p> <pre><code>&gt;&gt;&gt; begins_with_hello = re.compile(r'^Hello')\n&gt;&gt;&gt; begins_with_hello.search('Hello world!')\n# &lt;_sre.SRE_Match object; span=(0, 5), match='Hello'&gt;\n\n&gt;&gt;&gt; begins_with_hello.search('He said hello.') is None\n# True\n</code></pre> <p>The <code>r'\\d\\$'</code> regular expression string matches strings that end with a numeric character from 0 to 9:</p> <pre><code>&gt;&gt;&gt; whole_string_is_num = re.compile(r'^\\d+$')\n\n&gt;&gt;&gt; whole_string_is_num.search('1234567890')\n# &lt;_sre.SRE_Match object; span=(0, 10), match='1234567890'&gt;\n\n&gt;&gt;&gt; whole_string_is_num.search('12345xyz67890') is None\n# True\n\n&gt;&gt;&gt; whole_string_is_num.search('12 34567890') is None\n# True\n</code></pre>"},{"location":"dev/python/regular-expressions/#the-wildcard-character","title":"The Wildcard character","text":"<p>The <code>.</code> (or dot) character in a regular expression will match any character except for a newline:</p> <pre><code>&gt;&gt;&gt; at_regex = re.compile(r'.at')\n\n&gt;&gt;&gt; at_regex.findall('The cat in the hat sat on the flat mat.')\n['cat', 'hat', 'sat', 'lat', 'mat']\n</code></pre>"},{"location":"dev/python/regular-expressions/#matching-everything-with-dot-star","title":"Matching everything with Dot-Star","text":"<pre><code>&gt;&gt;&gt; name_regex = re.compile(r'First Name: (.*) Last Name: (.*)')\n\n&gt;&gt;&gt; mo = name_regex.search('First Name: Al Last Name: Sweigart')\n&gt;&gt;&gt; mo.group(1)\n# 'Al'\n\n&gt;&gt;&gt; mo.group(2)\n'Sweigart'\n</code></pre> <p>The <code>.*</code> uses greedy mode: It will always try to match as much text as possible. To match any and all text in a non-greedy fashion, use the dot, star, and question mark (<code>.*?</code>). The question mark tells Python to match in a non-greedy way:</p> <pre><code>&gt;&gt;&gt; non_greedy_regex = re.compile(r'&lt;.*?&gt;')\n&gt;&gt;&gt; mo = non_greedy_regex.search('&lt;To serve man&gt; for dinner.&gt;')\n&gt;&gt;&gt; mo.group()\n# '&lt;To serve man&gt;'\n\n&gt;&gt;&gt; greedy_regex = re.compile(r'&lt;.*&gt;')\n&gt;&gt;&gt; mo = greedy_regex.search('&lt;To serve man&gt; for dinner.&gt;')\n&gt;&gt;&gt; mo.group()\n# '&lt;To serve man&gt; for dinner.&gt;'\n</code></pre>"},{"location":"dev/python/regular-expressions/#matching-newlines-with-the-dot-character","title":"Matching newlines with the Dot character","text":"<p>The dot-star will match everything except a newline. By passing <code>re.DOTALL</code> as the second argument to <code>re.compile()</code>, you can make the dot character match all characters, including the newline character:</p> <pre><code>&gt;&gt;&gt; no_newline_regex = re.compile('.*')\n&gt;&gt;&gt; no_newline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()\n# 'Serve the public trust.'\n\n&gt;&gt;&gt; newline_regex = re.compile('.*', re.DOTALL)\n&gt;&gt;&gt; newline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()\n# 'Serve the public trust.\\nProtect the innocent.\\nUphold the law.'\n</code></pre>"},{"location":"dev/python/regular-expressions/#case-insensitive-matching","title":"Case-Insensitive matching","text":"<p>To make your regex case-insensitive, you can pass <code>re.IGNORECASE</code> or <code>re.I</code> as a second argument to <code>re.compile()</code>:</p> <pre><code>&gt;&gt;&gt; robocop = re.compile(r'robocop', re.I)\n\n&gt;&gt;&gt; robocop.search('Robocop is part man, part machine, all cop.').group()\n# 'Robocop'\n\n&gt;&gt;&gt; robocop.search('ROBOCOP protects the innocent.').group()\n# 'ROBOCOP'\n\n&gt;&gt;&gt; robocop.search('Al, why does your programming book talk about robocop so much?').group()\n# 'robocop'\n</code></pre>"},{"location":"dev/python/regular-expressions/#substituting-strings-with-the-sub-method","title":"Substituting strings with the sub() method","text":"<p>The <code>sub()</code> method for Regex objects is passed two arguments:</p> <ol> <li>The first argument is a string to replace any matches.</li> <li>The second is the string for the regular expression.</li> </ol> <p>The <code>sub()</code> method returns a string with the substitutions applied:</p> <pre><code>&gt;&gt;&gt; names_regex = re.compile(r'Agent \\w+')\n\n&gt;&gt;&gt; names_regex.sub('CENSORED', 'Agent Alice gave the secret documents to Agent Bob.')\n# 'CENSORED gave the secret documents to CENSORED.'\n</code></pre>"},{"location":"dev/python/regular-expressions/#managing-complex-regexes","title":"Managing complex Regexes","text":"<p>To tell the <code>re.compile()</code> function to ignore whitespace and comments inside the regular expression string, \u201cverbose mode\u201d can be enabled by passing the variable <code>re.VERBOSE</code> as the second argument to <code>re.compile()</code>.</p> <p>Now instead of a hard-to-read regular expression like this:</p> <pre><code>phone_regex = re.compile(r'((\\d{3}|\\(\\d{3}\\))?(\\s|-|\\.)?\\d{3}(\\s|-|\\.)\\d{4}(\\s*(ext|x|ext.)\\s*\\d{2,5})?)')\n</code></pre> <p>you can spread the regular expression over multiple lines with comments like this:</p> <pre><code>phone_regex = re.compile(r'''(\n    (\\d{3}|\\(\\d{3}\\))?            # area code\n    (\\s|-|\\.)?                    # separator\n    \\d{3}                         # first 3 digits\n    (\\s|-|\\.)                     # separator\n    \\d{4}                         # last 4 digits\n    (\\s*(ext|x|ext.)\\s*\\d{2,5})?  # extension\n    )''', re.VERBOSE)\n</code></pre>"},{"location":"dev/python/sets/","title":"Python Sets","text":"<p> Python Sets </p> <p>Python comes equipped with several built-in data types to help us organize our data. These structures include lists, dictionaries, tuples and sets.</p> <p>      From the Python 3 documentation      A set is an unordered collection with no duplicate elements. Basic uses include membership testing and eliminating duplicate entries.    </p> <p>Read Python Sets: What, Why and How for a more in-deep reference.</p>"},{"location":"dev/python/sets/#initializing-a-set","title":"Initializing a set","text":"<p>There are two ways to create sets: using curly braces <code>{}</code> and the built-in function <code>set()</code></p> <p>      Empty Sets         When creating set, be sure to not use empty curly braces <code>{}</code> or you will get an empty dictionary instead.    </p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s = set([1, 2, 3])\n\n&gt;&gt;&gt; s = {}  # this will create a dictionary instead of a set\n&gt;&gt;&gt; type(s)\n# &lt;class 'dict'&gt;\n</code></pre>"},{"location":"dev/python/sets/#unordered-collections-of-unique-elements","title":"Unordered collections of unique elements","text":"<p>A set automatically remove all the duplicate values.</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3, 2, 3, 4}\n&gt;&gt;&gt; s\n# {1, 2, 3, 4}\n</code></pre> <p>And as an unordered data type, they can't be indexed.</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s[0]\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# TypeError: 'set' object does not support indexing\n</code></pre>"},{"location":"dev/python/sets/#set-add-and-update","title":"set add() and update()","text":"<p>Using the <code>add()</code> method we can add a single element to the set.</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s.add(4)\n&gt;&gt;&gt; s\n# {1, 2, 3, 4}\n</code></pre> <p>And with <code>update()</code>, multiple ones:</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s.update([2, 3, 4, 5, 6])\n&gt;&gt;&gt; s\n# {1, 2, 3, 4, 5, 6}\n</code></pre>"},{"location":"dev/python/sets/#set-remove-and-discard","title":"set remove() and discard()","text":"<p>Both methods will remove an element from the set, but <code>remove()</code> will raise a <code>key error</code> if the value doesn't exist.</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s.remove(3)\n&gt;&gt;&gt; s\n# {1, 2}\n\n&gt;&gt;&gt; s.remove(3)\n# Traceback (most recent call last):\n#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n# KeyError: 3\n</code></pre> <p><code>discard()</code> won't raise any errors.</p> <pre><code>&gt;&gt;&gt; s = {1, 2, 3}\n&gt;&gt;&gt; s.discard(3)\n&gt;&gt;&gt; s\n# {1, 2}\n&gt;&gt;&gt; s.discard(3)\n</code></pre>"},{"location":"dev/python/sets/#set-union","title":"set union()","text":"<p><code>union()</code> or <code>|</code> will create a new set that with all the elements from the sets provided.</p> <pre><code>&gt;&gt;&gt; s1 = {1, 2, 3}\n&gt;&gt;&gt; s2 = {3, 4, 5}\n&gt;&gt;&gt; s1.union(s2)  # or 's1 | s2'\n# {1, 2, 3, 4, 5}\n</code></pre>"},{"location":"dev/python/sets/#set-intersection","title":"set intersection","text":"<p><code>intersection</code> or <code>&amp;</code> will return a set with only the elements that are common to all of them.</p> <pre><code>&gt;&gt;&gt; s1 = {1, 2, 3}\n&gt;&gt;&gt; s2 = {2, 3, 4}\n&gt;&gt;&gt; s3 = {3, 4, 5}\n&gt;&gt;&gt; s1.intersection(s2, s3)  # or 's1 &amp; s2 &amp; s3'\n# {3}\n</code></pre>"},{"location":"dev/python/sets/#set-difference","title":"set difference","text":"<p><code>difference</code> or <code>-</code> will return only the elements that are unique to the first set (invoked set).</p> <pre><code>&gt;&gt;&gt; s1 = {1, 2, 3}\n&gt;&gt;&gt; s2 = {2, 3, 4}\n\n&gt;&gt;&gt; s1.difference(s2)  # or 's1 - s2'\n# {1}\n\n&gt;&gt;&gt; s2.difference(s1) # or 's2 - s1'\n# {4}\n</code></pre>"},{"location":"dev/python/sets/#set-symetric_difference","title":"set symetric_difference","text":"<p><code>symetric_difference</code> or <code>^</code> will return all the elements that are not common between them.</p> <pre><code>&gt;&gt;&gt; s1 = {1, 2, 3}\n&gt;&gt;&gt; s2 = {2, 3, 4}\n&gt;&gt;&gt; s1.symmetric_difference(s2)  # or 's1 ^ s2'\n# {1, 4}\n</code></pre>"},{"location":"dev/python/setup-py/","title":"Python Setup.py","text":"<p> Python setup.py </p> <p>      A 'controversial' opinion         Using <code>setup.py</code> to pack and distribute your python packages can be quite challenging every so often. Tools like Poetry make not only the packaging a lot easier, but also help you to manage your dependencies in a very convenient way.    </p> <p>If you want more information about Poetry you can read the following articles:</p> <ul> <li>Python projects with Poetry and VSCode. Part 1</li> <li>Python projects with Poetry and VSCode. Part 2</li> <li>Python projects with Poetry and VSCode. Part 3</li> </ul>"},{"location":"dev/python/setup-py/#introduction","title":"Introduction","text":"<p>The setup script is the center of all activity in building, distributing, and installing modules using the Distutils. The main purpose of the setup script is to describe your module distribution to the Distutils, so that the various commands that operate on your modules do the right thing.</p> <p>The <code>setup.py</code> file is at the heart of a Python project. It describes all the metadata about your project. There are quite a few fields you can add to a project to give it a rich set of metadata describing the project. However, there are only three required fields: name, version, and packages. The name field must be unique if you wish to publish your package on the Python Package Index (PyPI). The version field keeps track of different releases of the project. The package's field describes where you\u2019ve put the Python source code within your project.</p> <p>This allows you to easily install Python packages. Often it's enough to write:</p> <pre><code>python setup.py install\n</code></pre> <p>and module will install itself.</p>"},{"location":"dev/python/setup-py/#example","title":"Example","text":"<p>Our initial setup.py will also include information about the license and will re-use the README.txt file for the long_description field. This will look like:</p> <pre><code>from distutils.core import setup\nsetup(\n   name='pythonCheatsheet',\n   version='0.1',\n   packages=['pipenv',],\n   license='MIT',\n   long_description=open('README.txt').read(),\n)\n</code></pre> <p>Find more information visit the official documentation.</p>"},{"location":"dev/python/string-formatting/","title":"Python String Formatting","text":"<p> Python String Formatting </p> <p>      From the Python 3 documentation      The formatting operations described here (% operator) exhibit a variety of quirks that lead to a number of common errors [...]. Using the newer formatted string literals [...] helps avoid these errors. These alternatives also provide more powerful, flexible and extensible approaches to formatting text.    </p>"},{"location":"dev/python/string-formatting/#operator","title":"% operator","text":"<p>      Prefer String Literals         For new code, using str.format, or formatted string literals (Python 3.6+) over the <code>%</code> operator is strongly recommended.    </p> <pre><code>&gt;&gt;&gt; name = 'Pete'\n&gt;&gt;&gt; 'Hello %s' % name\n# \"Hello Pete\"\n</code></pre> <p>We can use the <code>%d</code> format specifier to convert an int value to a string:</p> <pre><code>&gt;&gt;&gt; num = 5\n&gt;&gt;&gt; 'I have %d apples' % num\n# \"I have 5 apples\"\n</code></pre>"},{"location":"dev/python/string-formatting/#strformat","title":"str.format","text":"<p>Python 3 introduced a new way to do string formatting that was later back-ported to Python 2.7. This makes the syntax for string formatting more regular.</p> <pre><code>&gt;&gt;&gt; name = 'John'\n&gt;&gt;&gt; age = 20\n\n&gt;&gt;&gt; \"Hello I'm {}, my age is {}\".format(name, age)\n# \"Hello I'm John, my age is 20\"\n\n&gt;&gt;&gt; \"Hello I'm {0}, my age is {1}\".format(name, age)\n# \"Hello I'm John, my age is 20\"\n</code></pre>"},{"location":"dev/python/string-formatting/#formatted-string-literals-or-f-strings","title":"Formatted String Literals or f-Strings","text":"<p>If your are using Python 3.6+, string <code>f-Strings</code> are the recommended way to format strings.</p> <p>      From the Python 3 documentation      A formatted string literal or f-string is a string literal that is prefixed with <code>f</code> or <code>F</code>. These strings may contain replacement fields, which are expressions delimited by curly braces {}. While other string literals always have a constant value, formatted strings are really expressions evaluated at run time.    </p> <pre><code>&gt;&gt;&gt; name = 'Elizabeth'\n&gt;&gt;&gt; f'Hello {name}!'\n# 'Hello Elizabeth!'\n</code></pre> <p>It is even possible to do inline arithmetic with it:</p> <pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; b = 10\n&gt;&gt;&gt; f'Five plus ten is {a + b} and not {2 * (a + b)}.'\n# 'Five plus ten is 15 and not 30.'\n</code></pre>"},{"location":"dev/python/string-formatting/#multiline-f-strings","title":"Multiline f-Strings","text":"<pre><code>&gt;&gt;&gt; name = 'Robert'\n&gt;&gt;&gt; messages = 12\n&gt;&gt;&gt; (\n... f'Hi, {name}. '\n... f'You have {messages} unread messages'\n... )\n# 'Hi, Robert. You have 12 unread messages'\n</code></pre>"},{"location":"dev/python/string-formatting/#the-specifier","title":"The <code>=</code> specifier","text":"<p>This will print the expression and its value:</p> <pre><code>&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; now = datetime.now().strftime(\"%b/%d/%Y - %H:%M:%S\")\n&gt;&gt;&gt; f'date and time: {now=}'\n# \"date and time: now='Nov/14/2022 - 20:50:01'\"\n</code></pre>"},{"location":"dev/python/string-formatting/#adding-spaces-or-characters","title":"Adding spaces or characters","text":"<pre><code>&gt;&gt;&gt; f\"{name.upper() = :-^20}\"\n# 'name.upper() = -------ROBERT-------'\n&gt;&gt;&gt;\n&gt;&gt;&gt; f\"{name.upper() = :^20}\"\n# 'name.upper() =        ROBERT       '\n&gt;&gt;&gt;\n&gt;&gt;&gt; f\"{name.upper() = :20}\"\n# 'name.upper() = ROBERT              '\n</code></pre>"},{"location":"dev/python/string-formatting/#formatting-digits","title":"Formatting Digits","text":"<p>Adding thousands separator</p> <pre><code>&gt;&gt;&gt; a = 10000000\n&gt;&gt;&gt; f\"{a:,}\"\n# '10,000,000'\n</code></pre> <p>Rounding</p> <pre><code>&gt;&gt;&gt; a = 3.1415926\n&gt;&gt;&gt; f\"{a:.2f}\"\n# '3.14'\n</code></pre> <p>Showing as Percentage</p> <pre><code>&gt;&gt;&gt; a = 0.816562\n&gt;&gt;&gt; f\"{a:.2%}\"\n# '81.66%'\n</code></pre>"},{"location":"dev/python/string-formatting/#number-formatting-table","title":"Number formatting table","text":"Number Format Output description 3.1415926 {:.2f} 3.14 Format float 2 decimal places 3.1415926 {:+.2f} +3.14 Format float 2 decimal places with sign -1 {:+.2f} -1.00 Format float 2 decimal places with sign 2.71828 {:.0f} 3 Format float with no decimal places 4 {:0&gt;2d} 04 Pad number with zeros (left padding, width 2) 4 {:x&lt;4d} 4xxx Pad number with x\u2019s (right padding, width 4) 10 {:x&lt;4d} 10xx Pad number with x\u2019s (right padding, width 4) 1000000 {:,} 1,000,000 Number format with comma separator 0.35 {:.2%} 35.00% Format percentage 1000000000 {:.2e} 1.00e+09 Exponent notation 11 {:11d} 11 Right-aligned (default, width 10) 11 {:&lt;11d} 11 Left-aligned (width 10) 11 {:^11d} 11 Center aligned (width 10)"},{"location":"dev/python/string-formatting/#template-strings","title":"Template Strings","text":"<p>A simpler and less powerful mechanism, but it is recommended when handling strings generated by users. Due to their reduced complexity, template strings are a safer choice.</p> <pre><code>&gt;&gt;&gt; from string import Template\n&gt;&gt;&gt; name = 'Elizabeth'\n&gt;&gt;&gt; t = Template('Hey $name!')\n&gt;&gt;&gt; t.substitute(name=name)\n# 'Hey Elizabeth!'\n</code></pre>"},{"location":"dev/python/virtual-environments/","title":"Python Virtual environments","text":"<p> Virtual Environment </p> <p>The use of a Virtual Environment is to test python code in encapsulated environments, and to also avoid filling the base Python installation with libraries we might use for only one project.</p>"},{"location":"dev/python/virtual-environments/#virtualenv","title":"virtualenv","text":"<ol> <li> <p>Install virtualenv</p> <pre><code>pip install virtualenv\n</code></pre> </li> <li> <p>Install virtualenvwrapper-win (Windows)</p> <pre><code>pip install virtualenvwrapper-win\n</code></pre> </li> </ol> <p>Usage:</p> <ol> <li> <p>Make a Virtual Environment named <code>HelloWorld</code></p> <pre><code>mkvirtualenv HelloWorld\n</code></pre> <p>Anything we install now will be specific to this project. And available to the projects we connect to this environment.</p> </li> <li> <p>Set Project Directory</p> <p>To bind our virtualenv with our current working directory we simply enter:</p> <pre><code>setprojectdir .\n</code></pre> </li> <li> <p>Deactivate</p> <p>To move onto something else in the command line type <code>deactivate</code> to deactivate your environment.</p> <pre><code>deactivate\n</code></pre> <p>Notice how the parenthesis disappear.</p> </li> <li> <p>Workon</p> <p>Open up the command prompt and type <code>workon HelloWorld</code> to activate the environment and move into your root project folder</p> <pre><code>workon HelloWorld\n</code></pre> </li> </ol>"},{"location":"dev/python/virtual-environments/#poetry","title":"Poetry","text":"<p>      From Poetry website      Poetry is a tool for dependency management and packaging in Python. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you.    </p> <ol> <li> <p>Install Poetry</p> <pre><code>pip install --user poetry\n</code></pre> </li> <li> <p>Create a new project</p> <pre><code>poetry new my-project\n</code></pre> <p>This will create a my-project directory:</p> <pre><code>my-project\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.rst\n\u251c\u2500\u2500 poetry_demo\n\u2502   \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 test_poetry_demo.py\n</code></pre> <p>The pyproject.toml file will orchestrate your project and its dependencies:</p> <pre><code>[tool.poetry]\nname = \"my-project\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"your name &lt;your@mail.com&gt;\"]\n\n[tool.poetry.dependencies]\npython = \"*\"\n\n[tool.poetry.dev-dependencies]\npytest = \"^3.4\"\n</code></pre> </li> <li> <p>Packages</p> <p>To add dependencies to your project, you can specify them in the tool.poetry.dependencies section:</p> <pre><code>[tool.poetry.dependencies]\npendulum = \"^1.4\"\n</code></pre> <p>Also, instead of modifying the pyproject.toml file by hand, you can use the add command and it will automatically find a suitable version constraint.</p> <pre><code>$ poetry add pendulum\n</code></pre> <p>To install the dependencies listed in the pyproject.toml:</p> <pre><code>poetry install\n</code></pre> <p>To remove dependencies:</p> <pre><code>poetry remove pendulum\n</code></pre> </li> </ol> <p>For more information, check the documentation or read here:</p> <ul> <li>Python projects with Poetry and VSCode. Part 1</li> <li>Python projects with Poetry and VSCode. Part 2</li> <li>Python projects with Poetry and VSCode. Part 3</li> </ul>"},{"location":"dev/python/virtual-environments/#pipenv","title":"Pipenv","text":"<p>      From Pipenv website      Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. Windows is a first-class citizen, in our world.    </p> <ol> <li> <p>Install pipenv</p> <pre><code>pip install pipenv\n</code></pre> </li> <li> <p>Enter your Project directory and install the Packages for your project</p> <pre><code>cd my_project\npipenv install &lt;package&gt;\n</code></pre> <p>Pipenv will install your package and create a Pipfile for you in your project\u2019s directory. The Pipfile is used to track which dependencies your project needs in case you need to re-install them.</p> </li> <li> <p>Uninstall Packages</p> <pre><code>pipenv uninstall &lt;package&gt;\n</code></pre> </li> <li> <p>Activate the Virtual Environment associated with your Python project</p> <pre><code>pipenv shell\n</code></pre> </li> <li> <p>Exit the Virtual Environment</p> <pre><code>exit\n</code></pre> </li> </ol> <p>Find more information and a video in docs.pipenv.org.</p>"},{"location":"dev/python/virtual-environments/#anaconda","title":"Anaconda","text":"<p> Anaconda is another popular tool to manage python packages.         Where packages, notebooks, projects and environments are shared. Your place for free public conda package hosting.    </p> <p>Usage:</p> <ol> <li> <p>Make a Virtual Environment</p> <pre><code>conda create -n HelloWorld\n</code></pre> </li> <li> <p>To use the Virtual Environment, activate it by:</p> <pre><code>conda activate HelloWorld\n</code></pre> <p>Anything installed now will be specific to the project HelloWorld</p> </li> <li> <p>Exit the Virtual Environment</p> <pre><code>conda deactivate\n</code></pre> </li> </ol>"},{"location":"linux/account/","title":"Account","text":"<p>List account :</p> <pre><code>find /home -maxdepth 1 -type d -group users | cut -d '/' -f3\n</code></pre>"},{"location":"linux/account/#useradd","title":"Useradd","text":"<p>How to adding user ?</p> <pre><code>useradd -s /sbin/nologin -G $GRP\nuseradd -m -G wheel -s /bin/bash $account\n</code></pre>"},{"location":"linux/account/#lock-unlock","title":"Lock / Unlock","text":"<p>Check password status :</p> <pre><code>passwd -S $USER\n</code></pre> <p>Status list :</p> <ul> <li>LK: Password locked</li> <li>NP: No password</li> <li>PS: Password set</li> </ul>"},{"location":"linux/account/#unlock","title":"Unlock","text":"<p>Use the <code>-u</code> to unlock account:</p> <pre><code>passwd -u $USER\n</code></pre>"},{"location":"linux/account/#lock","title":"Lock","text":"<p>Use the <code>-L</code> to lock account:</p> <pre><code>passwd -L $USER\n</code></pre>"},{"location":"linux/account/#time-life-password","title":"Time life password","text":"<p>Show the account password information:</p> <pre><code>chage -l $USER\n</code></pre> <p>Set minimum day:</p> <pre><code>chage -m ${NOMBER OF DAY} ${USER}\n</code></pre>"},{"location":"linux/account/#sudoers","title":"Sudoers","text":"<p>Autorisation de l\u2019utilisateur max de supprimer dans le dossier.</p> <pre><code>max ALL=NOPASSWD:/bin/rm -rf $CHEMIN_de_DOSSIER/*\n</code></pre> <p>Autorisation pour l\u2019utilisateur matry_mc_fly de lire les fichiers dans le dossier.</p> <pre><code>marty_mc_fly ALL=NOPASSWD:/usr/bin/cat /var/log/mariadb/*\n</code></pre>"},{"location":"linux/account/#last-connection","title":"Last connection","text":"<p>Check last user connection :</p> <pre><code>last -15 -aFw\n</code></pre> <p>For DEB packages only :</p> <pre><code>cat /var/log/auth.log\n</code></pre>"},{"location":"linux/apps/","title":"Apps","text":""},{"location":"linux/apps/#bpytop","title":"bpytop","text":"<p>How to isntall bpytop based on APT :</p> <pre><code>apt install python3-pip\npip3 install psutil\npip3 install bpytop\n</code></pre>"},{"location":"linux/cron/","title":"cron","text":"<p>A CRON expression is simply a string consisting of six fields that each define a specific unit of time.</p> <p></p> <p>They are written in the following format:</p> <pre><code>{second} {minute} {hour} {day} {month} {day of the week}\n</code></pre>"},{"location":"linux/cron/#values","title":"Values","text":"<p>The following values are allowed within each date/time unit placeholder.</p> Field Allowed Values \u00a0Description {second} 0-59 Trigger every {second} second(s) {minute} 0-59 Trigger every {minute} minute(s) {hour} 0-23 Trigger every {hour} hour(s) {day} 1-31 Trigger every {day} day(s) of month {month} 1-12 Trigger every {month} month(s) {day of week} 0-6 MON-SUN Trigger on specific {day of week}"},{"location":"linux/cron/#special-characters","title":"Special Characters","text":"<p>Additionally you can also use the following special characters to build more advanced expressions:</p> Special Character Description <code>*</code> Trigger on tick of every time unit <code>,</code> List separator <code>\u2013</code> Specifies a range <code>/</code> Defines an increment"},{"location":"linux/cron/#examples","title":"Examples","text":"Scheduel Description <code>0 * * * * *</code> Executes every minute <code>0 0 * * * *</code> Executes every hour <code>0 0 0 * * *</code> Executes every day <code>0 0 0 0 * *</code> Executes every month <code>0 0 0 1 1 *</code> Executes on first day of Jan\u00a0each year <code>30 20 * * SAT</code> Executes at 08:30pm every Saturday <code>30 20 * * 6</code> Executes at 08:30pm every Saturday <code>0 */5 * * * *</code> Executes every five minutes <code>0 0 8-10/1 * * *</code> Executes every hour between 8am and 10am"},{"location":"linux/desktop/","title":"Desktop","text":""},{"location":"linux/desktop/#desktop-environement","title":"Desktop Environement","text":"<p>Here are somes Desktop Environement tips &amp; tricks</p>"},{"location":"linux/desktop/#gnome","title":"Gnome","text":""},{"location":"linux/desktop/#ajouter-une-application-dans-gnom-shell","title":"Ajouter une application dans gnom shell","text":"<p>Ajouter un fichier .desktop dans /usr/share/appliations/MONAPPLI.desktop :</p> <pre><code>[Desktop Entry]\nName=MonAppli\nComment=Descritpion de l'appli\nExec=MonAppli.sh %U\nIcon=/usr/share/icons/monappli.svg\nTerminal=false\nType=Application\nEncoding=UTF-8\nCategories=Network;Application\n</code></pre>"},{"location":"linux/desktop/#modifier-une-application-existante","title":"Modifier une application \u00e9xistante","text":"<p>Trouver le fichier de l'application choisie, ici <code>VirtualBox</code> Un soucis connu sur Gnome et virtualbox est que l'interface soit broken. On vient alors corrig\u00e9 ceci en  changeant le style de celui-ci via la commande :</p> <pre><code>VirtualBox -style Adwaita\n</code></pre> <p>On vient alors modifier le fichier <code>/usr/share/applications/virtualbox.desktop</code> On remplace la ligne 10 <code>Exec=VirtualBox %U</code> par <code>Exec=VirtualBox -style Adwaita</code>.</p>"},{"location":"linux/desktop/#desktop-manager","title":"Desktop Manager","text":""},{"location":"linux/desktop/#lightdm","title":"Lightdm","text":""},{"location":"linux/desktop/#autologin","title":"Autologin","text":"<p>Editer le fichier de configuration suivant : <code>/etc/lightdm/lightdm.conf</code> Compl\u00e9ter les informations attendues :</p> <pre><code>autologin-user=jdoe\n</code></pre>"},{"location":"linux/disk/","title":"Storage","text":""},{"location":"linux/disk/#compressed-files","title":"Compressed files","text":"<p>Voici le d\u00e9tail des options :</p> <ul> <li>c : cr\u00e9e un archive.</li> <li>z : compresse l\u2019archive avec gzip.</li> <li>v : mode verbeux, affiche la progression.</li> <li>f : permet de sp\u00e9cifier le nom du fichier d\u2019archive.</li> </ul>"},{"location":"linux/disk/#compresser","title":"Compresser","text":"<p>Compresser des fichiers :</p> <pre><code>tar -czvf nom-de-l-archive.tar.gz /chemin/vers/r\u00e9pertoire-ou-fichier\n</code></pre>"},{"location":"linux/disk/#decompresser","title":"D\u00e9compresser","text":"<p>Pour d\u00e9compresser le rar avec son passwd :</p> <pre><code>rar x -hP{MOT DE PASSE} {FICHIER.RAR}\nrar x -hPTEST test2.rar\n</code></pre>"},{"location":"linux/disk/#dd","title":"DD","text":"<p>dd n\u00e9cessite de droits super utilisateur :</p> <pre><code>sudo dd bs=4M if=$chemin/fichier.iso of=/dev/$disk &amp;&amp; sync\n</code></pre>"},{"location":"linux/disk/#create-1-file-heavy-as-1g","title":"Create 1 file heavy as 1G","text":"<pre><code>dd if=/dev/urandom of=tempfile bs=1M count=1024\n</code></pre>"},{"location":"linux/disk/#lvm-logical-volume-manager","title":"LVM - Logical Volume Manager","text":""},{"location":"linux/disk/#extend-partition","title":"Extend partition","text":"<pre><code>fdisk dev/sdX\n</code></pre> <pre><code>echo 1 &gt; /sys/block/sdX/device/rescan\n</code></pre> <pre><code>pvresize /dev/sdX2\n</code></pre>"},{"location":"linux/disk/#make-fs","title":"Make FS","text":""},{"location":"linux/disk/#xfs","title":"XFS","text":"<pre><code>mkfs.xfs -d su=64k,sw=4 /dev/mapper/\n</code></pre>"},{"location":"linux/disk/#ext4","title":"EXT4","text":"<pre><code>mkfs.ext4 -L Label /dev/block_device\n</code></pre>"},{"location":"linux/disk/#scan-disk","title":"Scan Disk","text":"<p>Rescan disk</p> <pre><code>echo 1 &gt; /sys/class/scsi_disk/1\\[:TAB:]/device/rescan\n</code></pre>"},{"location":"linux/disk/#extend-volumes","title":"Extend volumes","text":"<pre><code>lvextend -L+&lt;&lt;&gt;&gt;G /dev/mapper/VOLUME\n</code></pre>"},{"location":"linux/disk/#apply-modifications","title":"Apply modifications","text":"<pre><code>resize2fs /dev/mapper/VOLUME\n</code></pre>"},{"location":"linux/disk/#reducing-an-lvm2-swap-logical-volume","title":"Reducing an LVM2 Swap Logical Volume","text":"<p>Disable swapping for the associated logical volume:</p> <pre><code>swapoff -v /dev/VolGroup00/LogVol01\n</code></pre> <p>Reduce the LVM2 logical volume by 512 MB:</p> <pre><code>lvreduce /dev/VolGroup00/LogVol01 -L -512M\n</code></pre> <p>Format the new swap space:</p> <pre><code>mkswap /dev/VolGroup00/LogVol01\n</code></pre> <p>Activate swap on the logical volume:</p> <pre><code>swapon -v /dev/VolGroup00/LogVol01\n</code></pre> <p>To test if the swap logical volume was successfully reduced, inspect active swap space:</p> <pre><code>cat /proc/swaps\n</code></pre>"},{"location":"linux/disk/#label-block-device","title":"Label Block Device","text":"<pre><code>e4label &lt;block_device&gt; new-label\n</code></pre>"},{"location":"linux/exit-codes/","title":"Exit codes","text":"<ul> <li>Contient le nom du script tel qu'il a \u00e9t\u00e9 invoqu\u00e9: <p>$0</p> </li> <li>L'ensembles des param\u00e8tres sous la forme d'un seul argument: <p>$*</p> </li> <li>L'ensemble des arguments, un argument par param\u00e8tre: <p>$@</p> </li> <li>Le nombre de param\u00e8tres pass\u00e9s au script: <p>$#</p> </li> <li>Le code retour de la derni\u00e8re commande: <p>$?</p> </li> <li>Le PID su shell qui ex\u00e9cute le script: <p><code>$$</code></p> </li> <li>Le PID du dernier processus lanc\u00e9 en arri\u00e8re-plan: <p><code>$!</code></p> </li> </ul>"},{"location":"linux/firewalld/","title":"Firewall","text":""},{"location":"linux/firewalld/#default-configuration-of-firewalld-zones","title":"Default Configuration of Firewalld Zones","text":"Zone name Default configuration trusted Allow all incoming traffic. home Reject incoming traffic unless related to outgoing traffic or matching the ssh, mdns, ipp-client, samba-client, or dhcpv6-client pre-defined services. internal Reject incoming traffic unless related to outgoing traffic or matching the ssh, mdns, ipp-client, samba-client, or dhcpv6-client pre-defined services (same as the home zone to start with). work Reject incoming traffic unless related to outgoing traffic or matching the ssh, ipp-client, or dhcpv6-client pre-defined services. public Reject incoming traffic unless related to outgoing traffic or matching the ssh or dhcpv6-client pre-defined services. The default zone for newly added network interfaces. external Reject incoming traffic unless related to outgoing traffic or matching the ssh pre-defined service. Outgoing IPv4 traffic forwarded through this zone is masqueraded to look like it originated from the IPv4 address of the outgoing network interface. dmz Reject incoming traffic unless related to outgoing traffic or matching the ssh pre-defined service. block Reject all incoming traffic unless related to outgoing traffic. drop Drop all incoming traffic unless related to outgoing traffic (do not even respond with ICMP errors). <p>For a list of available pre-defined zones and intended use, see firewalld.zones(5).</p>"},{"location":"linux/firewalld/#configuring-the-firewall-from-the-command-line","title":"Configuring the Firewall from the Command Line","text":"<p>The firewall-cmd command interacts with the firewalld dynamic firewall manager.</p> <p>It is installed as part of the main firewalld package and is available for administrators who prefer to work on the command line, for working on systems without a graphical environment, or for scripting a firewall setup.</p> <p>The following table lists a number of frequently used firewall-cmd commands, along with an explanation.</p> <p>Note that unless otherwise specified, almost all commands will work on the runtime configuration, unless the --permanent option is specified.</p> <p>If the --permanent option is specified, you must activate the setting by also running the <code>firewall-cmd --reload</code> command, which reads the current permanent configuration and applies it as the new runtime configuration.</p> <p>Many of the commands listed take the --zone=ZONE option to determine which zone they affect.</p> <p>Where a netmask is required, use CIDR notation, such as 192.168.1/24.</p> firewall-cmd commands Explanation --get-default-zone Query the current default zone. --set-default-zone=ZONE Set the default zone. This changes both the runtime and the permanent configuration. --get-zones List all available zones. --get-active-zones List all zones currently in use (have an interface or source tied to them), along with their interface and source information. --add-source=CIDR [--zone=ZONE] Route all traffic coming from the IP address or network/netmask to the specified zone. If no --zone= option is provided, the default zone is used. --remove-source=CIDR [--zone=ZONE] Remove the rule routing all traffic from the zone coming from the IP address or network/netmask network. If no --zone= option is provided, the default zone is used. --add-interface=INTERFACE [--zone=ZONE] Route all traffic coming from INTERFACE to the specified zone. If no --zone= option is provided, the default zone is used. --change-interface=INTERFACE [--zone=ZONE] Associate the interface with ZONE instead of its current zone. If no --zone= option is provided, the default zone is used. --list-all [--zone=ZONE] List all configured interfaces, sources, services, and ports for ZONE. If no --zone= option is provided, the default zone is used. --list-all-zones Retrieve all information for all zones (interfaces, sources, ports, services). --add-service=SERVICE [--zone=ZONE] Allow traffic to SERVICE. If no --zone= option is provided, the default zone is used. --add-port=PORT/PROTOCOL [--zone=ZONE] Allow traffic to the PORT/PROTOCOL port(s). If no --zone= option is provided, the default zone is used. --remove-service=SERVICE [--zone=ZONE] Remove SERVICE from the allowed list for the zone. If no --zone= option is provided, the default zone is used. --remove-port=PORT/PROTOCOL [--zone=ZONE] Remove the PORT/PROTOCOL port(s) from the allowed list for the zone. If no --zone= option is provided, the default zone is used. --reload Drop the runtime configuration and apply the persistent configuration. <p>The example commands below set the default zone to dmz, assign all traffic coming from the 192.168.0.0/24 network to the internal zone, and open the network ports for the mysql service on the internal zone.</p> <pre><code>[root@host ~]# firewall-cmd --set-default-zone=dmz\n[root@host ~]# firewall-cmd --permanent --zone=internal --add-source=192.168.0.0/24\n[root@host ~]# firewall-cmd --permanent --zone=internal --add-service=mysql\n[root@host ~]# firewall-cmd --reload\n</code></pre>"},{"location":"linux/fstab/","title":"Filesystem table AKA fstab","text":"<p>It is a set of rules used to control how different filesystems are treated each time they are introduced to a system.</p>"},{"location":"linux/fstab/#structure","title":"Structure","text":"<p>The table itself is a 6 column structure, where each column designates a specific parameter and must be set up in the correct order.</p> <p>The columns of the table are as follows from left to right</p> <pre><code># &lt;file system&gt; &lt;mount point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;\n</code></pre>"},{"location":"linux/fstab/#device","title":"Device","text":"<p>Usually the given name or UUID of the mounted device (sda1/sda2/etc). Mount Point: designates the directory where the device is/will be mounted.</p>"},{"location":"linux/fstab/#file-system-type","title":"File System Type","text":"<p>Nothing trick here, shows the type of filesystem in use.</p>"},{"location":"linux/fstab/#options","title":"Options","text":"<p>Lists any active mount options. If using multiple options they must be separated by commas.</p>"},{"location":"linux/fstab/#backup-operation-the-first-digit","title":"Backup Operation (the first digit)","text":"<p>This is a binary system where 1 = dump utility backup of a partition. 0 = no backup. This is an outdated backup method and should NOT be used.</p>"},{"location":"linux/fstab/#file-system-check-order-second-digit","title":"File System Check Order (second digit)","text":"<p>Here we can see three possible outcomes.  </p> <ul> <li>0 means that fsck will not check the filesystem.     &gt; Numbers higher than this represent the check order.</li> <li>The root filesystem should be set to 1 and other partitions set to 2.</li> </ul>"},{"location":"linux/gawk/","title":"GWAK","text":"<p>Arnold Robbins, an Atlanta native, is a professional programmer and technical author. </p> <p>He has been a heavy AWK user since 1987, when he became involved with gawk, the GNU project's version of AWK. </p>"},{"location":"linux/gawk/#sed","title":"Sed","text":"<p>Add item to certain line</p> <pre><code>sed -i '20 a nouvel \u00e9l\u00e8ment' FICHIER\n</code></pre>"},{"location":"linux/gawk/#remove-saut-de-ligne","title":"Remove saut de ligne","text":"<pre><code>sed '/^$/d'\n</code></pre> <pre><code>sed '/^:space:*$/d'\n</code></pre>"},{"location":"linux/gawk/#awk","title":"AWK","text":"<p>Awk command :</p> Command - Example grep /word/ <code>awk '/data/ {gsub(\"\\\"\",\"\"); print $2}'</code> gsub thing to remove <code>awk '{gsub(\"\\\"\",\"\"); print $2}'</code>"},{"location":"linux/gawk/#tr","title":"TR","text":"<p>Remove space :</p> <pre><code>tr -d '[:blank:]'\n</code></pre>"},{"location":"linux/gawk/#find","title":"FIND","text":""},{"location":"linux/gawk/#files","title":"Files","text":"<p>Find all 'jacquet' file from $PLACE :</p> <pre><code>find $PLACE -name \"jacquet\"\n</code></pre>"},{"location":"linux/gawk/#directory","title":"Directory","text":"<p>Find all files older than 90 days in <code>/var/log/httpd/</code> directory</p> <pre><code>find /var/log/httpd/ -type f -name \"*\" -mtime +90 -exec rm -f {} \\;\n</code></pre>"},{"location":"linux/gawk/#exclude","title":"Exclude","text":"<p>How to exclude directory.ies ?</p> <p>Use the <code>! -path '*$THING*'</code>syntax</p> <pre><code>find $PLACE -type f -name $SOMETING ! -path '*NOT_THIS_ONE*'\n</code></pre> <p>Note</p> <p><code>{}</code> is the resutl of find command</p>"},{"location":"linux/gawk/#grep","title":"Grep","text":"<p>That is a command-line utility for searching plain-text data sets for lines that match a regular expression.</p> <p>Its name comes from the <code>ed</code> command <code>g/re/p</code> (globally search for a regular expression and print matching lines).</p> <pre><code>grep thing file.txt\ngrep \"searching elements\" -A $NUMBER_OF_LINE -B $NUMBER_OF_LINE\n</code></pre> <p>Catch something from multiple files</p> <pre><code>grep -ari copyright /var/www/html/\n</code></pre>"},{"location":"linux/getops/","title":"Getops","text":"<p>getopts processes the positional parameters of the parent command. In bash, this is stored in the shell variable \"$@\".</p>"},{"location":"linux/getops/#positional-parameters","title":"Positional parameters","text":"<p>A positional parameter is an argument specified on the command line, used to launch the current process in a shell.</p> <p>Positional parameter values are stored in a special set of variables maintained by the shell.</p> <p></p> <pre><code>mycmd -a argument1 -b argument2\n</code></pre>"},{"location":"linux/getops/#examples","title":"EXAMPLES","text":"<p>The following code fragment shows how one might process the arguments for a command that can take the options -a and -b, and the option -o, which requires an argument.</p> <pre><code>args=`getopt abo: $*`\n# you should not use `getopt abo: \"$@\"` since that would parse\n# the arguments differently from what the set command below does.\nif [ $? -ne 0 ]; then\necho 'Usage: ...'\nexit 2\nfi\nset -- $args\n# You cannot use the set command with a backquoted getopt directly,\n# since the exit code from getopt would be shadowed by those of set,\n# which is zero by definition.\nwhile :; do\ncase \"$1\" in\n-a|-b)\necho \"flag $1 set\"; sflags=\"${1#-}$sflags\"\nshift\n;;\n-o)\necho \"oarg is '$2'\"; oarg=\"$2\"\nshift; shift\n;;\n--)\nshift; break\n;;\nesac\ndone\necho \"single-char flags: '$sflags'\"\necho \"oarg is '$oarg'\"\n</code></pre>"},{"location":"linux/keymaps/","title":"Keymap","text":"<p>Liste:</p> <ul> <li>D\u00e9but du mot : <code>b</code></li> <li>D\u00e9but du dexi\u00e8me mot en partant du mot d'origin : <code>3B</code></li> <li>Fin du mot suivant : <code>e</code></li> <li>Mot suivant : <code>w</code></li> <li>Replace : <code>r</code></li> <li>Supprimer carract\u00e8re par carract\u00e8re : <code>x</code></li> <li>Supprimer \u00e0 reculon carract\u00e8re par carract\u00e8re : <code>c</code></li> <li>Changer (ce -&gt; changer jusqu'\u00e0 la fin du mot ) : <code>c</code></li> <li>Enregister les modifications : <code>ZZ</code></li> <li>Enregistrer les modifications et quiter le fichier : <code>ZQ</code></li> </ul> <p>R\u00e9peter la derni\u00e8re actions effectu\u00e9e : <code>.</code></p>"},{"location":"linux/kickstart/","title":"Kickstart File Commands","text":""},{"location":"linux/kickstart/#installation-commands","title":"Installation Commands","text":"<p>Define the installation source and how to perform the installation. Each is followed by an example.</p> <ul> <li>url: Specifies the URL pointing to the installation media.</li> </ul> <pre><code>url --url=\"http://classroom.example.com/content/rhel8.2/x86_64/dvd/\"\n</code></pre> <ul> <li>repo: Specifies where to find additional packages for installation.</li> </ul> <p>This option must point to a valid yum repository.</p> <pre><code>    repo --name=\"appstream\" --baseurl=http://classroom.example.com/content/rhel8.2/x86_64/dvd/AppStream/\n</code></pre> <ul> <li> <p>text: Forces a text mode install.</p> </li> <li> <p>vnc: Allows the graphical installation to be viewed remotely over VNC.</p> </li> </ul> <pre><code>vnc --password=redhat\n</code></pre>"},{"location":"linux/kickstart/#partitioning-commands","title":"Partitioning Commands","text":"<p>Define the devices and partitioning scheme to be used.</p> <ul> <li>clearpart: Removes partitions from the system prior to creation of new partitions.</li> </ul> <p>By default, no partitions are removed.</p> <pre><code>clearpart --all --drives=sda,sdb --initlabel\n</code></pre> <ul> <li>part: Specifies the size, format, and name of a partition.</li> </ul> <pre><code>part /home --fstype=ext4 --label=homes --size=4096 --maxsize=8192 --grow\n</code></pre> <ul> <li>autopart: Automatically creates a root partition, a swap partition, and an appropriate boot partition for the architecture. </li> </ul> <p>On large enough drives, this also creates a /home partition.</p> <ul> <li>ignoredisk: Controls Anaconda's access to disks attached to the system.</li> </ul> <pre><code>ignoredisk --drives=sdc\n</code></pre> <ul> <li>bootloader: Defines where to install the bootloader.</li> </ul> <pre><code>bootloader --location=mbr --boot-drive=sda\n</code></pre> <ul> <li>volgroup, logvol: Creates LVM volume groups and logical volumes.</li> </ul> <pre><code>    part pv.01 --size=8192\nvolgroup myvg pv.01\n    logvol / --vgname=myvg --fstype=xfs --size=2048 --name=rootvol --grow\n    logvol /var --vgname=myvg --fstype=xfs --size=4096 --name=varvol\n</code></pre> <ul> <li>zerombr: Initialize disks whose formatting is unrecognized.</li> </ul>"},{"location":"linux/kickstart/#network-commands","title":"Network Commands","text":"<p>Define the network features used by the host.</p> <ul> <li>network: Configures network information for target system. </li> </ul> <p>Activates network devices in installer environment.</p> <pre><code>network --device=eth0 --bootproto=dhcp\n</code></pre> <ul> <li> <p>firewall: Defines the firewall configuration for the target system.</p> <p>firewall --enabled --service=ssh,http</p> </li> </ul> <p>Location and Security Commands</p> <p>Configure settings related to security, language, and regions.</p> <ul> <li>lang: Sets the language to use during installation and the default language of the installed system. Required.</li> </ul> <pre><code>    lang en_US.UTF-8\n</code></pre> <ul> <li>keyboard: Sets the system keyboard type. Required.</li> </ul> <pre><code>    keyboard --vckeymap=us --xlayouts=''\n</code></pre> <ul> <li>timezone: Defines the timezone, NTP servers, and whether the hardware clock uses UTC.</li> </ul> <pre><code>timezone --utc --ntpservers=time.example.com Europe/Amsterdam\n</code></pre> <ul> <li>authselect: Sets up authentication options.</li> </ul> <p>Options recognized by authselect are valid for this command.</p> <ul> <li>rootpw: Defines the initial root password.</li> </ul> <pre><code>rootpw --plaintext redhat\n\nor\n\nrootpw --iscrypted $6$KUnFfrTzO8jv.PiH$YlBbOtXBkWzoMuRfb0.SpbQ....XDR1UuchoMG1\n</code></pre> <ul> <li>selinux: Sets the SELinux mode for the installed system.</li> </ul> <pre><code>    selinux --enforcing\n</code></pre> <ul> <li>services: Modifies the default set of services to run under the default systemd target.</li> </ul> <pre><code>    services --disabled=network,iptables,ip6tables --enabled=NetworkManager,firewalld\n</code></pre> <ul> <li>group, user: Create a local group or user on the system.</li> </ul> <pre><code>    group --name=admins --gid=10001\nuser --name=jdoe --gecos=\"John Doe\" --groups=admins --password=changeme --plaintext\n</code></pre>"},{"location":"linux/kickstart/#miscellaneous-commands","title":"Miscellaneous Commands","text":"<p>Configure miscellaneous items related to logging during the installation and the host power state at completion.</p> <ul> <li>logging: This command defines how Anaconda will perform logging during the installation.</li> </ul> <pre><code>    logging --host=loghost.example.com --level=info\n</code></pre> <ul> <li>firstboot: If enabled, the Setup Agent starts the first time the system boots.</li> </ul> <p>The initial-setup package must be installed.</p> <pre><code>    firstboot --disabled\n</code></pre> <ul> <li>reboot, poweroff, halt: Specify the final action to take when the installation completes.</li> </ul> <p>Info</p> <p>The ksverdiff utility from the pykickstart package is useful for identifying changes in Kickstart file syntax between two versions of Red\u00a0Hat Enterprise\u00a0Linux or Fedora.</p> <p>For example, ksverdiff -f RHEL7 -t RHEL8 identifies changes in syntax from RHEL 7 to RHEL 8. Available versions are listed in the top of the file /usr/lib/python3.6/site-packages/pykickstart/version.py.</p>"},{"location":"linux/kickstart/#example-kickstart-file","title":"Example Kickstart File","text":"<p>The first part of the file consists of the installation commands, such as disk partitioning and installation source.</p> <pre><code>#version=RHEL8\nignoredisk --only-use=vda\n# System bootloader configuration\nbootloader --append=\"console=ttyS0 console=ttyS0,115200n8 no_timer_check net.ifnames=0  crashkernel=auto\" --location=mbr --timeout=1 --boot-drive=vda\n# Clear the Master Boot Record\nzerombr\n# Partition clearing information\nclearpart --all --initlabel\n# Use text mode install\ntext\nrepo --name=\"appstream\" --baseurl=http://classroom.example.com/content/rhel8.2/x86_64/dvd/AppStream/\n# Use network installation\nurl --url=\"http://classroom.example.com/content/rhel8.2/x86_64/dvd/\"\n# Keyboard layouts\n# old format: keyboard us\n# new format:\nkeyboard --vckeymap=us --xlayouts=''\n# System language\nlang en_US.UTF-8\n# Root password\nrootpw --plaintext redhat\n# System authorization information\nauth --enableshadow --passalgo=sha512\n# SELinux configuration\nselinux --enforcing\nfirstboot --disable\n# Do not configure the X Window System\nskipx\n# System services\nservices --disabled=\"kdump,rhsmcertd\" --enabled=\"sshd,rngd,chronyd\"\n# System timezone\ntimezone America/New_York --isUtc\n# Disk partitioning information\npart / --fstype=\"xfs\" --ondisk=vda --size=10000\n</code></pre> <p>The second part contains the %packages section, detailing which packages and package groups should be installed, and which packages should not be installed.</p> <pre><code>%packages\n@core\nchrony\ncloud-init\ndracut-config-generic\ndracut-norescue\nfirewalld\ngrub2\nkernel\nrsync\ntar\n-plymouth\n\n%end\n</code></pre> <p>The last part contains any %pre and %post installation scripts.</p> <pre><code>%post --erroronfail\n\n# For cloud images, 'eth0' _is_ the predictable device name, since\n# we don't want to be tied to specific virtual (!) hardware\nrm -f /etc/udev/rules.d/70*\nln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules\n\n# simple eth0 config, again not hard-coded to the build hardware\ncat &gt; /etc/sysconfig/network-scripts/ifcfg-eth0 &lt;&lt; EOF\nDEVICE=\"eth0\"\nBOOTPROTO=\"dhcp\"\nONBOOT=\"yes\"\nTYPE=\"Ethernet\"\nUSERCTL=\"yes\"\nPEERDNS=\"yes\"\nIPV6INIT=\"no\"\nEOF\n\n%end\n</code></pre>"},{"location":"linux/kickstart/#creating-a-kickstart-file","title":"Creating a Kickstart File","text":"<p>Use either of these methods to create a Kickstart file:</p> <ul> <li>Use the Kickstart Generator website.</li> <li>Use a text editor.</li> </ul> <p>The Kickstart Generator website at https://access.redhat.com/labs/kickstartconfig/ presents dialog boxes for user inputs, and creates a Kickstart directives text file with the user's choices. Each dialog box corresponds to the configurable items in the Anaconda installer. </p> <p>Creating a Kickstart file from scratch is typically too complex, but editing an existing Kickstart file is common and useful. Every installation creates a /root/anaconda-ks.cfg file containing the Kickstart directives used in the installation.</p> <p>This file makes a good starting point when creating Kickstart file manually.</p> <p>ksvalidator is a utility that checks for syntax errors in a Kickstart file. It ensures that keywords and options are properly used, but it does not validate that URL paths, individual packages, or groups, nor any part of %post or %pre scripts will succeed. </p> <p>For instance, if the firewall --disabled directive is misspelled, ksvalidator could produce one of the following errors:</p> <p>```shell [user@host ~]$ ksvalidator /tmp/anaconda-ks.cfg The following problem occurred on line 10 of the kickstart file:</p> <p>Unknown command: frewall</p> <p>[user@host ~]$ ksvalidator /tmp/anaconda-ks.cfg The following problem occurred on line 10 of the kickstart file:</p> <p>no such option: --dsabled ````</p> <p>The pykickstart package provides ksvalidator.</p>"},{"location":"linux/kickstart/#publish-the-kickstart-file-to-anaconda","title":"Publish the Kickstart File to Anaconda","text":"<p>Make the Kickstart file available to the installer by placing it in one of these locations:</p> <ul> <li>A network server available at install time using FTP, HTTP, or NFS.</li> <li>An available USB disk or CD-ROM.</li> <li>A local hard disk on the system to be installed. </li> </ul> <p>The installer must access the Kickstart file to begin an automated installation. The most common automation method uses a network server such as an FTP, web, or NFS server. Network servers facilitate Kickstart file maintenance because changes can be made once, and then immediately used for multiple future installations.</p> <p>Providing Kickstart files on USB or CD-ROM is also convenient. The Kickstart file can be embedded on the boot media used to start the installation. However, when the Kickstart file is changed, you must generate new installation media.</p> <p>Providing the Kickstart file on a local disk allows you to quickly rebuild a system. Boot Anaconda and Point it to the Kickstart File</p> <p>Once a Kickstart method is chosen, the installer is told where to locate the Kickstart file by passing the inst.ks=LOCATION parameter to the installation kernel. Some examples:</p> <ul> <li>inst.ks=<code>http://server/dir/file</code></li> <li>inst.ks=<code>ftp://server/dir/file</code></li> <li>inst.ks=<code>nfs:server:/dir/file</code></li> <li>inst.ks=<code>hd:device:/dir/file</code></li> <li>inst.ks=<code>cdrom:device</code></li> </ul> <p></p> <p>For virtual machine installations using the Virtual Machine Manager or virt-manager, the Kickstart URL can be specified in a box under URL Options. When installing physical machines, boot using installation media and press the Tab key to interrupt the boot process. Add an inst.ks=LOCATION parameter to the installation kernel.</p>"},{"location":"linux/kickstart/#reference","title":"Reference","text":"<ul> <li>Red Hat System Administration II</li> </ul>"},{"location":"linux/logfile/","title":"Logfile","text":""},{"location":"linux/logfile/#logrotate","title":"Logrotate","text":""},{"location":"linux/logfile/#check","title":"Check","text":"<pre><code>logrotate -d /etc/logrotate.d/httpd\n</code></pre>"},{"location":"linux/logfile/#apply","title":"Apply","text":"<pre><code>logrotate -vf /etc/logrotate.d/httpd\n</code></pre>"},{"location":"linux/memory/","title":"RAM","text":"<p>List detailes :</p> <pre><code>ps axo rss, comm,pid,command | cat\n</code></pre>"},{"location":"linux/network/","title":"Network","text":"<p>Network files (depend of distro)</p> DEB: /etc/network/interfacesRPM: /etc/sysconfig/network-scripts/ifcfg-eth0 <pre><code>## This file describes the network interfaces available on your system\n## and how to activate them. For more information, see interfaces(5).\n\n## The loopback network interface\nauto lo\niface lo inet loopback\n\n## The primary network interface\nauto eth0\niface eth0 inet static\naddress 10.0.0.41\nnetmask 24\ngateway 10.0.0.0\ndns-nameservers 10.0.0.1 8.8.8.8\n</code></pre> <pre><code>TYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=none\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=no\nNAME=eth0\nUUID=67c4................f5d569\nDEVICE=eth0\nONBOOT=yes\nIPV6_DISABLED=yes\nIPADDR=0.0.0.0\nPREFIX=24\nGATEWAY=0.0.0.0\n</code></pre>"},{"location":"linux/package-manager/","title":"Package manager","text":""},{"location":"linux/package-manager/#rpm","title":"RPM","text":"<p>How to force installation without depedency.</p> <pre><code>rpm -Uvh </code></pre>"},{"location":"linux/package-manager/#debian","title":"Debian","text":""},{"location":"linux/package-manager/#repository","title":"Repository","text":"<ul> <li>bullseye 11 sources.list</li> </ul> <pre><code>deb http://deb.debian.org/debian bullseye main\ndeb-src http://deb.debian.org/debian bullseye main\n\ndeb http://deb.debian.org/debian-security/ bullseye-security main\ndeb-src http://deb.debian.org/debian-security/ bullseye-security main\n\ndeb http://deb.debian.org/debian bullseye-updates main\ndeb-src http://deb.debian.org/debian bullseye-updates main\n</code></pre>"},{"location":"linux/proc/","title":"Process","text":"<p>Lister tout les processus :</p> <ul> <li>a : Ayant un terminal de contr\u00f4le</li> <li>u : Lanc\u00e9s par l'/es utilisateur(s)</li> <li>x : N'ayant pas de terminal de contr\u00f4le (TTY)</li> <li>e : Tout les processe</li> <li>d : Tout les processes sauf ceux de la session courante</li> <li>l : Liste longue</li> <li>f : Full -&gt; Avoir le nom complet du processus</li> </ul>"},{"location":"linux/proc/#cpu","title":"CPU","text":"<p>Lister le nombre de processeur :</p> <pre><code>nproc\n</code></pre>"},{"location":"linux/proc/#load","title":"Load","text":"<p>Check the load average fixed by the system:</p> <p>cat /proc/loadavg</p> <p>Verify time since the system is up:</p> <pre><code>uptime\n</code></pre> <p>You could check your system processes by top/htop or glances and more one else:</p> <pre><code>top\n</code></pre> <p>You can folow your CPU in real time by this command:</p> <pre><code>vmstat -w 1\n</code></pre>"},{"location":"linux/readme/","title":"README","text":"<p>Linux\u00ae is an open source operating system (OS). An operating system is the software that directly manages a system\u2019s hardware and resources, like CPU, memory, and storage. The OS sits between applications and hardware and makes the connections between all of your software and the physical resources that do the work.</p>"},{"location":"linux/regular-expressions/","title":"Regular Expression","text":"Option Description . The period (.) matches any single character. ? The preceding item is optional and will be matched at most once. * The preceding item will be matched zero or more times. + The preceding item will be matched one or more times. {n} The preceding item is matched exactly n times. {n,} The preceding item is matched n or more times. {,m} The preceding item is matched at most m times. {n,m} The preceding item is matched at least n times, but not more than m times. [:alnum:] Alphanumeric characters: '[:alpha:]' and '[:digit:]'; in the 'C' locale and ASCII character encoding, this is the same as '[0-9A-Za-z]'. [:alpha:] Alphabetic characters: '[:lower:]' and '[:upper:]'; in the 'C' locale and ASCII character encoding, this is the same as '[A-Za-z]'. [:blank:] Blank characters: space and tab. [:cntrl:] Control characters. In ASCII, these characters have octal codes 000 through 037, and 177 (DEL). In other character sets, these are the equivalent characters, if any. [:digit:] Digits: 0 1 2 3 4 5 6 7 8 9. [:graph:] Graphical characters: '[:alnum:]' and '[:punct:]'. [:lower:] Lower-case letters; in the 'C' locale and ASCII character encoding, this is a b c d e f g h i j k l m n o p q r s t u v w x y z. [:print:] Printable characters: '[:alnum:]', '[:punct:]', and space. [:punct:] Punctuation characters; in the 'C' locale and ASCII character encoding, this is! \" # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \\ ] ^ _ ' { [:space:] Space characters: in the 'C' locale, this is tab, newline, vertical tab, form feed,carriage return, and space. [:upper:] Upper-case letters: in the 'C' locale and ASCII character encoding, this is A B C D E F G H I J K L M N O P Q R S T U V W X Y Z. [:xdigit:] Hexadecimal digits: 0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f. \\b Match the empty string at the edge of a word. \\B Match the empty string provided it is not at the edge of a word. \\&lt; Match the empty string at the beginning of word. &gt; Match the empty string at the end of word. \\w Match word constituent. Synonym for '[_[:alnum:]]'. \\W Match non-word constituent. Synonym for '[\\^_[:alnum:]]'. \\s Match white space. Synonym for '[[:space:]]'. \\S Match non-whitespace. Synonym for '[^[:space:]]'."},{"location":"linux/rhel-sysadmin-II/","title":"Red Hat System Administration II","text":""},{"location":"linux/rhel-sysadmin-II/#tuning-system-performance","title":"Tuning System Performance","text":"<pre><code>**`tuned-adm list`**\nAvailable profiles:\n- balanced\n- desktop\n- latency-performance\n- network-latency\n- network-throughput\n- powersave\n- sap\n- throughput-performance\n- virtual-guest\n- virtual-host\n</code></pre>"},{"location":"linux/rhel-sysadmin-II/#profiles-distributed-with-rhel-8","title":"Profiles Distributed with Rhel 8","text":"Tuned Profile Purpose balanced Ideal for systems that require a compromise between power saving and performance. desktop Derived from the balanced profile. Provides faster response of interactive applications. throughput-performance Tunes the system for maximum throughput. latency-performance Ideal for server systems that require low latency at the expense of power consumption. network-latency Derived from the latency-performance profile. It enables additional network tuning parameters to provide low network latency. network-throughput Derived from the throughput-performance profile. Additional network tuning parameters are applied for maximum network throughput. powersave Tunes the system for maximum power saving. oracle Optimized for Oracle database loads based on the throughput-performance profile. virtual-guest Tunes the system for maximum performance if it runs on a virtual machine. virtual-host Tunes the system for maximum performance if it acts as a host for virtual machines. <ul> <li>The <code>tuned</code> service automatically modifies device settings to meet specific system needs based on a pre-defined selected tuning profile.</li> <li>To revert all changes made to system settings by a selected profile, either switch to another profile or deactivate the <code>tuned</code> service.</li> <li>The system assigns a relative priority to a process to determine its CPU access. This priority is called the <code>nice</code> value of a process.</li> <li>The <code>nice</code> command assigns a priority to a process when it starts. The <code>renice</code> command modifies the priority of a running process.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#access-control-lists","title":"Access Control Lists","text":"<ul> <li>ACLs provide fine-grained access control to files and directories.</li> <li>The getfacl command displays the ACLs on a file or directory.</li> <li>The setfacl command sets, modifies, and removes default and standard ACLs on files and directories.</li> <li>Use default ACLs for controlling new files and directories permissions.</li> <li>Red\u00a0Hat Enterprise\u00a0Linux uses <code>systemd</code> and <code>udev</code> to apply predefined ACLs on devices, folders, and files.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#managing-selinux-security","title":"Managing SELinux Security","text":"<ul> <li>The getenforce and setenforce commands are used to manage the SELinux mode of a system.</li> <li>The semanage command is used to manage SELinux policy rules. The restorecon command applies the context defined by the policy.</li> <li>Booleans are switches that change the behavior of the SELinux policy. They can be enabled or disabled and are used to tune the policy.  </li> <li>The sealert displays useful information to help with SELinux troubleshooting.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#managing-storage","title":"Managing Storage","text":""},{"location":"linux/rhel-sysadmin-II/#basic","title":"Basic","text":"<ul> <li>You use the parted command to add, modify, and remove partitions on disks with the MBR or the GPT partitioning scheme.</li> <li>You use the mkfs.xfs command to create XFS file systems on disk partitions.</li> <li>You need to add file-system mount commands to <code>/etc/fstab</code> to make those mounts persistent.</li> <li>You use the mkswap command to initialize swap spaces.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#advanced","title":"Advanced","text":"<ul> <li>The Stratis storage management solution implements flexible file systems that grow dynamically with data.</li> <li>The Stratis storage management solution supports thin provisioning, snapshotting, and monitoring.</li> <li>The Virtual Data Optimizer (VDO) aims to reduce the cost of data storage.</li> <li>The Virtual Data Optimizer applies zero-block elimination, data deduplication, and data compression to optimize disk space efficiency.</li> </ul> <pre><code>title: pool list max number file supported\n\nYou can create multiple pools from different storage devices. From each pool, you can create one or more file systems. Currently, you can create up to **2^24** file systems per pool.\n</code></pre>"},{"location":"linux/rhel-sysadmin-II/#managing-logical-volumes","title":"Managing Logical Volumes","text":"<ul> <li>Allows you to create flexible storage by allocating space on multiple storage devices.</li> <li>Physical volumes, volume groups, and logical volumes are managed by a variety of tools such as pvcreate, vgreduce, and lvextend.</li> <li>Logical volumes can be formatted with a file system or swap space, and they can be mounted persistently.</li> <li>Additional storage can be added to volume groups and logical volumes can be extended dynamically.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#accessing-network-attached-storage","title":"Accessing Network-Attached Storage","text":"<ul> <li>Mount and unmount an NFS export from the command line.</li> <li>Configure an NFS export to automatically mount at startup.</li> <li>Configure the automounter with direct and indirect maps, and describe their differences.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#controlling-the-boot-process","title":"Controlling the Boot Process","text":"<ul> <li>systemctl reboot and systemctl poweroff reboot and power down a system, respectively.</li> <li>systemctl isolate <code>target-name</code>.target switches to a new target at runtime.</li> <li>systemctl get-default and systemctl set-default can be used to query and set the default target.</li> <li>Use <code>rd.break</code> on the kernel command line to interrupt the boot process before control is handed over from the <code>initramfs</code>. The root file system is mounted read-only under <code>/sysroot</code>.</li> <li>The emergency target can be used to diagnose and fix file-system issues.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#managing-network-security","title":"Managing Network Security","text":"<ul> <li>The <code>netfilter</code> subsystem allows kernel modules to inspect every packet traversing the system. All incoming, outgoing or forwarded network packets are inspected.</li> <li>The use of firewalld has simplified management by classifying all network traffic into zones. Each zone has its own list of ports and services. The <code>public</code> zone is set as the default zone.</li> <li>The <code>firewalld</code> service ships with a number of pre-defined services. They can be listed using the firewall-cmd --get-services command.</li> <li>Network traffic is tightly controlled by the SELinux policy. Network ports are labeled. For example, port <code>22/TCP</code> has the label <code>ssh_port_t</code> associated with it. When a process wants to listen on a port, SELinux checks to see whether the label associated with it is allowed to bind that port label.</li> <li>The semanage command is used to add, delete, and modify labels.</li> </ul>"},{"location":"linux/rhel-sysadmin-II/#managing-virtual-machines-with-cockpit","title":"Managing Virtual Machines with Cockpit","text":"<p>Required package name : <code>cockpit-machines</code></p> <p>Install the cockpit-machines package to add the Virtual Machines menu to Cockpit.</p> <pre><code>[root@host ~]# yum install cockpit-machines\n</code></pre> <p>If Cockpit is not already running, start and enable it.</p> <pre><code>[root@host ~]# systemctl enable --now cockpit.socket\n</code></pre>"},{"location":"linux/rhel-sysadmin-II/#containers","title":"Containers","text":"<ul> <li>Containers provide a lightweight way to distribute and run an application and its dependencies that may conflict with software installed on the host.</li> <li>Containers run from container images that you can download from a container registry or create yourself.</li> <li>Podman, provided by Red\u00a0Hat Enterprise\u00a0Linux, directly runs and manages containers and container images on a single host.</li> <li>Containers can be run as <code>root</code>, or as non-privileged rootless containers for increased security.</li> <li>You can map network ports on the container host to pass traffic to services running in its containers. You can also use environment variables to configure the software in containers.</li> <li>Container storage is temporary, but you can attach persistent storage to a container using the contents of a directory on the container host, for example.</li> <li>You can configure Systemd to automatically run containers when the system starts up.</li> </ul> <p>Red Hat Enterprise Linux implements Linux Containers using core technologies such as Control Groups (Cgroups) for Resource Management, Namespaces for Process Isolation, SELinux for Security, enabling secure multi-tenancy and reducing the risk of security exploits.</p>"},{"location":"linux/root-rescue/","title":"Emergency","text":""},{"location":"linux/root-rescue/#grub","title":"Grub","text":"<ol> <li>Reach the grub and chose the first line</li> <li>Use 'e' to edit</li> <li>Go to the \"vmlinux\" line to add 'rd.break' at the end (This change is temporary)</li> <li>Press 'CTRL+x' to exit an run it</li> </ol>"},{"location":"linux/root-rescue/#rescue","title":"Rescue","text":"<p>Send a Ctrl+Alt+Del to your system using the relevant button or menu entry.</p> <p>When the boot-loader menu appears, press any key to interrupt the countdown, except Enter.</p> <p>Use the cursor keys to highlight the default boot loader entry.</p> <p>Press e to edit the current entry.</p> <p>Use the cursor keys to navigate to the line that starts with linux.</p> <p>Press End to move the cursor to the end of the line.</p> <p>Append rd.break to the end of the line.</p> <p>Press Ctrl+x to boot using the modified configuration.</p> <p>At the switch_root prompt, remount the /sysroot file system read/write, then use chroot to go into a chroot jail at /sysroot.</p> <pre><code>switch_root:/# mount -o remount,rw /sysroot\nswitch_root:/# chroot /sysroot\n</code></pre> <p>Set the root password to redhat.</p> <pre><code>sh-4.4# passwd root\nChanging password for user root.\nNew password: redhat\nBAD PASSWORD: The password is shorter than 8 characters\nRetype new password: redhat\npasswd: all authentication tokens updated successfully.\n</code></pre> <p>Configure the system to automatically perform a full SELinux relabel after boot.</p> <pre><code>sh-4.4# touch /.autorelabel\n</code></pre> <p>Type exit twice to continue booting your system. The system fails to boot because of an issue you resolve in the next step. </p>"},{"location":"linux/root-rescue/#selinux","title":"Selinux","text":"<p>\u26a0 Make sure SELinux allows the file changed</p> <p>touch .autorelabel</p> <p>This will signal SELinux on the next reboot that the filesystem has changed (the changed password) and allow the change to be loaded.</p> <p>Type 'exit' then 'reboot'</p>"},{"location":"linux/sar/","title":"SAR","text":"<p>On trouvera les fichier de log de l'outil sysstat dans : <code>/var/log/sysstat/</code> Chacun des fichier dans ce dossier sera norm\u00e9 par <code>sa$JOUR_DU_MOIS</code>.</p> <p>Liste des param\u00e8tres :</p> <ul> <li>S : swap</li> <li>r : RAM</li> <li>R : Caches</li> <li>u : Utilisateur</li> </ul>"},{"location":"linux/screen/","title":"Touchscreen","text":"<p>How to disable touchscreen at start ?</p> <p>Create a new file as <code>/etc/X11/xorg.conf.d/01-no_touchscreen.conf</code> as 664 :</p> <pre><code>## Written by systemd-localed(8), read by systemd-localed and Xorg. Its\n## probably wise not to edit this file manually. use localectl(1) to\n## instruct systemd-localed to update it\nSection \"InputClass\"\nIdentifier \"Raydium catchall\"\nMatchIsTouchscreen \"on\"\nOption \"Ignore\" \"on\"\nEndSection\n</code></pre> <p>Using command line :</p> <pre><code>xinput disable $(xinput list | awk '/Touchscreen/ {print $5}' | cut -d \"=\" -f2)\n</code></pre>"},{"location":"linux/screen/#blank-screen","title":"Blank Screen","text":"<p>logind est le composant en charge de la gestion des sessions sur les syst\u00e8mes avec systemd.</p> <p>Il d\u00e9termine le comportement d\u2019un ordinateur portable lorsque l\u2019on ferme l\u2019\u00e9cran (Lid Switch) via la variable <code>HandleLidSwitch</code> de son fichier de configuration :  <code>/etc/systemd/logind.conf</code> .</p> <p>Sa valeur par d\u00e9faut est suspend (mise en veille).</p> <p>Les valeurs accept\u00e9es pour la variable HandleLidSwitch:</p> <ul> <li>ignore (ne fait rien)</li> <li>poweroff (arr\u00eat)</li> <li>reboot (red\u00e9marrage)</li> <li>halt (arr\u00eat)</li> <li>kexec</li> <li>suspend (veille, le comportement par d\u00e9faut)</li> <li>hibernate (hibernation)</li> <li>hybrid-sleep (hibernation avec conservation des donn\u00e9es en m\u00e9moire)</li> <li>lock (Verrouille de la session)</li> </ul> <p>Donc si je souhaite que mon portable reste actif lorsque l\u2019\u00e9cran est ferm\u00e9:</p> <pre><code>vim  /etc/systemd/logind.conf\n</code></pre> <p>Puis on modifie le param\u00e8tre HandleLidSwitch de cette fa\u00e7on:</p> <pre><code>#HandleLidSwitch=suspend\n</code></pre> <p>devient</p> <pre><code>HandleLidSwitch=ignore\n</code></pre> <p>Et on termine par un petit red\u00e9marrage:</p> <pre><code>reboot\n</code></pre> <p>Retirer la mise en veille lors de la fermeture du capot de l\u2019ordinateur portable.</p> <pre><code>setterm-powersave off -blank 0\nsystemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target\n</code></pre>"},{"location":"linux/selinux/","title":"Selinux","text":""},{"location":"linux/selinux/#basic-selinux-security-concepts","title":"Basic SELinux security concepts","text":"<p>SELinux is a set of security rules that determine which process can access which files, directories, and ports.</p> <p>Every file, process, directory, and port has a special security label called an SELinux context.</p> <p>A context is a name used by the SELinux policy to determine whether a process can access a file, directory, or port.</p> <p>By default, the policy does not allow any interaction unless an explicit rule grants access. If there is no allow rule, no access is allowed.</p> <p>SELinux labels have several contexts:</p> <ul> <li>user</li> <li>role</li> <li>type</li> <li>sensitivity</li> </ul> <p>The targeted policy, which is the default policy enabled in Red\u00a0Hat Enterprise\u00a0Linux, bases its rules on the third context: the type context usually named end with _t.</p> <p></p>"},{"location":"linux/selinux/#setting-the-default-selinux-mode","title":"Setting the default SELinux mode","text":"<p>You can also configure SELinux persistently using the /etc/selinux/config file. In the example below (the default configuration), the configuration file sets SELinux to enforcing. The comments also show the other valid values: permissive and disabled.</p> <pre><code># This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=enforcing\n# SELINUXTYPE= can take one of these two values:\n#     targeted - Targeted processes are protected,\n#     minimum - Modification of targeted policy. Only selected processes\n#               are protected.\n#     mls - Multi Level Security protection.\nSELINUXTYPE=targeted\n</code></pre> <p>The system reads this file at boot time and configures SELinux as shown. Kernel arguments (selinux=0|1 and enforcing=0|1) override this configuration.</p>"},{"location":"linux/selinux/#changing-the-current-selinux-mode","title":"Changing the current SELinux mode","text":"<p>The SELinux subsystem provides tools to display and change modes. To determine the current SELinux mode, run the getenforce command. To set SELinux to a different mode, use the setenforce command:</p> <pre><code>[user@host ~]# getenforce\nEnforcing\n[user@host ~]# setenforce\nusage:  setenforce [ Enforcing | Permissive | 1 | 0 ]\n[user@host ~]# setenforce 0\n[user@host ~]# getenforce\nPermissive\n[user@host ~]# setenforce Enforcing\n[user@host ~]# getenforce\nEnforcing\n</code></pre> <p>Alternatively, you can set the SELinux mode at boot time by passing a parameter to the kernel: the kernel argument of enforcing=0 boots the system into permissive mode; a value of enforcing=1 sets enforcing mode. You can also disable SELinux completely by passing on the kernel parameter selinux=0. A value of selinux=1 enables SELinux.</p>"},{"location":"linux/selinux/#basic-file-context-operations","title":"Basic file context operations","text":"<p>To ensure that you have the tools to manage SELinux contexts, install these packages :</p> <ul> <li>policycoreutils</li> <li>policycoreutils-python</li> </ul> <p>These contain the restorecon command and semanage command, respectively.</p> <p>To ensure that all files in a directory have the correct file context run the <code>semanage fcontext -l</code> followed by the restorecon command.</p> <p>In the following example, note the file context of each file before and after the semanage and restorecon commands run.</p> <pre><code>[root@host ~]# ls -Z /var/www/html/file*\nunconfined_u:object_r:user_tmp_t:s0 /var/www/html/file1  unconfined_u:object_r:httpd_sys_content_t:s0 /var/www/html/file2  </code></pre> <pre><code>[root@host ~]# semanage fcontext -l\n...output omitted...\n/var/www(/.*)?       all files    system_u:object_r:httpd_sys_content_t:s0\n...output omitted... </code></pre> <pre><code>[root@host; ~]# restorecon -Rv /var/www/\nRelabeled /var/www/html/file1 from unconfined_u:object_r:user_tmp_t:s0 to unconfined_u:object_r:httpd_sys_content_t:s0\n[root@host ~]# ls -Z /var/www/html/file*\nunconfined_u:object_r:httpd_sys_content_t:s0 /var/www/html/file1  unconfined_u:object_r:httpd_sys_content_t:s0 /var/www/html/file2\n</code></pre> <p>The following example shows how to use semanage to add a context for a new directory.</p> <pre><code>[root@host ~]# mkdir /virtual\n[root@host ~]# touch /virtual/index.html\n[root@host ~]# ls -Zd /virtual/\ndrwxr-xr-x. root root unconfined_u:object_r:default_t:s0 /virtual/ </code></pre> <pre><code>[root@host ~]# ls -Z /virtual/\n-rw-r--r--. root root unconfined_u:object_r:default_t:s0 index.html\n[root@host ~]# semanage fcontext -a -t httpd_sys_content_t '/virtual(/.*)?'\n[root@host ~]# restorecon -RFvv /virtual\n[root@host ~]# ls -Zd /virtual/\ndrwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /virtual/\n[root@host ~]# ls -Z /virtual/\n-rw-r--r--. root root system_u:object_r:httpd_sys_content_t:s0 index.html\n</code></pre>"},{"location":"linux/service/","title":"Service","text":""},{"location":"linux/service/#systemctl","title":"Systemctl","text":"<p>How to list enabled unit-file.</p> <pre><code>systemctl list-unit-files | grep enabled\n</code></pre>"},{"location":"linux/smtp/","title":"SMTP","text":""},{"location":"linux/smtp/#troubleshooting","title":"Troubleshooting","text":""},{"location":"linux/smtp/#tls","title":"TLS","text":"<ol> <li>Prepare encoded strings for your mail username and password</li> </ol> <pre><code>echo -ne \"mail@example.net\" | base64\n</code></pre> <ol> <li>Connect to mail server</li> </ol> <pre><code>openssl s_client -starttls smtp -connect smtp.example.com:587\n</code></pre> <ol> <li>Send HELO</li> </ol> <pre><code>EHLO\n</code></pre> <ol> <li>Authenticate</li> </ol> <pre><code>AUTH LOGIN\n&lt;your-encoded-username&gt;\n&lt;your-encoded-password&gt;\n</code></pre> <p>If that's successful the mail server should return <code>235 2.7.0 Authentication successful</code>.</p>"},{"location":"linux/stratis/","title":"Describing the Architecture of Stratis","text":"<p>Stratis is a new local storage-management solution for Linux. Stratis is designed to make it easier to perform initial configuration of storage, make changes to the storage configuration, and use advanced storage features.</p> <p>Stratis runs as a service that manages pools of physical storage devices and transparently creates and manages volumes for the newly created file systems.</p> <p>In Stratis, file systems are built from shared pools of disk devices using a concept known as thin provisioning.</p> <p>You can create multiple pools from different storage devices. From each pool, you can create one or more file systems. Currently, you can create up to 224 file systems per pool.</p> <p>The components that make up a Stratis-managed file system are built from standard Linux components. Internally, Stratis is implemented using the Device Mapper infrastructure that is also used to implement LVM, and Stratis-managed file systems are formatted using XFS.</p> <p>The following diagram illustrates how the elements of the Stratis storage management solution are assembled. Block storage devices such as hard disks or SSDs are assigned to pools, each contributing some physical storage to the pool. File systems are created from the pools, and physical storage is mapped to each file system as it is needed.</p> <p></p>"},{"location":"linux/stratis/#working-with-stratis-storage","title":"Working with Stratis Storage","text":"<p>To manage file systems with the Stratis storage management solution, install theses packages :</p> <ul> <li>stratis-cli</li> <li>stratisd packages</li> </ul> <p>The stratis-cli package provides the stratis command, which sends reconfiguration requests to the stratisd system daemon.</p> <p>The stratisd package provides the stratisd service, which handles reconfiguration requests and manages and monitors block devices, pools, and file systems that Stratis uses.</p>"},{"location":"linux/stratis/#installing-and-enabling-stratis","title":"Installing and Enabling Stratis","text":"<p>To use Stratis, make sure that the software is installed and the stratisd service is running.</p> <ul> <li>Install stratis-cli and stratisd using the yum install command</li> </ul> <pre><code>[root@host ~]# yum install stratis-cli stratisd\n...output omitted...\nIs this ok [y/N]: y\n...output omitted...\nComplete!\n</code></pre> <ul> <li>Activate the stratisd service using the systemctl command.</li> </ul> <pre><code>[root@host ~]# systemctl enable --now stratisd\n</code></pre>"},{"location":"linux/stratis/#assembling-block-storage-into-stratis-pools","title":"Assembling Block Storage into Stratis Pools","text":"<p>The following are common management operations performed using the Stratis storage management solution.</p> <ul> <li>Create pools of one or more block devices using the stratis pool create command.</li> </ul> <pre><code>[root@host ~]# stratis pool create pool1 /dev/vdb\n</code></pre> <p>Each pool is a subdirectory under the /stratis directory.</p> <ul> <li>Use the stratis pool list command to view the list of available pools.</li> </ul> <pre><code>[root@host ~]# stratis pool list\nName     Total Physical Size  Total Physical Used\npool1                  5 GiB               52 MiB\n</code></pre> <p>Warning</p> <p>The stratis pool list command is very important because it shows you how much storage space is in use (and therefore how much is still available) in the pools. If a pool runs out of storage, further data written to file systems belonging to that pool is quietly lost.</p> <ul> <li>Use the stratis pool add-data command to add additional block devices to a pool.</li> </ul> <pre><code>[root@host ~]# stratis pool add-data pool1 /dev/vdc\n</code></pre> <ul> <li>Use the stratis blockdev list command to view the block devices of a pool.</li> </ul> <pre><code>[root@host ~]# stratis blockdev list pool1\nPool Name  Device Node    Physical Size   State  Tier\npool1      /dev/vdb               5 GiB  In-use  Data\npool1      /dev/vdc               5 GiB  In-use  Data\n</code></pre>"},{"location":"linux/stratis/#managing-stratis-file-systems","title":"Managing Stratis File Systems","text":"<ul> <li>Use the stratis filesystem create command to create a file system from a pool.</li> </ul> <pre><code>[root@host ~]# stratis filesystem create pool1 fs1\n</code></pre> <p>The links to the Stratis file systems are in the /stratis/pool1 directory.</p> <ul> <li>Use the stratis filesystem list command to view the list of available file systems.</li> </ul> <pre><code>[root@host ~]# stratis filesystem list\nPool Name  Name  Used     Created            Device              UUID\npool1      fs1   546 MiB  Sep 23 2020 13:11  /stratis/pool1/fs1  31b9363badd...\n</code></pre> <p>Use stratis pool list to monitor the remaining real storage available to the Stratis pools.</p> <ul> <li>You can create a snapshot of a Stratis-managed file system with the stratis filesystem snapshot command</li> </ul> <p>Snapshots are independent of the source file systems.</p> <pre><code>[root@host ~]# stratis filesystem snapshot pool1 fs1 snapshot1\n</code></pre>"},{"location":"linux/stratis/#persistently-mounting-stratis-file-systems","title":"Persistently Mounting Stratis File Systems","text":"<p>To ensure that the Stratis file systems are persistently mounted, edit /etc/fstab and specify the details of the file system.</p> <p>The following command displays the UUID of the file system that you should use in /etc/fstab to identify the file system.</p> <pre><code>[root@host ~]# lsblk --output=UUID /stratis/pool1/fs1\nUUID\n31b9363.................478c55\n</code></pre> <p>The following is an example entry in the /etc/fstab file to persistently mount a Stratis file system. This example entry is a single long line in the file.</p> <pre><code>UUID=31b9363b-add8-4b46-a4bf-c199cd478c55 /dir1 xfs defaults,x-systemd.requires=stratisd.service 0 0\n</code></pre> <p>The <code>x-systemd.requires=stratisd.service</code> mount option delays mounting the file system until after systemd starts the stratisd.service during the boot process.</p>"},{"location":"linux/stratis/#references","title":"References","text":"<ul> <li>Red Hat System Administration II</li> </ul>"},{"location":"linux/time/","title":"Clock","text":"<p>How to mod sys clock ?</p> <pre><code>mv /etc/localtime /etc/localtime.backup\nln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime\n\necho \"Europe/Paris\" | tee /etc/timezone\ntimedatectl set-timezone Europe/Paris\nhwclock -s\n</code></pre>"},{"location":"linux/vim/","title":"VIM","text":"<p>D\u00e9but ou fin de fichier :</p> <ul> <li>Go to the top : <code>gg</code></li> <li>Go to the buttom : <code>G</code></li> <li>Descendre \u00e0 la ligne 34 : <code>34 G</code></li> </ul> <p>D\u00e9but ou fin de ligne :</p> <ul> <li>Fin de la ligne o\u00f9 se trouve le dernier carract\u00e8re : <code>$</code></li> <li>D\u00e9but de la ligne o\u00f9 se trouve le premier carract\u00e8re : <code>0</code> (shift+\u00e0)</li> </ul> <p>Dans vim : <code>:%s /foo/newfoo/g</code></p>"},{"location":"linux/vim/#tooling","title":"Tooling","text":""},{"location":"linux/vim/#sed","title":"Sed","text":"<p>Faire du sed dans vim</p> <pre><code>:%s /foo/newfoo/g`\n</code></pre>"},{"location":"linux/vim/#highlithing-word","title":"Highlithing Word","text":"<p>Retirer le surlignage :</p> <pre><code>:noh\n</code></pre>"},{"location":"linux/web/","title":"Web","text":""},{"location":"linux/web/#lamp","title":"lamp","text":"<p>Apache check config :</p> <pre><code>/opt/lampp/bin/httpd -t\n</code></pre> <p>Apache restart :</p> <pre><code>/opt/lampp/bin/httpd -k restart\n</code></pre>"},{"location":"linux/web/#postfix","title":"Postfix","text":"<p>Basic postfix configuration <code>/etc/postfix/main.cf</code> :</p> <pre><code>relayhost = [smtp.gmail.com]:587\nsmtp_sasl_auth_enable = yes\nsmtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd\nsmtp_sasl_security_options = noanonymous\n</code></pre>"},{"location":"mac/cheatsheet/","title":"CheatSheet","text":"<p>Just hold the \u2318-Key a bit longer to get a list of all active shortcuts of the current application. It's as simple as that.</p> <p>Download page</p> <p>More : mac tooltips</p>"},{"location":"mac/clipboard-manager/","title":"Clipboard Manager","text":"<p>How to copy from terminal using <code>pbcopy</code> ?</p> <pre><code>echo \"Hello Word!\" | pbcopy\n</code></pre> <p>How to paste ?</p> <pre><code>~ $ pbpaste\nTue Dec 27 15:41:22 CET 2022\n</code></pre>"},{"location":"mac/clipboard-manager/#maccy","title":"Maccy","text":"<p>Maccy is a lightweight clipboard manager for macOS. It keeps the history of what you copy and lets you quickly navigate, search, and use previous clipboard contents.</p> <p>Repository link : https://github.com/p0deje/Maccy</p> <p>Installation :</p> <pre><code>brew install --cask maccy\n</code></pre>"},{"location":"mac/dock/","title":"Dock","text":""},{"location":"mac/dock/#space","title":"Space","text":"<p>How to add space on dock as an application ?</p> <p>This command will add a new blank application into your dock.</p> <pre><code>defaults write com.apple.dock persistent-apps -array-add '{tile-type=\"spacer-tile\";}'\n</code></pre> <p>To take it into account, restart your dock</p> <pre><code>killall Dock\n</code></pre> <p>To force start dock, minimise an application</p>"},{"location":"mac/dock/#delay","title":"Delay","text":"<p>Fortunately, many hidden options in macOS can be set with a command-line utility called defaults. To trigger the fade-in animation of the Dock immediately you can do the following:</p> <pre><code>defaults write com.apple.dock autohide-delay -float 0\nkillall Dock\n</code></pre> <p>After executing this command the Dock needs to be restarted (killall Dock). If you want to switch back to the standard behavior, you can simply delete the corresponding configuration key:</p> <pre><code>defaults delete com.apple.dock autohide-delay\nkillall Dock\n</code></pre> <p>You can also control the duration of the fade-in and fade-out animation itself. For example, to set the animation duration to half a second, you can enter the following commands.</p> <pre><code>defaults write com.apple.dock autohide-time-modifier -float 0.5\nkillall Dock\n</code></pre> <p>My default :</p> <pre><code>defaults write com.apple.dock autohide-time-modifier -float 0.3;killall Doc\n</code></pre>"},{"location":"mac/ds_store/","title":"What is a .DS_Store file?","text":"<p>A .DS_Store, short for Desktop Services Store, is an invisible file on the macOS operating system that gets automatically created anytime you look into a folder with \u2018Finder.\u2019  This file will then follow the folder everywhere it goes, including when archived, like in \u2018ZIP.\u2019</p> <p>If you\u2019re a developer or system administrator and still transferring files from your computer to your server or don\u2019t take the necessary precautions with your automated deployment process, you could be putting these files on the server where your site or application lives unconsciously.</p>"},{"location":"mac/ds_store/#why-should-you-know-about-them","title":"Why should you know about them?","text":"<p>This file stores custom attributes/metadata of its containing folder and the names of other files around it.  Exposing this information could potentially allow hackers to act maliciously and let them see private files.</p> <p>Back in 2015, a .DS_Store file was exploited and used to gain access to an admin portal of the TCL Corporation, a multinational Chinese electronics company. The entire backend and database of the application were exposed to anyone that accessed the .DS_Store file.</p> <p>See Bug Report (Translation needed): https://web.archive.org/web/20190105043001/https://bugs.shuimugan.com/bug/view?bug_no=91869</p>"},{"location":"mac/ds_store/#how-to-prevent-this","title":"How to prevent this?","text":"<p>The people who want to prevent security breaches through .DS_Store files are developers and system administrators.  Finding .DS_Store files in random folders in your server is not fun. You could be leaking information you don\u2019t intend to.  If you do find one, simply delete the file with the command  \u2018rm .DS_Store\u2019 and it will be resolved.</p> <p>The easiest way to prevent this problem from happening is to completely turn off the automatic creation of these files. </p> <p>Follow the steps below to do so:</p> <ul> <li>Open Terminal</li> <li>Then copy/paste this command and press enter:</li> </ul> <pre><code>defaults write com.apple.desktopservices DSDontWriteNetworkStores true\n</code></pre> <p>To reverse this if ever needed in the future, just change true to false:</p> <p>```zsh defaults write com.apple.desktopservices DSDontWriteNetworkStores false ````</p> <p>Info</p> <p>After running one of these commands, reboot your machine. You\u2019re set up &amp; secure!</p> <p>For developers, you can use Git to solve this problem by doing the following:</p> <ul> <li>Place '<code>.DS_Store</code>' in your '<code>.gitignore</code>' file. </li> </ul> <p>That way, any .DS_Store file will be ignored and not be pushed with the rest of your code.</p>"},{"location":"mac/iterm2/","title":"iTerm2","text":""},{"location":"mac/iterm2/#tabs-and-windows","title":"Tabs and Windows","text":"Shortcut Description <code>[\u2318 Command] + [T]</code> New Tab <code>[\u2318 Command] + [\u27f6 Right]</code> Next Tab <code>[\u2318 Command] + [\u27f5 Left]</code> Previous Tab <code>[\u2318 Command] + [W]</code> Close Window or Tab <code>[\u21e7 Shift] + [\u2318 Command] + [\u27f6 Right]</code> Move Tab right <code>[\u21e7 Shift] + [\u2318 Command] + [\u27f5 Left]</code> Move Tab left <code>[\u2318 Command] + [1], [2], ...</code> Go to Tab 1,2,... <code>[\u2318 Command] + [D]</code> Split Window Vertically <code>[\u21e7 Shift] + [\u2318 Command] + [D]</code> Split Window Horizontally <code>[\u2318 Command] + [\u21b5 Enter]</code> Toggle Fullscreen <code>[\u21e7 Shift] + [\u2318 Command] + [\u21b5 Enter]</code> Maximize"},{"location":"mac/iterm2/#cursor-and-selection","title":"Cursor and selection","text":"Shortcut Description <code>[\u02c4 Control] + [B]</code> Move\u00a0back one character <code>[\u02c4 Control] + [F]</code> Move\u00a0forward one character <code>[\u02c4 Control] + [D]</code> Delete current character <code>[\u02c4 Control] + [W]</code> Delete previous\u00a0word (in shell) <code>[\u02c4 Control] + [A]</code> Move to the start of line <code>[\u02c4 Control] + [E]</code> Move to the end of line"},{"location":"mac/keybinds/","title":"Keybinds","text":"<ul> <li>Command (ou Cmd) \u2318</li> <li>Maj \u21e7</li> <li>Option (or Alt) \u2325</li> <li>Contr\u00f4le (or Ctrl) \u2303</li> </ul>"},{"location":"mac/keybinds/#hidden-files","title":"Hidden files","text":"<p>How to unhide .folder names ?</p> <p>\u21e7 + \u2318 + .</p>"},{"location":"mac/keybinds/#path","title":"Path","text":"<p>Bring the path to the buttom of your finder window</p> <p>\u2325 + \u2318 + P</p>"},{"location":"mac/keybinds/#go","title":"Go","text":"<p>How to go to specified directory</p> <p>\u2325 + \u2318 + G</p>"},{"location":"mac/package-manager/","title":"Package Manager","text":""},{"location":"mac/package-manager/#homebrew","title":"Homebrew","text":"<p>Homebrew installe les paquets dans leurs propres r\u00e9pertoires et cr\u00e9e des liens symboliques de leurs fichiers vers <code>/usr/local</code>.</p> <pre><code>```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"mac/readme/","title":"README","text":"<p>macOS is a Unix operating system developed and marketed by Apple Inc. since 2001.  It is the primary operating system for Apple's Mac computers.  Within the market of desktop and laptop computers, it is the second most widely used desktop OS, after Microsoft Windows and ahead of ChromeOS.</p>"},{"location":"mac/remote-session/","title":"Remote Connection","text":""},{"location":"mac/remote-session/#ssh","title":"SSH","text":""},{"location":"mac/remote-session/#proxy-settings","title":"Proxy settings","text":"<p>Into my ssh configuration file, I added the nc command like :</p> <pre><code>ProxyCommand /usr/bin/nc -x $PROXY_iP %h %p\n</code></pre> <p>As Example :</p> <pre><code>## Customer\nHost customer1\n    Hostname 1**.**.***.*0\n    User toto\n    ProxyCommand /usr/bin/nc -x $PROXY_iP %h %p\n</code></pre>"},{"location":"mac/remote-session/#sshs","title":"sshs","text":"<p>sshs is kind of bastion based on ssh config file</p> <pre><code>brew install sshs\n</code></pre> <p></p> <p>Repository link : https://github.com/quantumsheep/sshs</p>"},{"location":"mac/remote-session/#sshpass","title":"sshpass","text":"<p>How to let easier your life</p> <ul> <li>First, install-it with homebrew if it dont installed yet.</li> </ul> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <ul> <li>Next, install sshpass</li> </ul> <pre><code>brew install hudochenkov/sshpass/sshpass\n</code></pre> <ul> <li>Then, use it dude</li> </ul> <pre><code>sshpass -f LOCAIONT/FILENAME ssh user@iP\n</code></pre>"},{"location":"mac/remote-session/#fingerprint","title":"fingerprint","text":"<p>\u2139\ufe0f Don't forget you need to accept the remote fingerprint before any sshpass connection</p> <p></p>"},{"location":"mac/remote-session/#rdp","title":"RDP","text":""},{"location":"mac/remote-session/#royal-tsx","title":"Royal TSX","text":"<p>I personaly use Royal TSX, and didn't find better for the moment</p> <p>https://royaltsx-v5.royalapps.com/updates/royaltsx_5.1.2.1000.dmg</p>"},{"location":"mac/screenshots/","title":"ScreenShots","text":""},{"location":"mac/screenshots/#default","title":"Default","text":"<p>On mac use <code>\u21e7+\u2318+5</code> to launch th default tool</p> <p>Preview:</p> <p></p>"},{"location":"mac/screenshots/#flamshot","title":"Flamshot","text":"<p>You can also use flameshot</p> <pre><code>brew install flameshot\n</code></pre> <p>Preview :</p> <p></p>"},{"location":"mac/shurtcuts/","title":"MacOS keyboard shortcuts","text":""},{"location":"mac/shurtcuts/#mac-keyboard-modifier-keys","title":"Mac Keyboard Modifier keys","text":"key description \u2318 \u2318 +  / Cmd \u2303 Control / Ctrl \u2325 \u2325 + s / Alt \u21e7 Shift \u21ea Caps Lock Fn Function key <p>- On Windows keyboards use the Alt key instead of \u2325 + , and the Windows logo key instead of \u2318 + .</p>"},{"location":"mac/shurtcuts/#cut-copy-paste-and-other-common-shortcuts","title":"Cut, copy, paste, and other common shortcuts","text":"keys description \u2318 + x Cut the selected item and copy it to the Clipboard \u2318 + c Copy the selected item to the Clipboard. This also works for files in the Finder \u2318 + v Paste the contents of the Clipboard into the current document or app. This also works for files in the Finder \u2318 + z Undo the previous comamnd \u21e7 + \u2318 + z Redo, reversing the undo command \u2318 + a Select All items \u2318 + f Find items in a document or open a Find window \u2318 + g Find Again: Find the next occurrence of the item previously found \u21e7 + \u2318 + G Find the previous occurrence \u2318 + h Hide the windows of the front app \u2325 + \u2318 + h View the front app but hide all other apps \u2318 + m Minimize the front window to the Dock \u2325 + \u2318 + m Minimize all windows of the front app \u2318 + o Open the selected item, or open a dialog to select a file to open \u2318 + p Print the current document \u2318 + s Save the current document \u2318 + t Open a new tab \u2318 + w Close the front window \u2325 + \u2318 + w Close all windows of the app \u2325 + \u2318 + Esc Force quit an app \u2318 + Space Show or hide the Spotlight search field \u2318 + \u2325 + Space Perform a Spotlight search from a Finder window \u2303 + \u2318 + Space Show the Character Viewer, from which you can choose emoji and other symbols \u2303 + \u2318 + f Use the app in full screen, if supported by the app Space Use Quick Look to preview the selected item \u2318 + Tab Switch to the next most recently used app among your open apps \u21e7 + \u2318 + 5 In macOS Mojave or later, take a screenshot or make a screen recording \u21e7 + \u2318 + 3 Take whole display screenshot \u21e7 + \u2318 + 4 Take custom screenshot \u21e7 + \u2318 + n Create a new folder in the Finder \u2318 + , Open preferences for the front app"},{"location":"mac/shurtcuts/#sleep-log-out-and-shut-down-shortcuts","title":"Sleep, log out, and shut down shortcuts","text":"<p>* You might need to press and hold some of these shortcuts for slightly longer than other shortcuts. This helps you to avoid using them unintentionally.</p> keys description Power button Press to turn on your Mac or wake it from sleep Power button Press and hold for 1.5 seconds to put your Mac to sleep Power button Press and continue holding to force your Mac to turn off \u2325 + \u2318 + Power Put your Mac to sleep \u2325 + \u2318 + Eject Put your Mac to sleep \u2303 + \u21e7 + Power Put your displays to sleep \u2303 + \u21e7 + Eject Put your displays to sleep \u2303 + Power Display a dialog asking whether you want to restart, sleep, or shut down \u2303 + Eject Display a dialog asking whether you want to restart, sleep, or shut down \u2303 + \u2318 + Power Force your Mac to restart, without prompting to save any open and unsaved documents \u2303 + \u2318 + Eject Quit all apps, then restart your Mac \u2303 + \u2325 + \u2318 + Power Quit all apps, then shut down your Mac \u2303 \u2325 + \u2318 + Eject Quit all apps, then shut down your Mac \u2303 + \u2318 + q Immediately lock your screen \u21e7 + \u2318 + q Log out of your macOS user account. You will be asked to confirm \u2325 + \u21e7 + \u2318 + q Log out immediately without confirming"},{"location":"mac/shurtcuts/#finder-and-system-shortcuts","title":"Finder and system shortcuts","text":"keys description \u2318 + d Duplicate the selected files \u2318 + e Eject the selected disk or volume \u2318 + f Start a Spotlight search in the Finder window \u2318 + i Show the Get Info window for a selected file \u2318 + r (1) When an alias is selected in the Finder: show the original file for the selected alias \u2318 + r (2) In some apps, such as Calendar or Safari, refresh or reload the page \u2318 + r (3) In Software Update preferences, check for software updates again \u21e7 + \u2318 + c Open the Computer window \u21e7 + \u2318 + d Open the desktop folder \u21e7 + \u2318 + f Open the Recents window, showing all of the files you viewed or changed recently \u21e7 + \u2318 + g Open a Go to Folder window \u21e7 + \u2318 + h Open the Home folder of the current macOS user account \u21e7 + \u2318 + i Open iCloud Drive \u21e7 + \u2318 + k Open the Network window \u2325 + \u2318 + l Open the Downloads folder \u21e7 + \u2318 + n Create a new folder \u21e7 + \u2318 + o Open the Documents folder \u21e7 + \u2318 + p Show or hide the Preview pane in Finder windows \u21e7 + \u2318 + r Open the AirDrop window \u21e7 + \u2318 + t Show or hide the tab bar in Finder windows \u2303 + \u21e7 + \u2318 + t Add selected Finder item to the Dock (OS X Mavericks or later) \u21e7 + \u2318 + u Open the Utilities folder \u2325 + \u2318 + d Show or hide the Dock \u2303 + \u2318 + t Add the selected item to the sidebar (OS X Mavericks or later) \u2325 + \u2318 + p Hide or show the path bar in Finder windows \u2325 + \u2318 + s Hide or show the Sidebar in Finder windows \u2318 + / Hide or show the status bar in Finder windows \u2318 + j Show View Options \u2318 + k Open the Connect to Server window \u2303 + \u2318 + a Make an alias of the selected item \u2318 + n Open a new Finder window \u2325 + \u2318 + n Create a new Smart Folder \u2318 + t Show or hide the tab bar when a single tab is open in the current Finder window \u2325 + \u2318 + t Show or hide the toolbar when a single tab is open in the current Finder window \u2325 + \u2318 + v Move the files in the Clipboard from their original location to the current location \u2318 + y Use Quick Look to preview the selected files \u2325 + \u2318 + v View a Quick Look slideshow of the selected files \u2318 + 1 View the items in the Finder window as icons \u2318 + 2 View the items in a Finder window as a list \u2318 + 3 View the items in a Finder window in columns \u2318 + 4 View the items in a Finder window in a gallery \u2318 + [ Go to the previous folder \u2318 + ] Go to the next folder \u2318 + \u2191 Open the folder that contains the current folder \u2303 + \u2318 + \u2191 Open the folder that contains the current folder in a new window \u2318 + \u2193 Open the selected item \u2192 Open the selected folder. This works only when in list view \u2190 Close the selected folder. This works only when in list view \u2318 + Delete Move the selected item to the Trash \u21e7 + \u2318 + Delete Empty the Trash \u2325 + \u21e7 + \u2318 + Delete Empty the Trash without confirmation dialog \u2318 + Brightness Down Turn video mirroring on or off when your Mac is connected to more than one display \u2325 + Brightness Up Open Displays preferences. This works with either Brightness key \u2303 + Brightness Up/Down Adjust brightness of your external display, if supported by your display \u2325 + \u21e7 + Brightness Up/Down Adjust display brightness in smaller steps \u2303 + \u2325 + \u21e7 + Brightness Up/Down Adjust external display brightness in smaller steps, if supported by display \u2325 + Mission Control Open Mission Control preferences \u2303 + Mission Control Show the desktop \u2303 + \u2193 Show all windows of the front app \u2325 + Volume Up Open Sound preferences. This works with any of the volume keys \u2325 + \u21e7 + Volume up/Down Adjust the sound volume in smaller steps \u2325 + Brightness Up Open Keyboard preferences. This works with either Keyboard Brightness key \u2325 + \u21e7 + Brightness Up/Down Adjust the keyboard brightness in smaller steps \u2325 + double-clicking Open the item in a separate window, then close the original window \u2318 + double-clicking Open a folder in a separate tab or window \u2318 + dragging to another volume Move the dragged item to the other volume, instead of copying it \u2325 + dragging Copy the dragged item. The pointer changes while you drag the item \u2325 + \u2318 + while dragging Make an alias of the dragged item. The pointer changes while you drag the item \u2325 + click a disclosure triangle Open all folders within the selected folder. This works only when in list view \u2318 + click a window title See the folders that contain the current folder"},{"location":"mac/shurtcuts/#document-shortcuts","title":"Document shortcuts","text":"<p>*The behavior of these shortcuts may vary with the app you're using</p> keys description \u2318 + b Boldface the selected text, or turn boldfacing on or off \u2318 + i Italicize the selected text, or turn italics on or off \u2318 + k Add a web link \u2318 + u Underline the selected text, or turn underlining on or off \u2318 + t Show or hide the Fonts window \u2318 + d Select the Desktop folder from within an Open dialog or Save dialog \u2303 + \u2318 + d Show or hide the definition of the selected word \u21e7 + \u2318 + : Display the Spelling and Grammar window \u2318 + ; Find misspelled words in the document \u2325 + Delete Delete the word to the left of the insertion point \u2303 + h Delete the character to the left of the insertion point. Or use Delete \u2303 + d Delete the character to the right of the insertion point Fn + Delete Forward delete on keyboards that don't have a Forward Delete key \u2303 + k Delete the text between the insertion point and the end of the line or paragraph Fn + \u2191 Page Up: Scroll up one page Fn + \u2193 Page Down: Scroll down one page. Fn + \u2190 Home: Scroll to the beginning of a document. Fn + \u2192 End: Scroll to the end of a document. \u2318 + \u2191 Move the insertion point to the beginning of the document \u2318 + \u2193 Move the insertion point to the end of the document. \u2318 + \u2190 Move the insertion point to the beginning of the current line. \u2318 + \u2192 Move the insertion point to the end of the current line. \u2325 + \u2190 Move the insertion point to the beginning of the previous word \u2325 + \u2192 Move the insertion point to the end of the next word \u21e7 + \u2318 + \u2191 Select the text between the insertion point and the beginning of the document \u21e7 + \u2318 + \u2193 Select the text between the insertion point and the end of the document \u21e7 + \u2318 + \u2190 Select the text between the insertion point and the beginning of the current line \u21e7 + \u2318 + \u2192 Select the text between the insertion point and the end of the current line \u21e7 + \u2191 Extend text selection to the nearest character at the same horizontal location on the line above \u21e7 + \u2193 Extend text selection to the nearest character at the same horizontal location on the line below \u21e7 + \u2190 Extend text selection one character to the left \u21e7 + \u2192 Extend text selection one character to the right \u2325 + \u21e7 + \u2191 Extend text selection to the beginning of the current paragraph, then to the beginning of the following paragraph if pressed again \u2325 + \u21e7 + \u2193 Extend text selection to the end of the current paragraph, then to the end of the following paragraph if pressed again \u2325 + \u21e7 + \u2190 Extend text selection to the beginning of the current word, then to the beginning of the following word if pressed again \u2325 + \u21e7 + \u2192 Extend text selection to the end of the current word, then to the end of the following word if pressed again \u2303 + a Move to the beginning of the line or paragraph \u2303 + e Move to the end of a line or paragraph \u2303 + f Move one character forward \u2303 + b Move one character backward \u2303 + l Center the cursor or selection in the visible area \u2303 + p Move up one line \u2303 + n Move down one line \u2303 + o Insert a new line after the insertion point \u2303 + t Swap the character behind the insertion point with the character in front of the insertion point \u2318 + { Left align \u2318 + } Right align \u21e7 + \u2318 + | Center align \u2325 + \u2318 + f Go to the search field \u2325 + \u2318 + t Show or hide a toolbar in the app \u2325 + \u2318 + c Copy Style: Copy the formatting settings of the selected item to the Clipboard \u2325 + \u2318 + v Paste Style: Apply the copied style to the selected item \u2325 + \u21e7 + \u2318 + v Paste and Match Style: Apply the style of the surrounding content to the item pasted within that content \u2325 + \u2318 + i Show or hide the inspector window \u21e7 + \u2318 + p Page setup: Display a window for selecting document settings \u21e7 + \u2318 + s Display the Save As dialog, or duplicate the current document \u21e7 + \u2318 + (-) Decrease the size of the selected item \u21e7 + \u2318 + (+) Increase the size of the selected item \u2318 + = performs the same function \u21e7 + \u2318 + ? Open the Help menu"},{"location":"mac/vmachines/","title":"Virtual Machines (M1)","text":""},{"location":"mac/vmachines/#utm","title":"UTM","text":"<p>Download the Securely run operating systems on your Mac</p> <p>https://github.com/utmapp/UTM/releases/latest/download/UTM.dmg</p>"},{"location":"mac/vmachines/#vmware-fusion","title":"VMWare Fusion","text":"<p>VMWare Fusion is working on it</p> <p>Public Technical preview : https://customerconnect.vmware.com/downloads/get-download?downloadGroup=FUS-PUBTP-22H2</p>"},{"location":"mac/windows-tilling/","title":"Windows tilling","text":""},{"location":"mac/windows-tilling/#rectangle","title":"Rectangle","text":"<p>Move and resize windows in macOS using keyboard shortcuts or snap areas</p> <p>Download page</p>"},{"location":"misc/color-codes/","title":"256 Color Codes Cheat-Sheet","text":"<p>Colors 0-15 are Xterm system colors.</p> Xterm Number COL Xterm Name HEX RGB HSL 0   Black <code>#000000</code> rgb(0,0,0) hsl(0,0%,0%) 1   Maroon <code>#800000</code> rgb(128,0,0) hsl(0,100%,25%) 2   Green <code>#008000</code> rgb(0,128,0) hsl(120,100%,25%) 3   Olive <code>#808000</code> rgb(128,128,0) hsl(60,100%,25%) 4   Navy <code>#000080</code> rgb(0,0,128) hsl(240,100%,25%) 5   Purple <code>#800080</code> rgb(128,0,128) hsl(300,100%,25%) 6   Teal <code>#008080</code> rgb(0,128,128) hsl(180,100%,25%) 7   Silver <code>#c0c0c0</code> rgb(192,192,192) hsl(0,0%,75%) 8   Grey <code>#808080</code> rgb(128,128,128) hsl(0,0%,50%) 9   Red <code>#ff0000</code> rgb(255,0,0) hsl(0,100%,50%) 10   Lime <code>#00ff00</code> rgb(0,255,0) hsl(120,100%,50%) 11   Yellow <code>#ffff00</code> rgb(255,255,0) hsl(60,100%,50%) 12   Blue <code>#0000ff</code> rgb(0,0,255) hsl(240,100%,50%) 13   Fuchsia <code>#ff00ff</code> rgb(255,0,255) hsl(300,100%,50%) 14   Aqua <code>#00ffff</code> rgb(0,255,255) hsl(180,100%,50%) 15   White <code>#ffffff</code> rgb(255,255,255) hsl(0,0%,100%) 16   Grey0 <code>#000000</code> rgb(0,0,0) hsl(0,0%,0%) 17   NavyBlue <code>#00005f</code> rgb(0,0,95) hsl(240,100%,18%) 18   DarkBlue <code>#000087</code> rgb(0,0,135) hsl(240,100%,26%) 19   Blue3 <code>#0000af</code> rgb(0,0,175) hsl(240,100%,34%) 20   Blue3 <code>#0000d7</code> rgb(0,0,215) hsl(240,100%,42%) 21   Blue1 <code>#0000ff</code> rgb(0,0,255) hsl(240,100%,50%) 22   DarkGreen <code>#005f00</code> rgb(0,95,0) hsl(120,100%,18%) 23   DeepSkyBlue4 <code>#005f5f</code> rgb(0,95,95) hsl(180,100%,18%) 24   DeepSkyBlue4 <code>#005f87</code> rgb(0,95,135) hsl(97,100%,26%) 25   DeepSkyBlue4 <code>#005faf</code> rgb(0,95,175) hsl(07,100%,34%) 26   DodgerBlue3 <code>#005fd7</code> rgb(0,95,215) hsl(13,100%,42%) 27   DodgerBlue2 <code>#005fff</code> rgb(0,95,255) hsl(17,100%,50%) 28   Green4 <code>#008700</code> rgb(0,135,0) hsl(120,100%,26%) 29   SpringGreen4 <code>#00875f</code> rgb(0,135,95) hsl(62,100%,26%) 30   Turquoise4 <code>#008787</code> rgb(0,135,135) hsl(180,100%,26%) 31   DeepSkyBlue3 <code>#0087af</code> rgb(0,135,175) hsl(93,100%,34%) 32   DeepSkyBlue3 <code>#0087d7</code> rgb(0,135,215) hsl(02,100%,42%) 33   DodgerBlue1 <code>#0087ff</code> rgb(0,135,255) hsl(08,100%,50%) 34   Green3 <code>#00af00</code> rgb(0,175,0) hsl(120,100%,34%) 35   SpringGreen3 <code>#00af5f</code> rgb(0,175,95) hsl(52,100%,34%) 36   DarkCyan <code>#00af87</code> rgb(0,175,135) hsl(66,100%,34%) 37   LightSeaGreen <code>#00afaf</code> rgb(0,175,175) hsl(180,100%,34%) 38   DeepSkyBlue2 <code>#00afd7</code> rgb(0,175,215) hsl(91,100%,42%) 39   DeepSkyBlue1 <code>#00afff</code> rgb(0,175,255) hsl(98,100%,50%) 40   Green3 <code>#00d700</code> rgb(0,215,0) hsl(120,100%,42%) 41   SpringGreen3 <code>#00d75f</code> rgb(0,215,95) hsl(46,100%,42%) 42   SpringGreen2 <code>#00d787</code> rgb(0,215,135) hsl(57,100%,42%) 43   Cyan3 <code>#00d7af</code> rgb(0,215,175) hsl(68,100%,42%) 44   DarkTurquoise <code>#00d7d7</code> rgb(0,215,215) hsl(180,100%,42%) 45   Turquoise2 <code>#00d7ff</code> rgb(0,215,255) hsl(89,100%,50%) 46   Green1 <code>#00ff00</code> rgb(0,255,0) hsl(120,100%,50%) 47   SpringGreen2 <code>#00ff5f</code> rgb(0,255,95) hsl(42,100%,50%) 48   SpringGreen1 <code>#00ff87</code> rgb(0,255,135) hsl(51,100%,50%) 49   MediumSpringGreen <code>#00ffaf</code> rgb(0,255,175) hsl(61,100%,50%) 50   Cyan2 <code>#00ffd7</code> rgb(0,255,215) hsl(70,100%,50%) 51   Cyan1 <code>#00ffff</code> rgb(0,255,255) hsl(180,100%,50%) 52   DarkRed <code>#5f0000</code> rgb(95,0,0) hsl(0,100%,18%) 53   DeepPink4 <code>#5f005f</code> rgb(95,0,95) hsl(300,100%,18%) 54   Purple4 <code>#5f0087</code> rgb(95,0,135) hsl(82,100%,26%) 55   Purple4 <code>#5f00af</code> rgb(95,0,175) hsl(72,100%,34%) 56   Purple3 <code>#5f00d7</code> rgb(95,0,215) hsl(66,100%,42%) 57   BlueViolet <code>#5f00ff</code> rgb(95,0,255) hsl(62,100%,50%) 58   Orange4 <code>#5f5f00</code> rgb(95,95,0) hsl(60,100%,18%) 59   Grey37 <code>#5f5f5f</code> rgb(95,95,95) hsl(0,0%,37%) 60   MediumPurple4 <code>#5f5f87</code> rgb(95,95,135) hsl(240,17%,45%) 61   SlateBlue3 <code>#5f5faf</code> rgb(95,95,175) hsl(240,33%,52%) 62   SlateBlue3 <code>#5f5fd7</code> rgb(95,95,215) hsl(240,60%,60%) 63   RoyalBlue1 <code>#5f5fff</code> rgb(95,95,255) hsl(240,100%,68%) 64   Chartreuse4 <code>#5f8700</code> rgb(95,135,0) hsl(7,100%,26%) 65   DarkSeaGreen4 <code>#5f875f</code> rgb(95,135,95) hsl(120,17%,45%) 66   PaleTurquoise4 <code>#5f8787</code> rgb(95,135,135) hsl(180,17%,45%) 67   SteelBlue <code>#5f87af</code> rgb(95,135,175) hsl(210,33%,52%) 68   SteelBlue3 <code>#5f87d7</code> rgb(95,135,215) hsl(220,60%,60%) 69   CornflowerBlue <code>#5f87ff</code> rgb(95,135,255) hsl(225,100%,68%) 70   Chartreuse3 <code>#5faf00</code> rgb(95,175,0) hsl(7,100%,34%) 71   DarkSeaGreen4 <code>#5faf5f</code> rgb(95,175,95) hsl(120,33%,52%) 72   CadetBlue <code>#5faf87</code> rgb(95,175,135) hsl(150,33%,52%) 73   CadetBlue <code>#5fafaf</code> rgb(95,175,175) hsl(180,33%,52%) 74   SkyBlue3 <code>#5fafd7</code> rgb(95,175,215) hsl(200,60%,60%) 75   SteelBlue1 <code>#5fafff</code> rgb(95,175,255) hsl(210,100%,68%) 76   Chartreuse3 <code>#5fd700</code> rgb(95,215,0) hsl(3,100%,42%) 77   PaleGreen3 <code>#5fd75f</code> rgb(95,215,95) hsl(120,60%,60%) 78   SeaGreen3 <code>#5fd787</code> rgb(95,215,135) hsl(140,60%,60%) 79   Aquamarine3 <code>#5fd7af</code> rgb(95,215,175) hsl(160,60%,60%) 80   MediumTurquoise <code>#5fd7d7</code> rgb(95,215,215) hsl(180,60%,60%) 81   SteelBlue1 <code>#5fd7ff</code> rgb(95,215,255) hsl(195,100%,68%) 82   Chartreuse2 <code>#5fff00</code> rgb(95,255,0) hsl(7,100%,50%) 83   SeaGreen2 <code>#5fff5f</code> rgb(95,255,95) hsl(120,100%,68%) 84   SeaGreen1 <code>#5fff87</code> rgb(95,255,135) hsl(135,100%,68%) 85   SeaGreen1 <code>#5fffaf</code> rgb(95,255,175) hsl(150,100%,68%) 86   Aquamarine1 <code>#5fffd7</code> rgb(95,255,215) hsl(165,100%,68%) 87   DarkSlateGray2 <code>#5fffff</code> rgb(95,255,255) hsl(180,100%,68%) 88   DarkRed <code>#870000</code> rgb(135,0,0) hsl(0,100%,26%) 89   DeepPink4 <code>#87005f</code> rgb(135,0,95) hsl(17,100%,26%) 90   DarkMagenta <code>#870087</code> rgb(135,0,135) hsl(300,100%,26%) 91   DarkMagenta <code>#8700af</code> rgb(135,0,175) hsl(86,100%,34%) 92   DarkViolet <code>#8700d7</code> rgb(135,0,215) hsl(77,100%,42%) 93   Purple <code>#8700ff</code> rgb(135,0,255) hsl(71,100%,50%) 94   Orange4 <code>#875f00</code> rgb(135,95,0) hsl(2,100%,26%) 95   LightPink4 <code>#875f5f</code> rgb(135,95,95) hsl(0,17%,45%) 96   Plum4 <code>#875f87</code> rgb(135,95,135) hsl(300,17%,45%) 97   MediumPurple3 <code>#875faf</code> rgb(135,95,175) hsl(270,33%,52%) 98   MediumPurple3 <code>#875fd7</code> rgb(135,95,215) hsl(260,60%,60%) 99   SlateBlue1 <code>#875fff</code> rgb(135,95,255) hsl(255,100%,68%) 100   Yellow4 <code>#878700</code> rgb(135,135,0) hsl(60,100%,26%) 101   Wheat4 <code>#87875f</code> rgb(135,135,95) hsl(60,17%,45%) 102   Grey53 <code>#878787</code> rgb(135,135,135) hsl(0,0%,52%) 103   LightSlateGrey <code>#8787af</code> rgb(135,135,175) hsl(240,20%,60%) 104   MediumPurple <code>#8787d7</code> rgb(135,135,215) hsl(240,50%,68%) 105   LightSlateBlue <code>#8787ff</code> rgb(135,135,255) hsl(240,100%,76%) 106   Yellow4 <code>#87af00</code> rgb(135,175,0) hsl(3,100%,34%) 107   DarkOliveGreen3 <code>#87af5f</code> rgb(135,175,95) hsl(90,33%,52%) 108   DarkSeaGreen <code>#87af87</code> rgb(135,175,135) hsl(120,20%,60%) 109   LightSkyBlue3 <code>#87afaf</code> rgb(135,175,175) hsl(180,20%,60%) 110   LightSkyBlue3 <code>#87afd7</code> rgb(135,175,215) hsl(210,50%,68%) 111   SkyBlue2 <code>#87afff</code> rgb(135,175,255) hsl(220,100%,76%) 112   Chartreuse2 <code>#87d700</code> rgb(135,215,0) hsl(2,100%,42%) 113   DarkOliveGreen3 <code>#87d75f</code> rgb(135,215,95) hsl(100,60%,60%) 114   PaleGreen3 <code>#87d787</code> rgb(135,215,135) hsl(120,50%,68%) 115   DarkSeaGreen3 <code>#87d7af</code> rgb(135,215,175) hsl(150,50%,68%) 116   DarkSlateGray3 <code>#87d7d7</code> rgb(135,215,215) hsl(180,50%,68%) 117   SkyBlue1 <code>#87d7ff</code> rgb(135,215,255) hsl(200,100%,76%) 118   Chartreuse1 <code>#87ff00</code> rgb(135,255,0) hsl(8,100%,50%) 119   LightGreen <code>#87ff5f</code> rgb(135,255,95) hsl(105,100%,68%) 120   LightGreen <code>#87ff87</code> rgb(135,255,135) hsl(120,100%,76%) 121   PaleGreen1 <code>#87ffaf</code> rgb(135,255,175) hsl(140,100%,76%) 122   Aquamarine1 <code>#87ffd7</code> rgb(135,255,215) hsl(160,100%,76%) 123   DarkSlateGray1 <code>#87ffff</code> rgb(135,255,255) hsl(180,100%,76%) 124   Red3 <code>#af0000</code> rgb(175,0,0) hsl(0,100%,34%) 125   DeepPink4 <code>#af005f</code> rgb(175,0,95) hsl(27,100%,34%) 126   MediumVioletRed <code>#af0087</code> rgb(175,0,135) hsl(13,100%,34%) 127   Magenta3 <code>#af00af</code> rgb(175,0,175) hsl(300,100%,34%) 128   DarkViolet <code>#af00d7</code> rgb(175,0,215) hsl(88,100%,42%) 129   Purple <code>#af00ff</code> rgb(175,0,255) hsl(81,100%,50%) 130   DarkOrange3 <code>#af5f00</code> rgb(175,95,0) hsl(2,100%,34%) 131   IndianRed <code>#af5f5f</code> rgb(175,95,95) hsl(0,33%,52%) 132   HotPink3 <code>#af5f87</code> rgb(175,95,135) hsl(330,33%,52%) 133   MediumOrchid3 <code>#af5faf</code> rgb(175,95,175) hsl(300,33%,52%) 134   MediumOrchid <code>#af5fd7</code> rgb(175,95,215) hsl(280,60%,60%) 135   MediumPurple2 <code>#af5fff</code> rgb(175,95,255) hsl(270,100%,68%) 136   DarkGoldenrod <code>#af8700</code> rgb(175,135,0) hsl(6,100%,34%) 137   LightSalmon3 <code>#af875f</code> rgb(175,135,95) hsl(30,33%,52%) 138   RosyBrown <code>#af8787</code> rgb(175,135,135) hsl(0,20%,60%) 139   Grey63 <code>#af87af</code> rgb(175,135,175) hsl(300,20%,60%) 140   MediumPurple2 <code>#af87d7</code> rgb(175,135,215) hsl(270,50%,68%) 141   MediumPurple1 <code>#af87ff</code> rgb(175,135,255) hsl(260,100%,76%) 142   Gold3 <code>#afaf00</code> rgb(175,175,0) hsl(60,100%,34%) 143   DarkKhaki <code>#afaf5f</code> rgb(175,175,95) hsl(60,33%,52%) 144   NavajoWhite3 <code>#afaf87</code> rgb(175,175,135) hsl(60,20%,60%) 145   Grey69 <code>#afafaf</code> rgb(175,175,175) hsl(0,0%,68%) 146   LightSteelBlue3 <code>#afafd7</code> rgb(175,175,215) hsl(240,33%,76%) 147   LightSteelBlue <code>#afafff</code> rgb(175,175,255) hsl(240,100%,84%) 148   Yellow3 <code>#afd700</code> rgb(175,215,0) hsl(1,100%,42%) 149   DarkOliveGreen3 <code>#afd75f</code> rgb(175,215,95) hsl(80,60%,60%) 150   DarkSeaGreen3 <code>#afd787</code> rgb(175,215,135) hsl(90,50%,68%) 151   DarkSeaGreen2 <code>#afd7af</code> rgb(175,215,175) hsl(120,33%,76%) 152   LightCyan3 <code>#afd7d7</code> rgb(175,215,215) hsl(180,33%,76%) 153   LightSkyBlue1 <code>#afd7ff</code> rgb(175,215,255) hsl(210,100%,84%) 154   GreenYellow <code>#afff00</code> rgb(175,255,0) hsl(8,100%,50%) 155   DarkOliveGreen2 <code>#afff5f</code> rgb(175,255,95) hsl(90,100%,68%) 156   PaleGreen1 <code>#afff87</code> rgb(175,255,135) hsl(100,100%,76%) 157   DarkSeaGreen2 <code>#afffaf</code> rgb(175,255,175) hsl(120,100%,84%) 158   DarkSeaGreen1 <code>#afffd7</code> rgb(175,255,215) hsl(150,100%,84%) 159   PaleTurquoise1 <code>#afffff</code> rgb(175,255,255) hsl(180,100%,84%) 160   Red3 <code>#d70000</code> rgb(215,0,0) hsl(0,100%,42%) 161   DeepPink3 <code>#d7005f</code> rgb(215,0,95) hsl(33,100%,42%) 162   DeepPink3 <code>#d70087</code> rgb(215,0,135) hsl(22,100%,42%) 163   Magenta3 <code>#d700af</code> rgb(215,0,175) hsl(11,100%,42%) 164   Magenta3 <code>#d700d7</code> rgb(215,0,215) hsl(300,100%,42%) 165   Magenta2 <code>#d700ff</code> rgb(215,0,255) hsl(90,100%,50%) 166   DarkOrange3 <code>#d75f00</code> rgb(215,95,0) hsl(6,100%,42%) 167   IndianRed <code>#d75f5f</code> rgb(215,95,95) hsl(0,60%,60%) 168   HotPink3 <code>#d75f87</code> rgb(215,95,135) hsl(340,60%,60%) 169   HotPink2 <code>#d75faf</code> rgb(215,95,175) hsl(320,60%,60%) 170   Orchid <code>#d75fd7</code> rgb(215,95,215) hsl(300,60%,60%) 171   MediumOrchid1 <code>#d75fff</code> rgb(215,95,255) hsl(285,100%,68%) 172   Orange3 <code>#d78700</code> rgb(215,135,0) hsl(7,100%,42%) 173   LightSalmon3 <code>#d7875f</code> rgb(215,135,95) hsl(20,60%,60%) 174   LightPink3 <code>#d78787</code> rgb(215,135,135) hsl(0,50%,68%) 175   Pink3 <code>#d787af</code> rgb(215,135,175) hsl(330,50%,68%) 176   Plum3 <code>#d787d7</code> rgb(215,135,215) hsl(300,50%,68%) 177   Violet <code>#d787ff</code> rgb(215,135,255) hsl(280,100%,76%) 178   Gold3 <code>#d7af00</code> rgb(215,175,0) hsl(8,100%,42%) 179   LightGoldenrod3 <code>#d7af5f</code> rgb(215,175,95) hsl(40,60%,60%) 180   Tan <code>#d7af87</code> rgb(215,175,135) hsl(30,50%,68%) 181   MistyRose3 <code>#d7afaf</code> rgb(215,175,175) hsl(0,33%,76%) 182   Thistle3 <code>#d7afd7</code> rgb(215,175,215) hsl(300,33%,76%) 183   Plum2 <code>#d7afff</code> rgb(215,175,255) hsl(270,100%,84%) 184   Yellow3 <code>#d7d700</code> rgb(215,215,0) hsl(60,100%,42%) 185   Khaki3 <code>#d7d75f</code> rgb(215,215,95) hsl(60,60%,60%) 186   LightGoldenrod2 <code>#d7d787</code> rgb(215,215,135) hsl(60,50%,68%) 187   LightYellow3 <code>#d7d7af</code> rgb(215,215,175) hsl(60,33%,76%) 188   Grey84 <code>#d7d7d7</code> rgb(215,215,215) hsl(0,0%,84%) 189   LightSteelBlue1 <code>#d7d7ff</code> rgb(215,215,255) hsl(240,100%,92%) 190   Yellow2 <code>#d7ff00</code> rgb(215,255,0) hsl(9,100%,50%) 191   DarkOliveGreen1 <code>#d7ff5f</code> rgb(215,255,95) hsl(75,100%,68%) 192   DarkOliveGreen1 <code>#d7ff87</code> rgb(215,255,135) hsl(80,100%,76%) 193   DarkSeaGreen1 <code>#d7ffaf</code> rgb(215,255,175) hsl(90,100%,84%) 194   Honeydew2 <code>#d7ffd7</code> rgb(215,255,215) hsl(120,100%,92%) 195   LightCyan1 <code>#d7ffff</code> rgb(215,255,255) hsl(180,100%,92%) 196   Red1 <code>#ff0000</code> rgb(255,0,0) hsl(0,100%,50%) 197   DeepPink2 <code>#ff005f</code> rgb(255,0,95) hsl(37,100%,50%) 198   DeepPink1 <code>#ff0087</code> rgb(255,0,135) hsl(28,100%,50%) 199   DeepPink1 <code>#ff00af</code> rgb(255,0,175) hsl(18,100%,50%) 200   Magenta2 <code>#ff00d7</code> rgb(255,0,215) hsl(09,100%,50%) 201   Magenta1 <code>#ff00ff</code> rgb(255,0,255) hsl(300,100%,50%) 202   OrangeRed1 <code>#ff5f00</code> rgb(255,95,0) hsl(2,100%,50%) 203   IndianRed1 <code>#ff5f5f</code> rgb(255,95,95) hsl(0,100%,68%) 204   IndianRed1 <code>#ff5f87</code> rgb(255,95,135) hsl(345,100%,68%) 205   HotPink <code>#ff5faf</code> rgb(255,95,175) hsl(330,100%,68%) 206   HotPink <code>#ff5fd7</code> rgb(255,95,215) hsl(315,100%,68%) 207   MediumOrchid1 <code>#ff5fff</code> rgb(255,95,255) hsl(300,100%,68%) 208   DarkOrange <code>#ff8700</code> rgb(255,135,0) hsl(1,100%,50%) 209   Salmon1 <code>#ff875f</code> rgb(255,135,95) hsl(15,100%,68%) 210   LightCoral <code>#ff8787</code> rgb(255,135,135) hsl(0,100%,76%) 211   PaleVioletRed1 <code>#ff87af</code> rgb(255,135,175) hsl(340,100%,76%) 212   Orchid2 <code>#ff87d7</code> rgb(255,135,215) hsl(320,100%,76%) 213   Orchid1 <code>#ff87ff</code> rgb(255,135,255) hsl(300,100%,76%) 214   Orange1 <code>#ffaf00</code> rgb(255,175,0) hsl(1,100%,50%) 215   SandyBrown <code>#ffaf5f</code> rgb(255,175,95) hsl(30,100%,68%) 216   LightSalmon1 <code>#ffaf87</code> rgb(255,175,135) hsl(20,100%,76%) 217   LightPink1 <code>#ffafaf</code> rgb(255,175,175) hsl(0,100%,84%) 218   Pink1 <code>#ffafd7</code> rgb(255,175,215) hsl(330,100%,84%) 219   Plum1 <code>#ffafff</code> rgb(255,175,255) hsl(300,100%,84%) 220   Gold1 <code>#ffd700</code> rgb(255,215,0) hsl(0,100%,50%) 221   LightGoldenrod2 <code>#ffd75f</code> rgb(255,215,95) hsl(45,100%,68%) 222   LightGoldenrod2 <code>#ffd787</code> rgb(255,215,135) hsl(40,100%,76%) 223   NavajoWhite1 <code>#ffd7af</code> rgb(255,215,175) hsl(30,100%,84%) 224   MistyRose1 <code>#ffd7d7</code> rgb(255,215,215) hsl(0,100%,92%) 225   Thistle1 <code>#ffd7ff</code> rgb(255,215,255) hsl(300,100%,92%) 226   Yellow1 <code>#ffff00</code> rgb(255,255,0) hsl(60,100%,50%) 227   LightGoldenrod1 <code>#ffff5f</code> rgb(255,255,95) hsl(60,100%,68%) 228   Khaki1 <code>#ffff87</code> rgb(255,255,135) hsl(60,100%,76%) 229   Wheat1 <code>#ffffaf</code> rgb(255,255,175) hsl(60,100%,84%) 230   Cornsilk1 <code>#ffffd7</code> rgb(255,255,215) hsl(60,100%,92%) 231   Grey100 <code>#ffffff</code> rgb(255,255,255) hsl(0,0%,100%) 232   Grey3 <code>#080808</code> rgb(8,8,8) hsl(0,0%,3%) 233   Grey7 <code>#121212</code> rgb(18,18,18) hsl(0,0%,7%) 234   Grey11 <code>#1c1c1c</code> rgb(28,28,28) hsl(0,0%,10%) 235   Grey15 <code>#262626</code> rgb(38,38,38) hsl(0,0%,14%) 236   Grey19 <code>#303030</code> rgb(48,48,48) hsl(0,0%,18%) 237   Grey23 <code>#3a3a3a</code> rgb(58,58,58) hsl(0,0%,22%) 238   Grey27 <code>#444444</code> rgb(68,68,68) hsl(0,0%,26%) 239   Grey30 <code>#4e4e4e</code> rgb(78,78,78) hsl(0,0%,30%) 240   Grey35 <code>#585858</code> rgb(88,88,88) hsl(0,0%,34%) 241   Grey39 <code>#626262</code> rgb(98,98,98) hsl(0,0%,37%) 242   Grey42 <code>#6c6c6c</code> rgb(108,108,108) hsl(0,0%,40%) 243   Grey46 <code>#767676</code> rgb(118,118,118) hsl(0,0%,46%) 244   Grey50 <code>#808080</code> rgb(128,128,128) hsl(0,0%,50%) 245   Grey54 <code>#8a8a8a</code> rgb(138,138,138) hsl(0,0%,54%) 246   Grey58 <code>#949494</code> rgb(148,148,148) hsl(0,0%,58%) 247   Grey62 <code>#9e9e9e</code> rgb(158,158,158) hsl(0,0%,61%) 248   Grey66 <code>#a8a8a8</code> rgb(168,168,168) hsl(0,0%,65%) 249   Grey70 <code>#b2b2b2</code> rgb(178,178,178) hsl(0,0%,69%) 250   Grey74 <code>#bcbcbc</code> rgb(188,188,188) hsl(0,0%,73%) 251   Grey78 <code>#c6c6c6</code> rgb(198,198,198) hsl(0,0%,77%) 252   Grey82 <code>#d0d0d0</code> rgb(208,208,208) hsl(0,0%,81%) 253   Grey85 <code>#dadada</code> rgb(218,218,218) hsl(0,0%,85%) 254   Grey89 <code>#e4e4e4</code> rgb(228,228,228) hsl(0,0%,89%) 255   Grey93 <code>#eeeeee</code> rgb(238,238,238) hsl(0,0%,93%)"},{"location":"misc/markdown/","title":"Markdown","text":"<p>Markdown is a text-to-HTML conversion tool for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).</p> <p>Documentation: Markdown Docs RFC: RFC 7763 GitHub Documentation: Writing Markdown on GitHub</p>"},{"location":"misc/markdown/#headings","title":"Headings","text":"<pre><code># Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n</code></pre> <p>Here is a heading: <code># Heading</code>, don't do this: <code>#Heading</code> </p>"},{"location":"misc/markdown/#emphasis","title":"Emphasis","text":"<pre><code>Emphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n</code></pre>"},{"location":"misc/markdown/#line-breaks","title":"Line Breaks","text":"<pre><code>First line with two spaces after.  \nAnd the next line.\n</code></pre>"},{"location":"misc/markdown/#lists","title":"Lists","text":""},{"location":"misc/markdown/#ordered-lists","title":"Ordered Lists","text":"<pre><code>1. First item\n2. Second item\n3. Third item\n</code></pre>"},{"location":"misc/markdown/#unordered-lists","title":"Unordered Lists","text":"<pre><code>- First item\n- Second item\n- Third item\n</code></pre>"},{"location":"misc/markdown/#links","title":"Links","text":"<pre><code>Link with text: [link-text](https://www.google.com)\n</code></pre>"},{"location":"misc/markdown/#images","title":"Images","text":"<pre><code>Image with alt text: ![alt-text](https://camo.githubusercontent.com/4d89cd791580bfb19080f8b0844ba7e1235aa4becc3f43dfd708a769e257d8de/68747470733a2f2f636e642d70726f642d312e73332e75732d776573742d3030342e6261636b626c617a6562322e636f6d2f6e65772d62616e6e6572342d7363616c65642d666f722d6769746875622e6a7067)\n\nImage without alt text: ![](https://camo.githubusercontent.com/4d89cd791580bfb19080f8b0844ba7e1235aa4becc3f43dfd708a769e257d8de/68747470733a2f2f636e642d70726f642d312e73332e75732d776573742d3030342e6261636b626c617a6562322e636f6d2f6e65772d62616e6e6572342d7363616c65642d666f722d6769746875622e6a7067)\n</code></pre>"},{"location":"misc/markdown/#position","title":"Position","text":"<p>List of avail positions :</p> Name Description left Left align data, left justify text. center Center align data, center justify text. right Right align data, right justify text. justify Double justify text. <pre><code>&lt;p align=\"center\"&gt;\n  &lt;img src=\"images/img\"&gt;\n&lt;/p&gt;}\n</code></pre>"},{"location":"misc/markdown/#size","title":"Size","text":"<p>Use as <code>%</code> <code>width=\"1..100%\"</code> <pre><code>&lt;p align=\"center\"&gt;\n  &lt;img src=\"images/img\" width=\"35%\"&gt;\n&lt;/p&gt;\n</code></pre></p>"},{"location":"misc/markdown/#code-blocks","title":"Code Blocks","text":""},{"location":"misc/markdown/#inline-code-block","title":"Inline Code Block","text":"<pre><code>Inline `code` has `back-ticks around` it.\n</code></pre>"},{"location":"misc/markdown/#blocks-of-code","title":"Blocks of Code","text":"<pre>\n<pre><code>var s = \"JavaScript syntax highlighting\";\nalert(s);\n</code></pre>\n\n<pre><code>s = \"Python syntax highlighting\"\nprint s\n</code></pre>\n\n<pre><code>No language indicated, so no syntax highlighting. \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n</code></pre>\n</pre>"},{"location":"misc/markdown/#tables","title":"Tables","text":"<p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily.</p> <p>Basic table Code :</p> <pre><code>| Syntax      | Description | Test Text     |\n| :---        |    :----:   |          ---: |\n| Header      | Title       | Here's this   |\n| Paragraph   | Text        | And more      |\n</code></pre> <p>Result : | Syntax      | Description | Test Text     | | :---        |    :----:   |          ---: | | Header      | Title       | Here's this   | | Paragraph   | Text        | And more      |</p>"},{"location":"misc/markdown/#task-list","title":"Task list","text":"<p>To create a task list start line with square brackets with an empty space. Ex: [  ] and add text for task. To check the task replace the space between the bracket with \"x\". <pre><code>[x] Write the post\n[ ] Update the website\n[ ] Contact the user\n</code></pre>"},{"location":"misc/markdown/#rules","title":"Rules","text":"<p>This document contains a description of all rules, what they are checking for, as well as an examples of documents that break the rule and corrected versions of the examples.</p>"},{"location":"misc/markdown/#md001","title":"MD001","text":"<p>Header levels should only increment by one level at a time</p> <p>Tags: headers</p> <p>Aliases: header-increment</p> <p>This rule is triggered when you skip header levels in a markdown document, for example:</p> <pre><code>## Header 1\n\n#### Header 3\n\nWe skipped out a 2nd level header in this document\n</code></pre> <p>When using multiple header levels, nested headers should increase by only one level at a time:</p> <pre><code>## Header 1\n\n### Header 2\n\n#### Header 3\n\n##### Header 4\n\n### Another Header 2\n\n#### Another Header 3\n</code></pre>"},{"location":"misc/markdown/#md002","title":"MD002","text":"<p>First header should be a top level header</p> <p>Tags: headers</p> <p>Aliases: first-header-h1</p> <p>Parameters: level (number; default 1)</p> <p>This rule is triggered when the first header in the document isn't a h1 header:</p> <pre><code>### This isn't a H1 header\n\n#### Another header\n</code></pre> <p>The first header in the document should be a h1 header:</p> <pre><code>## Start with a H1 header\n\n### Then use a H2 for subsections\n</code></pre>"},{"location":"misc/markdown/#md003","title":"MD003","text":"<p>Header style</p> <p>Tags: headers</p> <p>Aliases: header-style</p> <p>Parameters: style (<code>:consistent</code>, <code>:atx</code>, <code>:atx_closed</code>, <code>:setext</code>, <code>:setext_with_atx</code>; default <code>:consistent</code>)</p> <p>This rule is triggered when different header styles (atx, setext, and 'closed' atx) are used in the same document:</p> <pre><code>## ATX style H1\n\n### Closed ATX style H2 ##\n\nSetext style H1\n===============\n</code></pre> <p>Be consistent with the style of header used in a document:</p> <pre><code>## ATX style H1\n\n### ATX style H2\n</code></pre> <p>The setext_with_atx doc style allows atx-style headers of level 3 or more in documents with setext style headers:</p> <pre><code>Setext style H1\n===============\n\nSetext style H2\n---------------\n\n#### ATX style H3\n</code></pre> <p>Note: the configured header style can be a specific style to use (atx, atx_closed, setext, setext_with_atx), or simply require that the usage be consistent within the document.</p>"},{"location":"misc/markdown/#md004","title":"MD004","text":"<p>Unordered list style</p> <p>Tags: bullet, ul</p> <p>Aliases: ul-style</p> <p>Parameters: style (<code>:consistent</code>, <code>:asterisk</code>, <code>:plus</code>, <code>:dash</code>, <code>:sublist</code>; default <code>:consistent</code>)</p> <p>This rule is triggered when the symbols used in the document for unordered list items do not match the configured unordered list style:</p> <pre><code>* Item 1\n+ Item 2\n- Item 3\n</code></pre> <p>To fix this issue, use the configured style for list items throughout the document:</p> <pre><code>* Item 1\n* Item 2\n* Item 3\n</code></pre> <p>Note: the configured list style can be a specific symbol to use (asterisk, plus, dash), or simply require that the usage be consistent within the document (consistent) or within a level (sublist).</p> <p>For sublist, each level must be consistent within a document, even if they are separate lists. So this is allowed:</p> <pre><code>* Item 1\n* Item 2\n  - Item 2a\n    + Item 2a1\n  - Item 2b\n* Item 3\n\nOther stuff\n\n* Item 1\n* Item 2\n</code></pre> <p>But this is not allowed:</p> <pre><code>* Item 1\n* Item 2\n  - Item 2a\n    + Item 2a1\n  - Item 2b\n* Item 3\n\nOther stuff\n\n- Item 1\n- Item 2\n</code></pre>"},{"location":"misc/markdown/#md005","title":"MD005","text":"<p>Inconsistent indentation for list items at the same level</p> <p>Tags: bullet, ul, indentation</p> <p>Aliases: list-indent</p> <p>This rule is triggered when list items are parsed as being at the same level, but don't have the same indentation:</p> <pre><code>* Item 1\n    * Nested Item 1\n    * Nested Item 2\n   * A misaligned item\n</code></pre> <p>Usually this rule will be triggered because of a typo. Correct the indentation for the list to fix it:</p> <pre><code>* Item 1\n  * Nested Item 1\n  * Nested Item 2\n  * Nested Item 3\n</code></pre>"},{"location":"misc/markdown/#md006","title":"MD006","text":"<p>Consider starting bulleted lists at the beginning of the line</p> <p>Tags: bullet, ul, indentation</p> <p>Aliases: ul-start-left</p> <p>This rule is triggered when top level lists don't start at the beginning of a line:</p> <pre><code>Some text\n\n  * List item\n  * List item\n</code></pre> <p>To fix, ensure that top level list items are not indented:</p> <pre><code>Some test\n\n* List item\n* List item\n</code></pre> <p>Rationale: Starting lists at the beginning of the line means that nested list items can all be indented by the same amount when an editor's indent function or the tab key is used to indent. Starting a list 1 space in means that the indent of the first nested list is less than the indent of the second level (3 characters if you use 4 space tabs, or 1 character if you use 2 space tabs).</p>"},{"location":"misc/markdown/#md007","title":"MD007","text":"<p>Unordered list indentation</p> <p>Tags: bullet, ul, indentation</p> <p>Aliases: ul-indent</p> <p>Parameters: indent (number; default 3)</p> <p>This rule is triggered when list items are not indented by the configured number of spaces (default: 2).</p> <p>Example:</p> <pre><code>* List item\n   * Nested list item indented by 3 spaces\n</code></pre> <p>Corrected Example:</p> <pre><code>* List item\n  * Nested list item indented by 2 spaces\n</code></pre> <p>Rationale (3 space indent): This matches the minimum possible indentation for ordered lists (i.e Kramdown won't parse anything less than 3 spaces as a sublist on OLs), and since MD005 requires consistent indentation across lists, anything less than three on this rule will cause a violation of MD005 if you have both kinds of lists in the same document.</p> <p>This means if you want to set this to 2, you'll need to disable MD005.</p> <p>Rationale (4 space indent): Same indent as code blocks, simpler for editors to implement. See https://cirosantilli.com/markdown-style-guide#spaces-before-list-marker for more information.</p> <p>In addition, this is a compatibility issue with multi-markdown parsers, which require a 4 space indents. See http://support.markedapp.com/discussions/problems/21-sub-lists-not-indenting for a description of the problem.</p>"},{"location":"misc/markdown/#md009","title":"MD009","text":"<p>Trailing spaces</p> <p>Tags: whitespace</p> <p>Aliases: no-trailing-spaces</p> <p>Parameters: br_spaces (number; default: 0)</p> <p>This rule is triggered on any lines that end with whitespace. To fix this, find the line that is triggered and remove any trailing spaces from the end.</p> <p>The br_spaces parameter allows an exception to this rule for a specific amount of trailing spaces used to insert an explicit line break/br element. For example, set br_spaces to 2 to allow exactly 2 spaces at the end of a line.</p> <p>Note: you have to set br_spaces to 2 or higher for this exception to take effect - you can't insert a br element with just a single trailing space, so if you set br_spaces to 1, the exception will be disabled, just as if it was set to the default of 0.</p>"},{"location":"misc/markdown/#md010","title":"MD010","text":"<p>Hard tabs</p> <p>Tags: whitespace, hard_tab</p> <p>Aliases: no-hard-tabs</p> <p>Parameters: ignore_code_blocks (boolean; default false)</p> <p>This rule is triggered by any lines that contain hard tab characters instead of using spaces for indentation. To fix this, replace any hard tab characters with spaces instead.</p> <p>Example:</p> <pre><code>Some text\n\n    * hard tab character used to indent the list item\n</code></pre> <p>Corrected example:</p> <pre><code>Some text\n\n    * Spaces used to indent the list item instead\n</code></pre> <p>You have the option to exclude this rule for code blocks. To do this, set the <code>ignore_code_blocks</code> parameter to true.</p>"},{"location":"misc/markdown/#md011","title":"MD011","text":"<p>Reversed link syntax</p> <p>Tags: links</p> <p>Aliases: no-reversed-links</p> <p>This rule is triggered when text that appears to be a link is encountered, but where the syntax appears to have been reversed (the <code>[]</code> and <code>()</code> are reversed):</p> <pre><code>(Incorrect link syntax)[http://www.example.com/]\n</code></pre> <p>To fix this, swap the <code>[]</code> and <code>()</code> around:</p> <pre><code>[Correct link syntax](http://www.example.com/)\n</code></pre>"},{"location":"misc/markdown/#md012","title":"MD012","text":"<p>Multiple consecutive blank lines</p> <p>Tags: whitespace, blank_lines</p> <p>Aliases: no-multiple-blanks</p> <p>This rule is triggered when there are multiple consecutive blank lines in the document:</p> <pre><code>Some text here\n\n\nSome more text here\n</code></pre> <p>To fix this, delete the offending lines:</p> <pre><code>Some text here\n\nSome more text here\n</code></pre> <p>Note: this rule will not be triggered if there are multiple consecutive blank lines inside code blocks.</p>"},{"location":"misc/markdown/#md013","title":"MD013","text":"<p>Line length</p> <p>Tags: line_length</p> <p>Aliases: line-length</p> <p>Parameters: line_length, ignore_code_blocks, code_blocks, tables (number; default 80, boolean; default false, boolean; default true, boolean; default true)</p> <p>This rule is triggered when there are lines that are longer than the configured line length (default: 80 characters). To fix this, split the line up into multiple lines.</p> <p>This rule has an exception where there is no whitespace beyond the configured line length. This allows you to still include items such as long URLs without being forced to break them in the middle.</p> <p>You also have the option to exclude this rule for code blocks. To do this, set the <code>ignore_code_blocks</code> parameter to true. To exclude this rule for tables set the <code>tables</code> parameters to false.  Setting the parameter <code>code_blocks</code> to false to exclude the rule for code blocks is deprecated and will be removed in a future release.</p> <p>Code blocks are included in this rule by default since it is often a requirement for document readability, and tentatively compatible with code rules. Still, some languages do not lend themselves to short lines.</p>"},{"location":"misc/markdown/#md014","title":"MD014","text":"<p>Dollar signs used before commands without showing output</p> <p>Tags: code</p> <p>Aliases: commands-show-output</p> <p>This rule is triggered when there are code blocks showing shell commands to be typed, and the shell commands are preceded by dollar signs ($):</p> <pre><code>$ ls\n$ cat foo\n$ less bar\n</code></pre> <p>The dollar signs are unnecessary in the above situation, and should not be included:</p> <pre><code>ls\ncat foo\nless bar\n</code></pre> <p>However, an exception is made when there is a need to distinguish between typed commands and command output, as in the following example:</p> <pre><code>$ ls\nfoo bar\n$ cat foo\nHello world\n$ cat bar\nbaz\n</code></pre> <p>Rationale: it is easier to copy and paste and less noisy if the dollar signs are omitted when they are not needed. See https://cirosantilli.com/markdown-style-guide#dollar-signs-in-shell-code for more information.</p>"},{"location":"misc/markdown/#md018","title":"MD018","text":"<p>No space after hash on atx style header</p> <p>Tags: headers, atx, spaces</p> <p>Aliases: no-missing-space-atx</p> <p>This rule is triggered when spaces are missing after the hash characters in an atx style header:</p> <pre><code>#Header 1\n\n##Header 2\n</code></pre> <p>To fix this, separate the header text from the hash character by a single space:</p> <pre><code>## Header 1\n\n### Header 2\n</code></pre>"},{"location":"misc/markdown/#md019","title":"MD019","text":"<p>Multiple spaces after hash on atx style header</p> <p>Tags: headers, atx, spaces</p> <p>Aliases: no-multiple-space-atx</p> <p>This rule is triggered when more than one space is used to separate the header text from the hash characters in an atx style header:</p> <pre><code>##  Header 1\n\n###  Header 2\n</code></pre> <p>To fix this, separate the header text from the hash character by a single space:</p> <pre><code>## Header 1\n\n### Header 2\n</code></pre>"},{"location":"misc/markdown/#md020","title":"MD020","text":"<p>No space inside hashes on closed atx style header</p> <p>Tags: headers, atx_closed, spaces</p> <p>Aliases: no-missing-space-closed-atx</p> <p>This rule is triggered when spaces are missing inside the hash characters in a closed atx style header:</p> <pre><code>#Header 1#\n\n##Header 2##\n</code></pre> <p>To fix this, separate the header text from the hash character by a single space:</p> <pre><code>## Header 1 #\n\n### Header 2 ##\n</code></pre> <p>Note: this rule will fire if either side of the header is missing spaces.</p>"},{"location":"misc/markdown/#md021","title":"MD021","text":"<p>Multiple spaces inside hashes on closed atx style header</p> <p>Tags: headers, atx_closed, spaces</p> <p>Aliases: no-multiple-space-closed-atx</p> <p>This rule is triggered when more than one space is used to separate the header text from the hash characters in a closed atx style header:</p> <pre><code>##  Header 1  #\n\n###  Header 2  ##\n</code></pre> <p>To fix this, separate the header text from the hash character by a single space:</p> <pre><code>## Header 1 #\n\n### Header 2 ##\n</code></pre> <p>Note: this rule will fire if either side of the header contains multiple spaces.</p>"},{"location":"misc/markdown/#md022","title":"MD022","text":"<p>Headers should be surrounded by blank lines</p> <p>Tags: headers, blank_lines</p> <p>Aliases: blanks-around-headers</p> <p>This rule is triggered when headers (any style) are either not preceded or not followed by a blank line:</p> <pre><code>## Header 1\nSome text\n\nSome more text\n### Header 2\n</code></pre> <p>To fix this, ensure that all headers have a blank line both before and after (except where the header is at the beginning or end of the document):</p> <pre><code>## Header 1\n\nSome text\n\nSome more text\n\n### Header 2\n</code></pre> <p>Rationale: Aside from aesthetic reasons, some parsers, including kramdown, will not parse headers that don't have a blank line before, and will parse them as regular text.</p>"},{"location":"misc/markdown/#md023","title":"MD023","text":"<p>Headers must start at the beginning of the line</p> <p>Tags: headers, spaces</p> <p>Aliases: header-start-left</p> <p>This rule is triggered when a header is indented by one or more spaces:</p> <pre><code>Some text\n\n  # Indented header\n</code></pre> <p>To fix this, ensure that all headers start at the beginning of the line:</p> <pre><code>Some text\n\n## Header\n</code></pre> <p>Rationale: Headers that don't start at the beginning of the line will not be parsed as headers, and will instead appear as regular text.</p>"},{"location":"misc/markdown/#md024","title":"MD024","text":"<p>Multiple headers with the same content</p> <p>Tags: headers</p> <p>Aliases: no-duplicate-header</p> <p>Parameters: allow_different_nesting (boolean; default false)</p> <p>This rule is triggered if there are multiple headers in the document that have the same text:</p> <pre><code>## Some text\n\n### Some text\n</code></pre> <p>To fix this, ensure that the content of each header is different:</p> <pre><code>## Some text\n\n### Some more text\n</code></pre> <p>Rationale: Some markdown parses generate anchors for headers based on the header name, and having headers with the same content can cause problems with this.</p> <p>If the parameter <code>allow_different_nesting</code> is set to <code>true</code>, header duplication under different nesting is allowed, like it usually happens in change logs:</p> <pre><code>## Change log\n\n### 2.0.0\n\n#### Bug fixes\n\n#### Features\n\n### 1.0.0\n\n#### Bug fixes\n</code></pre>"},{"location":"misc/markdown/#md025","title":"MD025","text":"<p>Multiple top level headers in the same document</p> <p>Tags: headers</p> <p>Aliases: single-h1</p> <p>Parameters: level (number; default 1)</p> <p>This rule is triggered when a top level header is in use (the first line of the file is a h1 header), and more than one h1 header is in use in the document:</p> <pre><code>## Top level header\n\n## Another top level header\n</code></pre> <p>To fix, structure your document so that there is a single h1 header that is the title for the document, and all later headers are h2 or lower level headers:</p> <pre><code>## Title\n\n### Header\n\n### Another header\n</code></pre> <p>Rationale: A top level header is a h1 on the first line of the file, and serves as the title for the document. If this convention is in use, then there can not be more than one title for the document, and the entire document should be contained within this header.</p> <p>Note: The <code>level</code> parameter can be used to change the top level (ex: to h2) in cases where an h1 is added externally.</p>"},{"location":"misc/markdown/#md026","title":"MD026","text":"<p>Trailing punctuation in header</p> <p>Tags: headers</p> <p>Aliases: no-trailing-punctuation</p> <p>Parameters: punctuation (string; default \".,;:!?\")</p> <p>This rule is triggered on any header that has a punctuation character as the last character in the line:</p> <pre><code>## This is a header.\n</code></pre> <p>To fix this, remove any trailing punctuation:</p> <pre><code>## This is a header\n</code></pre> <p>Note: The punctuation parameter can be used to specify what characters class as punctuation at the end of the header. For example, you can set it to <code>'.,;:!'</code> to allow headers with question marks in them, such as might be used in an FAQ.</p>"},{"location":"misc/markdown/#md027","title":"MD027","text":"<p>Multiple spaces after blockquote symbol</p> <p>Tags: blockquote, whitespace, indentation</p> <p>Aliases: no-multiple-space-blockquote</p> <p>This rule is triggered when blockquotes have more than one space after the blockquote (<code>&gt;</code>) symbol:</p> <pre><code>&gt;  This is a block quote with bad indentation\n&gt;  there should only be one.\n</code></pre> <p>To fix, remove any extraneous space:</p> <pre><code>&gt; This is a blockquote with correct\n&gt; indentation.\n</code></pre>"},{"location":"misc/markdown/#md028","title":"MD028","text":"<p>Blank line inside blockquote</p> <p>Tags: blockquote, whitespace</p> <p>Aliases: no-blanks-blockquote</p> <p>This rule is triggered when two blockquote blocks are separated by nothing except for a blank line:</p> <pre><code>&gt; This is a blockquote\n&gt; which is immediately followed by\n\n&gt; this blockquote. Unfortunately\n&gt; In some parsers, these are treated as the same blockquote.\n</code></pre> <p>To fix this, ensure that any blockquotes that are right next to each other have some text in between:</p> <pre><code>&gt; This is a blockquote.\n\nAnd Jimmy also said:\n\n&gt; This too is a blockquote.\n</code></pre> <p>Alternatively, if they are supposed to be the same quote, then add the blockquote symbol at the beginning of the blank line:</p> <pre><code>&gt; This is a blockquote.\n&gt;\n&gt; This is the same blockquote.\n</code></pre> <p>Rationale: Some markdown parsers will treat two blockquotes separated by one or more blank lines as the same blockquote, while others will treat them as separate blockquotes.</p>"},{"location":"misc/markdown/#md029","title":"MD029","text":"<p>Ordered list item prefix</p> <p>Tags: ol</p> <p>Aliases: ol-prefix</p> <p>Parameters: style (<code>:one</code>, <code>:ordered</code>; default <code>:one</code>)</p> <p>This rule is triggered on ordered lists that do not either start with '1.' or do not have a prefix that increases in numerical order (depending on the configured style, which defaults to 'one').</p> <p>Example valid list if the style is configured as 'one':</p> <pre><code>1. Do this.\n1. Do that.\n1. Done.\n</code></pre> <p>Example valid list if the style is configured as 'ordered':</p> <pre><code>1. Do this.\n2. Do that.\n3. Done.\n</code></pre>"},{"location":"misc/markdown/#md030","title":"MD030","text":"<p>Spaces after list markers</p> <p>Tags: ol, ul, whitespace</p> <p>Aliases: list-marker-space</p> <p>Parameters: ul_single, ol_single, ul_multi, ol_multi (number, default 1)</p> <p>This rule checks for the number of spaces between a list marker (e.g. '<code>-</code>', '<code>*</code>', '<code>+</code>' or '<code>1.</code>') and the text of the list item.</p> <p>The number of spaces checked for depends on the document style in use, but the default is 1 space after any list marker:</p> <pre><code>* Foo\n* Bar\n* Baz\n\n1. Foo\n1. Bar\n1. Baz\n\n1. Foo\n   * Bar\n1. Baz\n</code></pre> <p>A document style may change the number of spaces after unordered list items and ordered list items independently, as well as based on whether the content of every item in the list consists of a single paragraph, or multiple paragraphs (including sub-lists and code blocks).</p> <p>For example, the style guide at https://cirosantilli.com/markdown-style-guide#spaces-after-list-marker specifies that 1 space after the list marker should be used if every item in the list fits within a single paragraph, but to use 2 or 3 spaces (for ordered and unordered lists respectively) if there are multiple paragraphs of content inside the list:</p> <pre><code>* Foo\n* Bar\n* Baz\n</code></pre> <p>vs.</p> <pre><code>*   Foo\n\n    Second paragraph\n\n*   Bar\n</code></pre> <p>or</p> <pre><code>1.  Foo\n\n    Second paragraph\n\n1.  Bar\n</code></pre> <p>To fix this, ensure the correct number of spaces are used after list marker for your selected document style.</p>"},{"location":"misc/markdown/#md031","title":"MD031","text":"<p>Fenced code blocks should be surrounded by blank lines</p> <p>Tags: code, blank_lines</p> <p>Aliases: blanks-around-fences</p> <p>This rule is triggered when fenced code blocks are either not preceded or not followed by a blank line:</p> <pre><code>Some text\n```\nCode block\n```\n\n```\nAnother code block\n```\nSome more text\n</code></pre> <p>To fix this, ensure that all fenced code blocks have a blank line both before and after (except where the block is at the beginning or end of the document):</p> <pre><code>Some text\n\n```\nCode block\n```\n\n```\nAnother code block\n```\n\nSome more text\n</code></pre> <p>Rationale: Aside from aesthetic reasons, some parsers, including kramdown, will not parse fenced code blocks that don't have blank lines before and after them.</p>"},{"location":"misc/markdown/#md032","title":"MD032","text":"<p>Lists should be surrounded by blank lines</p> <p>Tags: bullet, ul, ol, blank_lines</p> <p>Aliases: blanks-around-lists</p> <p>This rule is triggered when lists (of any kind) are either not preceded or not followed by a blank line:</p> <pre><code>Some text\n* Some\n* List\n\n1. Some\n2. List\nSome text\n</code></pre> <p>To fix this, ensure that all lists have a blank line both before and after (except where the block is at the beginning or end of the document):</p> <pre><code>Some text\n\n* Some\n* List\n\n1. Some\n2. List\n\nSome text\n</code></pre> <p>Rationale: Aside from aesthetic reasons, some parsers, including kramdown, will not parse lists that don't have blank lines before and after them.</p> <p>Note: List items without hanging indents are a violation of this rule; list items with hanging indents are okay:</p> <pre><code>* This is\nnot okay\n\n* This is\n  okay\n</code></pre>"},{"location":"misc/markdown/#md033","title":"MD033","text":"<p>Inline HTML</p> <p>Tags: html</p> <p>Aliases: no-inline-html</p> <p>This rule is triggered whenever raw HTML is used in a markdown document:</p> <pre><code>&lt;h1&gt;Inline HTML header&lt;/h1&gt;\n</code></pre> <p>To fix this, use 'pure' markdown instead of including raw HTML:</p> <pre><code>## Markdown header\n</code></pre> <p>Rationale: Raw HTML is allowed in markdown, but this rule is included for those who want their documents to only include \"pure\" markdown, or for those who are rendering markdown documents in something other than HTML.</p>"},{"location":"misc/markdown/#md034","title":"MD034","text":"<p>Bare URL used</p> <p>Tags: links, url</p> <p>Aliases: no-bare-urls</p> <p>This rule is triggered whenever a URL is given that isn't surrounded by angle brackets:</p> <pre><code>For more information, see http://www.example.com/.\n</code></pre> <p>To fix this, add angle brackets around the URL:</p> <pre><code>For more information, see &lt;http://www.example.com/&gt;.\n</code></pre> <p>Rationale: Without angle brackets, the URL isn't converted into a link in many markdown parsers.</p> <p>Note: if you do want a bare URL without it being converted into a link, enclose it in a code block, otherwise in some markdown parsers it will be converted:</p> <pre><code>`http://www.example.com`\n</code></pre>"},{"location":"misc/markdown/#md035","title":"MD035","text":"<p>Horizontal rule style</p> <p>Tags: hr</p> <p>Aliases: hr-style</p> <p>Parameters: style (<code>:consistent</code>, \"---\", \"***\", or other string specifying the horizontal rule; default <code>:consistent</code>)</p> <p>This rule is triggered when inconsistent styles of horizontal rules are used in the document:</p> <pre><code>---\n\n- - -\n\n***\n\n* * *\n\n****\n</code></pre> <p>To fix this, ensure any horizontal rules used in the document are consistent, or match the given style if the rule is so configured:</p> <pre><code>---\n\n---\n</code></pre> <p>Note: by default, this rule is configured to just require that all horizontal rules in the document are the same, and will trigger if any of the horizontal rules are different than the first one encountered in the document. If you want to configure the rule to match a specific style, the parameter given to the 'style' option is a string containing the exact horizontal rule text that is allowed.</p>"},{"location":"misc/markdown/#md036","title":"MD036","text":"<p>Emphasis used instead of a header</p> <p>Tags: headers, emphasis</p> <p>Parameters: punctuation (string; default \".,;:!?\")</p> <p>Aliases: no-emphasis-as-header</p> <p>This check looks for instances where emphasized (i.e. bold or italic) text is used to separate sections, where a header should be used instead:</p> <pre><code>**My document**\n\nLorem ipsum dolor sit amet...\n\n_Another section_\n\nConsectetur adipiscing elit, sed do eiusmod.\n</code></pre> <p>To fix this, use markdown headers instead of emphasized text to denote sections:</p> <pre><code>## My document\n\nLorem ipsum dolor sit amet...\n\n### Another section\n\nConsectetur adipiscing elit, sed do eiusmod.\n</code></pre> <p>Note: this rule looks for single line paragraphs that consist entirely of emphasized text.  It won't fire on emphasis used within regular text, multi-line emphasized paragraphs, and paragraphs ending in punctuation. Similarly to rule MD026, you can configure what characters are recognized as punctuation.</p>"},{"location":"misc/markdown/#md037","title":"MD037","text":"<p>Spaces inside emphasis markers</p> <p>Tags: whitespace, emphasis</p> <p>Aliases: no-space-in-emphasis</p> <p>This rule is triggered when emphasis markers (bold, italic) are used, but they have spaces between the markers and the text:</p> <pre><code>Here is some ** bold ** text.\n\nHere is some * italic * text.\n\nHere is some more __ bold __ text.\n\nHere is some more _ italic _ text.\n</code></pre> <p>To fix this, remove the spaces around the emphasis markers:</p> <pre><code>Here is some **bold** text.\n\nHere is some *italic* text.\n\nHere is some more __bold__ text.\n\nHere is some more _italic_ text.\n</code></pre> <p>Rationale: Emphasis is only parsed as such when the asterisks/underscores aren't completely surrounded by spaces. This rule attempts to detect where they were surrounded by spaces, but it appears that emphasized text was intended by the author.</p>"},{"location":"misc/markdown/#md038","title":"MD038","text":"<p>Spaces inside code span elements</p> <p>Tags: whitespace, code</p> <p>Aliases: no-space-in-code</p> <p>This rule is triggered on code span elements that have spaces right inside the backticks:</p> <pre><code>` some text `\n\n`some text `\n\n` some text`\n</code></pre> <p>To fix this, remove the spaces inside the codespan markers:</p> <pre><code>`some text`\n</code></pre>"},{"location":"misc/markdown/#md039","title":"MD039","text":"<p>Spaces inside link text</p> <p>Tags: whitespace, links</p> <p>Aliases: no-space-in-links</p> <p>This rule is triggered on links that have spaces surrounding the link text:</p> <pre><code>[ a link ](http://www.example.com/)\n</code></pre> <p>To fix this, remove the spaces surrounding the link text:</p> <pre><code>[a link](http://www.example.com/)\n</code></pre>"},{"location":"misc/markdown/#md040","title":"MD040","text":"<p>Fenced code blocks should have a language specified</p> <p>Tags: code, language</p> <p>Aliases: fenced-code-language</p> <p>This rule is triggered when fenced code blocks are used, but a language isn't specified:</p> <pre><code>```\n#!/bin/bash\necho Hello world\n```\n</code></pre> <p>To fix this, add a language specifier to the code block:</p> <pre><code>```bash\n#!/bin/bash\necho Hello world\n```\n</code></pre> <p>If no specific language is used, you can specify <code>text</code> as language.</p>"},{"location":"misc/markdown/#md041","title":"MD041","text":"<p>First line in file should be a top level header</p> <p>Tags: headers</p> <p>Aliases: first-line-h1</p> <p>Parameters: level (number; default 1)</p> <p>This rule is triggered when the first line in the file isn't a top level (h1) header:</p> <pre><code>This is a file without a header\n</code></pre> <p>To fix this, add a header to the top of your file:</p> <pre><code>## File with header\n\nThis is a file with a top level header\n</code></pre> <p>Note: The <code>level</code> parameter can be used to change the top level (ex: to h2) in cases where an h1 is added externally.</p>"},{"location":"misc/markdown/#md046","title":"MD046","text":"<p>Code block style</p> <p>Tags: code</p> <p>Aliases: code-block-style</p> <p>Parameters: style (<code>:fenced</code>, <code>:indented</code>, <code>:consistent</code>, default <code>:fenced</code>)</p> <p>This rule is triggered when a different code block style is used than the configured one. For example, in the default configuration this rule is triggered for the following document:</p> <pre><code>Some text.\n\n    Code block\n\nSome more text.\n</code></pre> <p>To fix this, used fenced code blocks:</p> <pre><code>Some text.\n\n```ruby\nCode block\n```\n\nSome more text.\n</code></pre> <p>The reverse is true if the rule is configured to use the <code>indented</code> style.</p>"},{"location":"misc/markdown/#md047","title":"MD047","text":"<p>File should end with a single newline character</p> <p>Tags: blank_lines</p> <p>Aliases: single-trailing-newline</p> <p>This rule is triggered when there is not a single newline character at the end of a file.</p> <p>Example that triggers the rule:</p> <pre><code>## Heading\n\nThis file ends without a newline.[EOF]\n</code></pre> <p>To fix the violation, add a newline character to the end of the file:</p> <pre><code>## Heading\n\nThis file ends with a newline.\n[EOF]\n</code></pre> <p>Rationale: Some programs have trouble with files that do not end with a newline. More information: https://unix.stackexchange.com/questions/18743/whats-the-point-in-adding-a-new-line-to-the-end-of-a-file.</p>"},{"location":"misc/markdown/#reference","title":"Reference","text":"<p>Link: markdown guide</p> <p>Rules: markownlint github</p>"},{"location":"misc/mermaid/","title":"Mermaid","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"misc/mkdocs/","title":"MKDocs","text":""},{"location":"misc/mkdocs/#material","title":"Material","text":""},{"location":"misc/mkdocs/#admonition","title":"Admonition","text":"<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre>"},{"location":"misc/mkdocs/#supported-types","title":"Supported types","text":"<p>Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is <code>note</code>1:</p>"},{"location":"misc/mkdocs/#how-to","title":"How to","text":"<p>Use the type belong <code>!!!</code> as :</p> <pre><code>!!! note\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\n</code></pre>"},{"location":"misc/mkdocs/#note","title":"<code>note</code>","text":"<p>Note<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#abstract","title":"<code>abstract</code>","text":"<p>Abstract<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#info","title":"<code>info</code>","text":"<p>Info<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#tip","title":"<code>tip</code>","text":"<p>Tip<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#success","title":"<code>success</code>","text":"<p>Success<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#question","title":"<code>question</code>","text":"<p>Question<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#warning","title":"<code>warning</code>","text":"<p>Warning<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#failure","title":"<code>failure</code>","text":"<p>Failure<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#danger","title":"<code>danger</code>","text":"<p>Danger<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#bug","title":"<code>bug</code>","text":"<p>Bug<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#example","title":"<code>example</code>","text":"<p>Example<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p>"},{"location":"misc/mkdocs/#quote","title":"<code>quote</code>","text":"<p>Quote<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> </p> <ol> <li> <p>Previously, some of the supported types defined more than one qualifier. For example, authors could use <code>summary</code> or <code>tldr</code> as alternative qualifiers to render an ##### <code>abstract</code> admonition. As this increased the size of the CSS that is shipped with Material for MkDocs, the additional type qualifiers are now all deprecated and will be removed in the next major version. This will also be mentioned in the upgrade guide.\u00a0\u21a9</p> </li> </ol>"},{"location":"misc/obsidian/","title":"Obsidian","text":""},{"location":"misc/obsidian/#admonitions","title":"Admonitions","text":""},{"location":"misc/obsidian/#types","title":"Types","text":"<p>The following admonition types are currently supported:</p> Type Aliases note note, seealso abstract abstract, summary, tldr info info, todo tip tip, hint, important success success, check, done question question, help, faq warning warning, caution, attention failure failure, fail, missing danger danger, error bug bug example example quote quote, cite"},{"location":"misc/obsidian/#parameters","title":"Parameters","text":"<pre><code>```ad- # Admonition type. See below for a list of available types.\ntitle: # Admonition title.\ncollapse: # Create a collapsible admonition.\nicon: # Override the icon.\ncolor: # Override the color.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.\n</code></pre>"},{"location":"misc/obsidian/#example","title":"Example","text":"<p>Note : (<code>ad-note</code>)</p> <pre><code>title: This is a note\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\neuismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\npurus auctor massa, nec semper lorem quam in massa.\n</code></pre>"},{"location":"monitoring/centreon/","title":"Centreon Central","text":"<p>Here are somes Centreon tips &amp; tricks</p>"},{"location":"monitoring/centreon/#analyse","title":"Analyse","text":"<p>V\u00e9rifier les connexions tent\u00e9es :</p> <pre><code>/var/log/centreon/login.log\n</code></pre>"},{"location":"monitoring/centreon/#poller","title":"Poller","text":"<p>List storage from poller :</p> <pre><code>/usr/lib/centreon/plugins/centreon-plugins/centreon_plugins.pl --plugin=os::linux::snmp::plugin --mode=list-storages --hostname=$HOST | grep /\n</code></pre>"},{"location":"monitoring/centreon/#stats","title":"Stats","text":"<p>Voir les stats du poller :</p> <pre><code>/usr/sbin/centenginestats\n</code></pre> R\u00e9pertoire du log <code>tail -f /var/log/centreon-broker/poller-module.log</code>"},{"location":"monitoring/centreon/#yellow-state","title":"Yellow state","text":"<p>Last update yellow ? Lors d'une migration de poller, s'assurer que l'adresse du central soit bien mensionn\u00e9e dans le broker du poller.</p>"},{"location":"monitoring/centreon/#commandes","title":"Commandes","text":"<p>Liste de commandes centreons \u00e0 garder en t\u00eate</p>"},{"location":"monitoring/centreon/#plugin","title":"Plugin","text":"<p>Commande du plugin centreon :</p> <pre><code>/usr/lib/centreon/plugins/centreon-plugins/centreon_plugins.pl\n</code></pre> <p>Lister les FS : On va utiliser le mode list-storages :</p> <pre><code>/usr/lib/centreon/plugins/centreon-plugins/centreon_plugins.pl --plugin=os::linux::snmp::plugin --mode=list-storages --hostname=${iP}\n</code></pre>"},{"location":"monitoring/nagios/","title":"Nagios","text":""},{"location":"monitoring/nagios/#installation","title":"Installation","text":"<p>Installation based on rpm packages</p>"},{"location":"monitoring/nagios/#rhel7","title":"rhel7","text":"<pre><code>yum install -y yum-utils\nyum-config-manager --enable rhel-7-server-optional-rpms\n</code></pre>"},{"location":"monitoring/nagios/#oel","title":"oel","text":"<pre><code>yum install -y yum-utils\nyum-config-manager --enable ol7_optional_latest\n</code></pre>"},{"location":"monitoring/nagios/#script","title":"Script","text":"<p>curl https://assets.nagios.com/downloads/nagiosxi/install.sh | sh</p>"},{"location":"monitoring/nagios/#configuration","title":"Configuration","text":"<p>File : <code>/etc/nagios/objects/commands.cfg</code></p>"},{"location":"monitoring/readme/","title":"README","text":"<p>The Monitoring Console is a web application available through any browser that can connect to the host where you installed it.  You will access the Monitoring Console through the Web Console that is automatically installed on the same host.</p> <p></p>"},{"location":"network/certmanager/","title":"Cert-Manager","text":"<p>Cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.</p> <p>Documentation &amp; Project Homepage: Cert-Manager Docs</p>"},{"location":"network/certmanager/#self-signed-certificates","title":"Self-Signed Certificates","text":""},{"location":"network/certmanager/#upload-existing-cakey-and-cacrt-files-option-1","title":"Upload existing CA.key and CA.crt files (Option 1)","text":""},{"location":"network/certmanager/#1-create-a-self-signed-ca-ssl-certs-creating-a-cakey-private-key-and-cacrt-certificate","title":"1. Create a self-signed CA (ssl-certs) creating a ca.key (private-key) and ca.crt (certificate)","text":"<p>(ca.key)</p> <pre><code>openssl genrsa -out ca.key 4096\n</code></pre> <p>(ca.crt)</p> <pre><code>openssl req -new -x509 -sha256 -days 365 -key ca.key -out ca.crt\n</code></pre>"},{"location":"network/certmanager/#2-convert-the-files-to-a-one-line-base64-decoded-string-only-works-on-linux-base64-tool","title":"2. Convert the files to a one line base64 decoded string (only works on Linux base64 tool)","text":"<pre><code>cat ca.key | base64 -w 0\n</code></pre>"},{"location":"network/certmanager/#3-create-a-new-ssl-secret-object-using-the-strings","title":"3. Create a new ssl secret object using the strings","text":"<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\nname: ssl-issuer-secret\n# (Optional) Metadata\n# ---\n# namespace: your-namespace\ntype: Opaque\ndata:\ntls.crt: &lt;base64-decoded-string&gt;\ntls.key: &lt;base64-decoded-string&gt;\n</code></pre>"},{"location":"network/certmanager/#4-create-a-new-clusterissuer-or-issuer-object-by-using-the-ssl-secret","title":"4. Create a new ClusterIssuer or Issuer object by using the ssl secret","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\nname: selfsigned-issuer\n# (Optional) Metadata\n# ---\n# namespace: your-namespace\nspec:\nca:\nsecretName: ssl-issuer-secret\n</code></pre>"},{"location":"network/certmanager/#create-ca-through-cert-manager-option-2","title":"Create CA through Cert-manager (Option 2)","text":"<p>Create a new ClusterIssuer or Issuer object by using the selfSigned Attribute.</p> <pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\nname: root-issuer\nspec:\nselfSigned: {}\n</code></pre>"},{"location":"network/certmanager/#troubleshooting","title":"Troubleshooting","text":""},{"location":"network/certmanager/#common-errors","title":"Common Errors","text":"<p>DNS Record not yet propagated The error, <code>Waiting for DNS-01 challenge propagation: DNS record for \"your-dns-record\" not yet propagated.</code>, might occur in the <code>challenge</code> object. Cert-Manager creates a TXT Record on the DNS provider and checks, whether the record is existing, before issuing the certificate. In a split-dns environment, this could be a problem when internal DNS Servers can't resolve the TXT Record on the Cloud DNS. You can use the <code>extraArgs</code> <code>--dns01-recursive-nameservers-only</code>, and <code>--dns01-recursive-nameservers=8.8.8.8:53,1.1.1.1:53</code>, to specific the DNS Resolvers used for the challenge.</p> <p>No solver found The error, <code>Failed to determine a valid solver configuration for the set of domains on the Order: no configured challenge solvers can be used for this challenge</code> might occur in the <code>order</code> object, when no solver can't be found for the DNS Hostname. Make sure your solvers have a corrent <code>dnsZones</code> configured that matches the DNS Hostnames Zone.</p>"},{"location":"network/http-status/","title":"HTTP Status Codes","text":""},{"location":"network/http-status/#categories","title":"Categories","text":"<ul> <li>1XX status codes: Informational Requests</li> <li>2XX status codes: Successful Requests</li> <li>3XX status codes: Redirects</li> <li>4XX status codes: Client Errors</li> <li>5XX status codes: Server Errors</li> </ul>"},{"location":"network/http-status/#complete-list","title":"Complete List","text":"Code Name Description 100 Continue Everything so far is OK and that the client should continue with the request or ignore it if it is already finished. 101 Switching Protocols The client has asked the server to change protocols and the server has agreed to do so. 102 Processing The server has received and is processing the request, but that it does not have a final response yet. 103 Early Hints Used to return some response headers before final HTTP message. 200 OK Successful request. 201 Created The server acknowledged the created resource. 202 Accepted The client's request has been received but the server is still processing it. 203 Non-Authoritative Information The response that the server sent to the client is not the same as it was when the server sent it. 204 No Content There is no content to send for this request 205 Reset Content Tells the user agent to reset the document which sent this request. 206 Partial Content This response code is used when the range-header is sent from the client to request only part of a resource. 207 Multi-Status Conveys information about multiple resources, for situations where multiple status codes might be appropriate. 208 Already Reported The members of a DAV binding have already been enumerated in a preceding part of the multi-status response. 226 IM Used IM is a specific extension of the HTTP protocol. The extension allows a HTTP server to send diffs (changes) of resources to clients. 300 Multiple Choices The request has more than one possible response. The user agent should choose one. 301 Moved Permanently The URL of the requested resource has been changed permanently. The new URL is given in the response. 302 Found This response code means that the URI of requested resource has been changed temporarily 303 See Other The server sent this response to direct the client to get the requested resource at another URI with a GET request. 304 Not Modified It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. 305 Use Proxy Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. (discontinued) 307 Temporary Redirect The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. 308 Permanent Redirect This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. 400 Bad Request The server could not understand the request 401 Unauthorized The client didn't authenticate himself. 402 Payment Required This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. 403 Forbidden The client does not have access rights to the content 404 Not Found The server can not find the requested resource 405 Method Not Allowed The request method is known by the server but is not supported by the target resource 406 Not Acceptable The reponse doens't conforms to the creteria given by the client 407 Proxy Authentication Required This is similar to 401 Unauthorized but authentication is needed to be done by a proxy. 408 Request Timeout This response is sent on an idle connection by some servers, even without any previous request by the client. 409 Conflict This response is sent when a request conflicts with the current state of the server. 410 Gone This response is sent when the requested content has been permanently deleted from server, with no forwarding address. 411 Length Required Server rejected the request because the Content-Length header field is not defined and the server requires it. 412 Precondition Failed Access to the target resource has been denied. 413 Payload Too Large Request entity is larger than limits defined by server. 414 Request-URI Too Long The URI requested by the client is longer than the server is willing to interpret. 415 Unsupported Media Type The media format is not supported by the server. 416 Requested Range Not Satisfiable The range specified by the Range header field in the request cannot be fulfilled. 417 Expectation Failed the expectation indicated by the Expect request header field cannot be met by the server. 418 I'm a teapot The server refuses the attempt to brew coffee with a teapot. 421 Misdirected Request The request was directed at a server that is not able to produce a response. 422 Unprocessable Entity The request was well-formed but was unable to be followed due to semantic errors. 423 Locked The resource that is being accessed is locked. 424 Failed Dependency The request failed due to failure of a previous request. 426 Upgrade Required The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. 428 Precondition Required his response is intended to prevent the 'lost update' problem, where a client GETs a resource's state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. 429 Too Many Requests The user has sent too many requests in a given amount of time 431 Request Header Fields Too Large The server is can't process the request because its header fields are too large. 444 Connection Closed Without Response The connection opened, but no data was written. 451 Unavailable For Legal Reasons The user agent requested a resource that cannot legally be provided (such as a web page censored by a government) 499 Client Closed Request The client closed the connection, despite the server was processing the request already. 500 Internal Server Error The server has encountered a situation it does not know how to handle. 501 Not Implemented The request method is not supported by the server and cannot be handled. 502 Bad Gateway This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. 503 Service Unavailable The server is not ready to handle the request. 504 Gateway Timeout This error response is given when the server is acting as a gateway and cannot get a response in time. 505 HTTP Version Not Supported The HTTP version used in the request is not supported by the server. 506 Variant Also Negotiates the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. 507 Insufficient Storage The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. 508 Loop Detected The server detected an infinite loop while processing the request. 510 Not Extended Further extensions to the request are required for the server to fulfill it. 511 Network Authentication Required Indicates that the client needs to authenticate to gain network access. 599 Network Connect Timeout Error The connection timed out due to a overloaded server, a hardware error or a infrastructure error."},{"location":"network/mkcert/","title":"Certificate Generator","text":""},{"location":"network/mkcert/#how-to","title":"How to","text":"<p>How to use this script ?</p> <p>Open a terminal and run a ssh connection to pki-adm :</p> <pre><code>ssh pki-adm\n</code></pre> <p>You should be logged as <code>su</code> :</p> <pre><code>sudo su -\n</code></pre> <p>You are able to run this script from everywhere.</p>"},{"location":"network/mkcert/#run","title":"Run","text":"<p>Simply run this script like :</p> <pre><code>mkcert\n</code></pre> <p>This script will return you theses informations :</p> <pre><code>Welcome to the cert gen\nPlease follow these steps :\nEnter the name ONLY :  Barack\nEnter the surname ONLY :  OBAMA\nFill wich type would you want : 'client' or 'operator' :  client\n</code></pre>"},{"location":"network/mkcert/#raw-script","title":"Raw script","text":"<pre><code>#!/bin/bash\n#\n# Written by sboistel on June 2021\n#\n# Create user certificate\n\n# Var\nbin=/usr/local/bin\nkey_pass=$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 16) # Generate random password\nPki=/etc/pki/ # root folder of reverse-${type}\n\n# Welcome\necho \"\"\necho \"Welcome to the cert gen\"\necho \"Please follow these steps :\"\necho \"Enter the name ONLY :  Barack\"\necho \"Enter the surname ONLY :  OBAMA\"\necho \"Fill wich type would you want : 'client' or 'operator' :  client\"\necho \"\"\n\n# Get Informaitons\n## User information\n### Name\nread -rp \"Enter the name ONLY : \" name\nna=$(echo ${name,,} | cut -c 1) # 1st letter of name lowercasedededed\n\n### Surname\nread -rp \"Enter the surname ONLY : \" surname\nsurna=${surname,,} # surname lowercased\n\n### Username\nusername=${na}${surna} #1st letter of name + surname\n\n## Type of user\necho \"Fill wich type would you want : 'client' or 'operator' : \"\ntypes=(\"client\" \"operator\")\n\nselect typ in \"${types[@]}\" ; do\ncase \"$typ\" in\n\"client\")\nctype=\"client\" &amp;&amp; break\n;;\n\"operator\")\nctype=\"operator\" &amp;&amp; break\n;;\n*)\necho \"Wrong choice, please select the number of the type you want.\"\n;;\nesac\ndone\n\n### Working Directory : Determine the user type trough the $ctype\nif [ \"$ctype\" = \"client\" ]; then\nWD=$Pki/reverse-client/users\nelif [ \"$ctype\" = \"operator\" ]; then\nWD=$Pki/reverse-operator/users\nfi\n\n### CA Directory : Determine the CA type trough the $ctype\nif [ \"$ctype\" = \"client\" ]; then\nca_type=$Pki/reverse-client/intermediate-CA\nelif [ \"$ctype\" = \"operator\" ]; then\nca_type=$Pki/reverse-operator/intermediate-CA\nfi\n\n# Traitement\n## Creating Directory\necho \"Go to the $username directory\"\nmkdir -pv $WD/$username\ncd $WD/$username\n\n## Create the credentials for the SSM\necho \"# $username credentials\" &gt;&gt; ${username}_key_pass.md\necho \"&gt; $key_pass\" &gt;&gt; ${username}_key_pass.md\n\n## Let's Certificate\n### KEY\necho \"Generate the $username key\"\nopenssl genrsa -des3 -passout pass:${key_pass} -out ${username}.key 4096\n\n### CSR\necho \"Generate the $username csr\"\nopenssl req -new -key $username.key -passin pass:${key_pass} -out $username.csr  -subj \"/C=FR/ST=France/L=Paris/O=Docki/OU=sboistel/CN=Intermediate CA\"\n\n### Make Cert / P12\n#### Generate the Cert with the CA\necho \"Generate the $username crt\"\n$bin/make-crt-with-intermediate-ca $username $ca_type\n\n#### Generate the P12 with the CA\necho \"Generate the $username p12\"\n$bin/make-p12-with-intermediate-ca $username $ca_type\n\n# End Print\necho \"The $username's certificat has been created.\"\necho \"The credentials are stored into the ${username}_key_pass.md file :\"\necho \"Let's communicate the key password to the SSM/user\"\ncat ${username}_key_pass.md\n\n# EOF\n</code></pre>"},{"location":"network/ngrok/","title":"ngrok","text":""},{"location":"network/ngrok/#donwload","title":"Donwload","text":"<p>get https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz</p>"},{"location":"network/ngrok/#unarchive","title":"Unarchive","text":"<p>tar xvzf ngrok-stable-linux-amd64.tgz -C /usr/local/bin</p>"},{"location":"network/ngrok/#download-keys-and-repos","title":"Download Keys and repos","text":"<p>curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | tee /etc/apt/trusted.gpg.d/ngrok.asc  /dev/null</p> <p>echo \"deb https://ngrok-agent.s3.amazonaws.com buster main\" | tee /etc/apt/sources.list.d/ngrok.list</p>"},{"location":"network/ngrok/#installation","title":"Installation","text":"<p>apt update &amp;&amp; apt install ngrok</p> <p>snap install ngrok</p>"},{"location":"network/ngrok/#run","title":"Run","text":"<p>ngrok authtoken 218oHoLLOZgqVR7tex3w2SzDtnq_4rgFjQzqqXYYezF6AxuV9</p> <p>ngrok http 80</p>"},{"location":"network/openvpn/","title":"OpenVPN","text":""},{"location":"network/openvpn/#install-via-repository","title":"Install via repository","text":"<p>(recommended) *LINK</p> <p>The recommended method to install the OpenVPN Access Server is to use the official OpenVPN Access Server software repository. </p> <p>You will need to be logged on to your Linux system either on the console or via SSH, and have root privileges. Then copy and paste the commands below to add the repository to your system, and install the OpenVPN Access Server client bundle and the OpenVPN Access Server package itself. </p> <p>Installing the package 'openvpn-as' will automatically pull in the required client bundle as well.</p> <pre><code>apt update &amp;&amp; apt -y install ca-certificates wget net-tools gnupg\nwget -qO - &lt;https://as-repository.openvpn.net/as-repo-public.gpg&gt; | apt-key add -\necho \"deb &lt;http://as-repository.openvpn.net/as/debian&gt; buster main\"&gt;/etc/apt/sources.list.d/openvpn-as-repo.list\napt update &amp;&amp; apt -y install openvpn-as\n</code></pre>"},{"location":"network/openvpn/#configuration","title":"Configuration","text":"<p>Follow theses steps : OpenVPN Website</p>"},{"location":"network/pi-hole/","title":"Pi-Hole","text":""},{"location":"network/pi-hole/#requirement","title":"Requirement","text":"<p>Set static iP @</p>"},{"location":"network/pi-hole/#installation","title":"Installation","text":"<p>Installing packages</p> <pre><code>apt install curl\n</code></pre> <p>Download &amp; run the installation file</p> <pre><code>curl -sSL https://install.pi-hole.net | bash\n</code></pre>"},{"location":"network/pi-hole/#configuration","title":"Configuration","text":"<p>Change the main password</p> <pre><code>pihole -a -p\n</code></pre>"},{"location":"network/readme/","title":"Networking","text":""},{"location":"network/ssl/","title":"SSL Certificates","text":"<p>X.509 is an ITU standard defining the format of public key certificates. X.509 are used in TLS/SSL, which is the basis for HTTPS. An X.509 certificate binds an identity to a public key using a digital signature. A certificate contains an identity (hostname, organization, etc.) and a public key (RSA, DSA, ECDSA, ed25519, etc.), and is either signed by a Certificate Authority or is Self-Signed.</p>"},{"location":"network/ssl/#self-signed-certificates","title":"Self-Signed Certificates","text":""},{"location":"network/ssl/#generate-ca","title":"Generate CA","text":"<ol> <li>Generate RSA <pre><code>openssl genrsa -aes256 -out ca-key.pem 4096\n</code></pre></li> <li>Generate a public CA Cert <pre><code>openssl req -new -x509 -sha256 -days 365 -key ca-key.pem -out ca.pem\n</code></pre></li> </ol>"},{"location":"network/ssl/#generate-certificate","title":"Generate Certificate","text":"<ol> <li>Create a RSA key <pre><code>openssl genrsa -out cert-key.pem 4096\n</code></pre></li> <li>Create a Certificate Signing Request (CSR) <pre><code>openssl req -new -sha256 -subj \"/CN=yourcn\" -key cert-key.pem -out cert.csr\n</code></pre></li> <li>Create a <code>extfile</code> with all the alternative names <pre><code>echo \"subjectAltName=DNS:your-dns.record,IP:257.10.10.1\" &gt;&gt; extfile.cnf\n</code></pre> <pre><code># optional\necho extendedKeyUsage = serverAuth &gt;&gt; extfile.cnf\n</code></pre></li> <li>Create the certificate <pre><code>openssl x509 -req -sha256 -days 365 -in cert.csr -CA ca.pem -CAkey ca-key.pem -out cert.pem -extfile extfile.cnf -CAcreateserial\n</code></pre></li> </ol>"},{"location":"network/ssl/#certificate-formats","title":"Certificate Formats","text":"<p>X.509 Certificates exist in Base64 Formats PEM (.pem, .crt, .ca-bundle), PKCS#7 (.p7b, p7s) and Binary Formats DER (.der, .cer), PKCS#12 (.pfx, p12).</p>"},{"location":"network/ssl/#convert-certs","title":"Convert Certs","text":"COMMAND CONVERSION <code>openssl x509 -outform der -in cert.pem -out cert.der</code> PEM to DER <code>openssl x509 -inform der -in cert.der -out cert.pem</code> DER to PEM <code>openssl pkcs12 -in cert.pfx -out cert.pem -nodes</code> PFX to PEM"},{"location":"network/ssl/#verify-certificates","title":"Verify Certificates","text":"<p><code>openssl verify -CAfile ca.pem -verbose cert.pem</code></p>"},{"location":"network/ssl/#install-the-ca-cert-as-a-trusted-root-ca","title":"Install the CA Cert as a trusted root CA","text":""},{"location":"network/ssl/#on-debian-derivatives","title":"On Debian &amp; Derivatives","text":"<ul> <li>Move the CA certificate (<code>ca.pem</code>) into <code>/usr/local/share/ca-certificates/ca.crt</code>.</li> <li>Update the Cert Store with: <pre><code>sudo update-ca-certificates\n</code></pre></li> </ul> <p>Refer the documentation here and here.</p>"},{"location":"network/ssl/#on-fedora","title":"On Fedora","text":"<ul> <li>Move the CA certificate (<code>ca.pem</code>) to <code>/etc/pki/ca-trust/source/anchors/ca.pem</code> or <code>/usr/share/pki/ca-trust-source/anchors/ca.pem</code></li> <li>Now run (with sudo if necessary): <pre><code>update-ca-trust\n</code></pre></li> </ul> <p>Refer the documentation here.</p>"},{"location":"network/ssl/#on-arch","title":"On Arch","text":"<p>System-wide \u2013 Arch(p11-kit) (From arch wiki) - Run (As root) <pre><code>trust anchor --store myCA.crt\n</code></pre> - The certificate will be written to /etc/ca-certificates/trust-source/myCA.p11-kit and the \"legacy\" directories automatically updated. - If you get \"no configured writable location\" or a similar error, import the CA manually: - Copy the certificate to the /etc/ca-certificates/trust-source/anchors directory. - and then <pre><code>update-ca-trust\n</code></pre> wiki page  here</p>"},{"location":"network/ssl/#on-windows","title":"On Windows","text":"<p>Assuming the path to your generated CA certificate as <code>C:\\ca.pem</code>, run: <pre><code>Import-Certificate -FilePath \"C:\\ca.pem\" -CertStoreLocation Cert:\\LocalMachine\\Root\n</code></pre> - Set <code>-CertStoreLocation</code> to <code>Cert:\\CurrentUser\\Root</code> in case you want to trust certificates only for the logged in user.</p> <p>OR</p> <p>In Command Prompt, run: <pre><code>certutil.exe -addstore root C:\\ca.pem\n</code></pre></p> <ul> <li><code>certutil.exe</code> is a built-in tool (classic <code>System32</code> one) and adds a system-wide trust anchor.</li> </ul>"},{"location":"network/ssl/#on-android","title":"On Android","text":"<p>The exact steps vary device-to-device, but here is a generalised guide: 1. Open Phone Settings 2. Locate <code>Encryption and Credentials</code> section. It is generally found under <code>Settings &gt; Security &gt; Encryption and Credentials</code> 3. Choose <code>Install a certificate</code> 4. Choose <code>CA Certificate</code> 5. Locate the certificate file <code>ca.pem</code> on your SD Card/Internal Storage using the file manager. 6. Select to load it. 7. Done!</p>"},{"location":"network/ssl/#ssl-security-cheat-sheet","title":"SSL Security Cheat-Sheet","text":"<p>... TBD</p>"},{"location":"network/ssl/#tls-version-and-ciphers","title":"TLS Version and Ciphers","text":"<p>Scanning for TLS Version and supported Ciphers: <code>nmap --script ssl-enum-ciphers &lt;target&gt;</code></p> Tool Link Description Qualys SSL Labs https://www.ssllabs.com/projects/index.html SSL Security Tools by Qualys"},{"location":"storage/bareos/","title":"Bareos","text":""},{"location":"storage/bareos/#job","title":"Job","text":"<p>How do job command works ?</p> Mean Command Which files shall be backed up? show filesets (I=Included, E=Excluded) What\u2019s the server doing? status dir What\u2019s the status of a certain job? status jobid=xx What\u2019s the client doing? status client What\u2019s the streamer doing? status storage Anything new? messages Means Command Last jobs list jobs Specifique Job list jobid=xx Statistics about last jobs list jobtotal Which files were backed up? list files jobid=xx"},{"location":"storage/bareos/#level-list","title":"Level list","text":"<ul> <li>Base</li> <li>Catalog</li> <li>Data</li> <li>Differential</li> <li>DiskToCatalog</li> <li>Full</li> <li>Incremental</li> <li>InitCatalog</li> <li>Since</li> <li>VirtualFull</li> <li>VolumeToCatalog</li> </ul>"},{"location":"storage/bareos/#status-table-view","title":"Status table view","text":"Status means T Terminated normally C Created but not yet running R Running B Blocked E Terminated in Error e Non-fatal error f Fatal error D Verify Differences A Canceled by the user F Waiting on the File daemon S Waiting on the Storage daemon m Waiting for a new Volume to be mounted M Waiting for a Mount s Waiting for Storage resource j Waiting for Job resource c Waiting for Client resource d Wating for Maximum jobs t Waiting for Start Time p Waiting for higher priority job to finish W Terminated with warnings"},{"location":"storage/cloudera/","title":"Cloudera","text":""},{"location":"storage/cloudera/#how-to-identify-if-numa-is-enabled","title":"How to identify if NUMA is enabled","text":"<p>NUMA has to enabled in the BIOS. If dmesg does not have records of numa initialization during bootup, then it is possible that NUMA related messages in the kernel ring buffer might have been overwritten.</p>"},{"location":"storage/cloudera/#numa-enabled-systems","title":"NUMA Enabled Systems","text":"<p>If NUMA is enabled on BIOS, then execute the command \u2018numactl \u2013hardware\u2018 to list inventory of available nodes on the system. Below is example output of numactl \u2013hardware on a system which has NUMA.</p> <p>numactl --hardware</p> <pre><code>available: 2 nodes (0-1)\nnode 0 cpus: 0 1 2 3 4 5 6 7 16 17 18 19 20 21 22 23\nnode 0 size: 8157 MB\nnode 0 free: 88 MB\nnode 1 cpus: 8 9 10 11 12 13 14 15 24 25 26 27 28 29 30 31\nnode 1 size: 8191 MB\nnode 1 free: 5176 MB\nnode distances:\nnode   0   1 0:  10  20 1:  20  10\n</code></pre>"},{"location":"storage/cloudera/#numa-disabled-systems","title":"NUMA Disabled Systems","text":""},{"location":"storage/cloudera/#1-if-numa-is-disabled-on-bios-then-the-command-numactl-show-does-not-show-multiple-nodes","title":"1. If NUMA is disabled on BIOS, then the command \u2018numactl \u2013show\u2018 does not show multiple nodes.","text":"<p>numactl --show</p> <pre><code>policy: default\npreferred node: current\nphyscpubind: 0 1 2 3 4 5 6 7 8 9 10 11\ncpubind: 0\nnodebind: 0\nmembind: 0\n</code></pre>"},{"location":"storage/cloudera/#2-the-command-numactl-hardware-also-does-not-list-multiple-nodes","title":"2. The command \u2018numactl \u2013hardware\u2018 also does not list multiple nodes","text":"<pre><code>available: 1 nodes (0)\nnode 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11\nnode 0 size: 65525 MB\nnode 0 free: 17419 MB\nnode distances:\nnode   0\n0:  10\n</code></pre>"},{"location":"storage/cloudera/#3-if-the-server-does-not-have-numa-support-or-if-the-bios-option-is-not-enabled-then-the-following-messages-will-be-seen-in-dmesg","title":"3. If the server does not have NUMA support or if the BIOS option is not enabled, then the following messages will be seen in dmesg","text":"<pre><code>No NUMA configuration found\nFaking a node at 0000000000000000-0000001027fff000\n</code></pre>"},{"location":"storage/cloudera/#4-if-acpi-is-disabled-that-will-also-disable-numa-verify-that-acpi-is-not-disabled-by-a-grubconf-kernel-parameter-and-remove-it-if-found","title":"4. If ACPI is disabled, that will also disable NUMA; verify that ACPI is not disabled by a grub.conf kernel parameter and remove it if found:","text":"<pre><code>$ grep acpi=off /proc/cmdline\n</code></pre>"},{"location":"storage/cloudera/#charts-building","title":"Charts Building","text":""},{"location":"storage/cloudera/#health","title":"Health","text":"<pre><code>select health_good_rate * 100 as \"good health\", health_concerning_rate * 100 as \"concerning health\", health_bad_rate * 100 as \"bad health\", health_disabled_rate * 100 as \"disabled health\", health_unknown_rate * 100 as \"unknown health\" where entityName=\"hdfs:$node-ha\"\n</code></pre> <pre><code>select health_good_rate * 100 as \"good health\" where entityName=\"hdfs:$node-ha\"\n</code></pre>"},{"location":"storage/cloudera/#history","title":"History","text":"<pre><code>select dfs_capacity as \"HDFS\",(dfs_capacity_used+dfs_capacity_used_non_hdfs) as \"Used\" where entityName=\"hdfs:$node-ha\"\n</code></pre>"},{"location":"storage/cloudera/#system","title":"System","text":""},{"location":"storage/cloudera/#cpu","title":"CPU","text":"<pre><code>select cpu_user_rate / getHostFact(numCores, 1) * 100, cpu_system_rate / getHostFact(numCores, 1) * 100, cpu_nice_rate / getHostFact(numCores, 1) * 100, cpu_iowait_rate / getHostFact(numCores, 1) * 100, cpu_irq_rate / getHostFact(numCores, 1) * 100, cpu_soft_irq_rate / getHostFact(numCores, 1) * 100, cpu_steal_rate / getHostFact(numCores, 1) * 100 </code></pre>"},{"location":"storage/cloudera/#ram","title":"RAM","text":"<pre><code>select swap_used, physical_memory_used, physical_memory_total WHERE hostname RLIKE \".*data.*\"\n</code></pre>"},{"location":"storage/cloudera/#user-repository","title":"User Repository","text":"<p>List user home directories :</p> <pre><code>hdfs dfs -ls /user/\n</code></pre> <p>Get user home directory acl as example : <pre><code>hdfs dfs -getfacl /user/JohnDoe\n</code></pre></p> <p>cf Hadoop cheat-sheet</p>"},{"location":"storage/db2/","title":"IBM DB2","text":""},{"location":"storage/db2/#installation","title":"Installation","text":"<p>As root</p> <p>Untar the archive file <pre><code>tar -xvf linuxx64_client.tar.gz\n</code></pre></p> <p>Install db2 <pre><code>./client/db2_install  -b /opt/db/v11.5\n</code></pre></p>"},{"location":"storage/db2/#create-user-client","title":"Create user client","text":"<pre><code>/opt/ibm/db2/v11.5/instance/db2icrt -s client lully\n</code></pre>"},{"location":"storage/db2/#migration","title":"Migration","text":"<p>As root</p> <pre><code>db2cfexp db2cfexp.log template\n</code></pre> <p>As instance user</p> <p>db2cfimp export.log</p>"},{"location":"storage/db2/#check-directories","title":"Check directories","text":"<p>Run db2 cmd as user sourced profile</p> <pre><code>list db directory\nlist node directory\n</code></pre>"},{"location":"storage/hadoop/","title":"Hadoop","text":"<p>Interact with system</p> <p>Example</p> <pre><code>hdfs dfs -mkdir /user/John\n</code></pre> <p>Deprecated way : <pre><code>hadoop fs -mkdir /user/John\n</code></pre></p>"},{"location":"storage/mariadb/","title":"MariaDB","text":""},{"location":"storage/mariadb/#install-mariadb","title":"Install MariaDB","text":"<pre><code>sudo apt update\nsudo apt install mariadb-server\nsudo mysql_secure_installation\n</code></pre>"},{"location":"storage/mariadb/#access-database-from-outside","title":"Access Database from outside","text":"<p>Open <code>/etc/mysql/mariadb.conf.d/50-server.cnf</code> and change the <code>bind-address</code> to:</p> <pre><code>...\n\nbind-address = 0.0.0.0\n\n...\n</code></pre>"},{"location":"storage/mariadb/#create-administrative-user","title":"Create Administrative User","text":"<ol> <li>Create a new user <code>newuser</code> for the host <code>localhost</code> with a new <code>password</code>:</li> </ol> <pre><code>CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';\n</code></pre> <ol> <li>Grant all permissions to the new user</li> </ol> <pre><code>GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost';\n</code></pre> <ol> <li>Update permissions</li> </ol> <pre><code>FLUSH PRIVILEGES;\n</code></pre>"},{"location":"storage/mysql/","title":"MySQL","text":"<p>Here are somes SQL tips &amp; tricks</p>"},{"location":"storage/mysql/#format","title":"Format","text":""},{"location":"storage/mysql/#pager","title":"Pager","text":"<p>Set page print as infinit :</p> <pre><code>pager less -SFIX;\n</code></pre>"},{"location":"storage/oracle/","title":"Oracle","text":"<p>Here are somes Oracle tips &amp; tricks</p>"},{"location":"storage/oracle/#spfile","title":"Spfile","text":"<p>SPFILE (Fichier de param\u00e8tres persistant) est un fichier binaire recherch\u00e9 automatiquement au d\u00e9marrage de l\u2019instance. Son nom par d\u00e9faut est spfile&lt;<code>SID</code>&gt;.ora. Il est situ\u00e9 dans $ORACLE_HOME/dbs/. Le fichier SPFILE est recommand\u00e9 par Oracle en raison de la possibilit\u00e9 de g\u00e9r\u00e9 dynamiquement de nombreux param\u00e8tres d\u2019initialisation. Il est modifi\u00e9 par le moteur Oracle. PFILE (Fichier de param\u00e8tres statique) est un fichier texte recherch\u00e9 automatiquement au d\u00e9marrage de l\u2019instance en l\u2019absence du fichier SPFILE. Il est modifi\u00e9 manuellement par le DBA. Son nom par d\u00e9faut est : init&lt;<code>SID</code>&gt;.ora et il est situ\u00e9 dans $ORACLE_HOME/dbs. Les modifications prennent effet qu\u2019apr\u00e8s le red\u00e9marrage de l\u2019instance. CR\u00c9ER UN SPFILE A PARTIR D\u2019UN PFILE Vous pouvez cr\u00e9er un fichier SPFILE \u00e0 partir d\u2019un fichier PFILE via la commande suivante (instance d\u00e9marr\u00e9e ou non) et ou le nom d\u2019instance est DBA01 : </p> <pre><code>CREATE SPFILE = \u2018$ORACLE_HOME/dbs/spfileDBA01.ora\u2019 FROM PFILE = \u2018$ORACLE_HOME/dbs/initDBA01.ora\u2018\n</code></pre>"},{"location":"storage/oracle/#control-file","title":"Control file","text":"<p>Le fichier de contr\u00f4le est un fichier binaire, il contient des informations sur la structure physique de la base. Il est cr\u00e9\u00e9 pendant la cr\u00e9ation de la base et il est modifi\u00e9 en permanence. Ce fichier doit \u00eatre toujours disponible car il est consult\u00e9; et modifi\u00e9 fr\u00e9quemment par le serveur oracle. Et il est indispensable pour la restauration de la base. Pour afficher les noms des fichiers de contr\u00f4le on utilise :</p> <pre><code>SHOW PARAMETER CONTROL_FILES\nSELECT VALUE FROM V$PARAMETER WHERE NAME='control_files';\n</code></pre>"},{"location":"storage/oracle/#redolog","title":"Redolog","text":"<p>Les fichiers Redo Logs servent \u00e0 enregistrer toutes les modifications commit\u00e9es effectu\u00e9es sur le base de donn\u00e9es. Ils servent \u00e0 prot\u00e9ger la base de donn\u00e9es dans le cas d\u2019un \u00e9chec d\u2019instance. En cas de restauration de la base de donn\u00e9es, on utilise les redo logs pour \u2018rejouer\u2019 les modifications qui ont eu lieu, les transactions valid\u00e9es (commit \u00e0 la fin de la transaction) sont enregistr\u00e9es dans les fichiers de donn\u00e9es Oracle et les transactions non valid\u00e9es, s\u2019il y en a, sont effac\u00e9es des fichiers de donn\u00e9es.</p>"},{"location":"storage/oracle/#data-base-file","title":"Data base file","text":"<p>Les fichiers physiques d\u2019une base Oracle permettent de stocker de mani\u00e8re persistante les donn\u00e9es manipul\u00e9es par Oracle.</p>"},{"location":"storage/oracle/#archive-log","title":"Archive log","text":"<p>Quand la base est en mode NOARCHIVELOG, l\u2019archivage des fichiers redo est d\u00e9sactiv\u00e9. Le fichier de contr\u00f4le indique que les groupes des fichiers redo pleins ne sont plus n\u00e9cessaires. D\u00e8s qu\u2019ils sont inactifs apr\u00e8s un log switch, le groupe sera disponible pour une r\u00e9utilisation par la LGWR . \u2192 (lgwr \u00e9crit toutes les entr\u00e9es refaites qui ont \u00e9t\u00e9 copi\u00e9es dans le tampon depuis la derni\u00e8re fois.) Le mode NOARCHIVELOG prot\u00e8ge la base contre une d\u00e9faillance d\u2019instance et non pas contre une d\u00e9faillance media. Seulement les modifications r\u00e9centes dans la base, stock\u00e9s dans les groupes de fichiers redo en ligne seront disponibles pour la restauration de la base. En mode NOARCHIVELOG, on ne peut pas sauvegarder en ligne une tablespace. Pour restaurer une base en mode NOARCHIVELOG, on est oblig\u00e9 de faire une sauvegarde compl\u00e8te quand la base est ferm\u00e9e. Quand la base est en mode ARCHIVELOG, l\u2019archivage des fichiers redo est activ\u00e9. Le fichier de contr\u00f4le de la base signale que les groupes contenant des fichiers redo pleins ne peuvent pas \u00eatre utilis\u00e9s par le process LGWR tant que les groupes n\u2019ont pas \u00e9t\u00e9 archiv\u00e9s. V\u00e9rifier s\u2019il y a pr\u00e9sence d\u2019Archive log :</p> <pre><code>archive log list\n</code></pre> <p>Conna\u00eetre la destination de chacune d\u2019entre-elles :</p> <pre><code>show parameter log_archive_dest\n</code></pre> <p>Passer en mode d'archivage (attention \u00e0 ne pas omettre de monter seulement l'instance afin d'effectuer la manipulation. Celle-ci subira donc une relance**) :</p> <pre><code>ALTER DATABASE ARCHIVELOG;\n</code></pre>"},{"location":"storage/oracle/#informations","title":"Informations","text":"<p>Conna\u00eetre les informations et version de composant oracle :</p> <pre><code>odacli describe-component\n</code></pre> <p>Conna\u00eetre le nom de la base sur laquelle on est connect\u00e9e :</p> <pre><code>show parameter name\n</code></pre> <p>Ou encore pour soucis de suret\u00e9 :</p> <pre><code>show parameter unique\n</code></pre> <p>Conna\u00eetre le owner d\u2019une table : <pre><code>select disctinct owner from all_tables;\n</code></pre></p> <p>Savoir si la base tourne ou non en SQL : <pre><code>SELECT INSTANCE_NAME, STATUS, DATABASE_STATUS FROM V$INSTANCE;\n</code></pre></p>"},{"location":"storage/oracle/#diag-tunning","title":"Diag Tunning","text":"Name Interpr\u00e9ter Syntaxe : <code>CONTROL_MANAGEMENT_PACK_ACCESS = { NONE | DIAGNOSTIC | DIAGNOSTIC+TUNING}</code> D\u00e9sactiver Passon la m\u00e9moire tampon mais aussi le spfile \u00e0 none <p>En tant que sysdba :</p> <pre><code>ALTER SYSTEM SET CONTROL_MANAGEMENT_PACK_ACCESS=NONE SCOPE=BOTH;\n</code></pre>"},{"location":"storage/oracle/#check","title":"Check","text":"<ul> <li>V\u00e9rifier s\u2019il est activ\u00e9 :</li> </ul> <pre><code>show parameter control_management_pack_access\n</code></pre> <ul> <li>Ou encore :</li> </ul> <pre><code>select display_value from v$parameter where name = 'control_management_pack_access';\n</code></pre>"},{"location":"storage/oracle/#bring-impdp","title":"Bring impdp","text":"<p>R\u00e9ccup\u00e9rer la vue sur un import en bacground :</p> <pre><code>impdp \\\"/ as sysdba\\\" ATTACH=\"SYS_IMPORT_FULL_01\"\n</code></pre>"},{"location":"storage/oracle/#global-prefs","title":"Global Prefs","text":"<p>Get Global prefs :</p> <pre><code>SELECT DBMS_STATS.get_prefs('CONCURRENT') FROM dual;\n</code></pre> Global Perfs State SQL Command True <code>DBMS_STATS.SET_GLOBAL_PREFS('CONCURRENT','TRUE');</code> False <code>DBMS_STATS.SET_GLOBAL_PREFS('CONCURRENT','FALSE');</code>"},{"location":"storage/oracle/#lsnrctl","title":"LSNRCTL","text":"<p>L\u2019utilitaire de contr\u00f4le d\u2019\u00e9coute vous permet d\u2019administrer des listeners. Vous pouvez utiliser ses commandes pour ex\u00e9cuter des fonctions de gestion de base sur un ou plusieurs listeners. En outre, vous pouvez afficher et modifier les param\u00e8tres.</p> <p>Commandes possible : - start - Stop - Status - Services - Servacls - Version - Reload - save_config - Trace - Spawn - Quit - Exit - set - show</p> <p>Effectuer un status du service listener :  Il se peut que celuic-ci ne se nomme pas LISTENER, il s\u2019agit des param\u00e8tres pas d\u00e9faut :</p> <p>lsnrctl status LISTENER</p>"},{"location":"storage/oracle/#odacli","title":"ODACLI","text":"<p>R\u00e9pertorier toutes les bases de donn\u00e9es de l\u2019appliance :</p> <p>odacli list-databases</p> <p>Afficher les d\u00e9tails de la base de donn\u00e9es :</p> <p>odacli describe-database</p> <p>Cr\u00e9er une nouvelle base de donn\u00e9es :</p> <p>odacli create-database</p> <p>Supprimer une base de donn\u00e9es :</p> <p>odacli delete-database</p> <p>R\u00e9seau :  - On trouvera les identifiants r\u00e9seau :</p> <p>odacli list-network</p> <ul> <li>On y trouve tout les d\u00e9tails de ce r\u00e9seau : :: <p>odacli describe-ntwork -i $identifiants_r\u00e9seau</p> </li> </ul>"},{"location":"storage/oracle/#oswbba","title":"OSWBBA","text":"<pre><code>java -jar /opt/oracle/oak/oswbb/oswbba.jar -i /opt/oracle/oak/oswbb/archive -b Mar 18 00:00:00 2019 -e Mar 19 00:00:00 </code></pre>"},{"location":"storage/oracle/#ressources","title":"Ressources","text":"<p>Afin de v\u00e9rifier l\u2019\u00e9tat du param\u00e8tre SESSIONS :</p> <p>SHOW parameter sessions</p>"},{"location":"storage/oracle/#processes","title":"Processes","text":"<p>PROCESSES sp\u00e9cifie le nombre maximal de processus utilisateur du syst\u00e8me d\u2019exploitation pouvant se connecter simultan\u00e9ment \u00e0 Oracle. Sa valeur doit autoriser tous les processus d\u2019arri\u00e8re-plan tels que les verrous, les processus de file d\u2019attente de travaux et les processus d\u2019ex\u00e9cution parall\u00e8les. Les valeurs par d\u00e9faut des param\u00e8tres SESSIONS et TRANSACTIONS sont d\u00e9riv\u00e9es de ce param\u00e8tre. Par cons\u00e9quent, si vous modifiez la valeur de PROCESSES, vous devez d\u00e9terminer si vous souhaitez ajuster les valeurs de ces param\u00e8tres d\u00e9riv\u00e9s. Afin de v\u00e9rifier l\u2019\u00e9tat du param\u00e8tre PROCESSES :</p> <p>SHOW parameter processes</p> <p>Application du param\u00e8tre :</p> <p>ALTER SYSTEM SET processes=[VALUE AS INTEGER] SCOPE=SPFILE ;</p>"},{"location":"storage/oracle/#transactions","title":"Transactions","text":"<p>TRANSACTIONS sp\u00e9cifie le nombre maximal de transactions simultan\u00e9es. Des valeurs plus \u00e9lev\u00e9es augmentent la taille du SGA et peuvent augmenter le nombre de segments de restauration allou\u00e9s. La valeur par d\u00e9faut est sup\u00e9rieure \u00e0 SESSIONS (et \u00e0 son tour, PROCESSES) pour permettre les transactions r\u00e9cursives.</p>"},{"location":"storage/oracle/#verifier-les-parametres","title":"V\u00e9rifier les param\u00e8tres","text":"<p>Afin de v\u00e9rifier l\u2019\u00e9tat du param\u00e8tre TRANSACTIONS :</p> <p>SHOW parameter transactions</p> <p>Application du param\u00e8tre :</p> <p>ALTER SYSTEM SET transactions=[VALUE AS INTEGER] SCOPE=SPFILE ;</p> <p>\u26a0 Application des param\u00e8tres : Afin d\u2019appliquer des param\u00e8tres modifi\u00e9s dans le spfile, un relance de l\u2019instance sera requis : </p> <pre><code>shutdown immediate\nstartup\n</code></pre>"},{"location":"storage/oracle/#account","title":"Account","text":"<p>D\u00e9bloquer des compte v\u00e9rouill\u00e9 :</p> <pre><code>SQL&gt; conn / AS sysdba\nConnected.\nSQL&gt; ALTER USER $USER BY ******** account UNLOCK;\nUSER altered.\nSQL&gt; ALTER USER $USER IDENTIFIED BY ******** account UNLOCK;\nUSER altered.\n</code></pre>"},{"location":"storage/oracle/#sqlplus","title":"SQLPLUS","text":"<p>Param\u00e9trage de l\u2019interface sqlplus :</p>"},{"location":"storage/oracle/#linesize","title":"linesize","text":"<p>La longueur des lignes par d\u00e9faut 80 caract\u00e8res :</p> <pre><code>set linesize 200\n</code></pre>"},{"location":"storage/oracle/#col","title":"col","text":"<p>Il d\u00e9fini un format de sortie pour une colonne particuli\u00e8re :</p> <pre><code>col table_name for a20\n</code></pre>"},{"location":"storage/oracle/#set-pause-on","title":"set pause on","text":"<p>Permet une attente de RETURN pour faire d\u00e9filer les lignes suivantes ( comme la commande more).</p>"},{"location":"storage/oracle/#spool","title":"spool","text":"<p>La sortie standard et d\u2019erreur est redirig\u00e9e dans le fichier indiqu\u00e9 dans la commande. La commande \u201cspool off\u201d ferme le fichier. Utiliser la commande <code>SQL **start** or **@**</code> pour effectuer les script tel que .sql</p>"},{"location":"storage/oracle/#statspack","title":"STATSPACK","text":""},{"location":"storage/oracle/#analyser","title":"Analyser","text":"<p>Mise en forme du resultat :</p> <pre><code>col OWNER format a10\ncol SEGMENT_NAME format a60\ncol SEGMENT_TYPE format a15\nset pagesize 1000\n\nselect owner,segment_name,segment_type,bytes/1024/1024 from dba_segments where tablespace_name = 'STATSPACK_TBS' and segment_type = 'TABLE' order by bytes desc;\n</code></pre>"},{"location":"storage/oracle/#corriger","title":"Corriger","text":""},{"location":"storage/oracle/#1-purge-statspack","title":"1. Purge STATSPACK","text":"<p>Renseigner la plage d'id \u00e0 purger :</p> <pre><code>DEFINE losnapid=1    -- low snap id\nDEFINE hisnapid=2    -- high snap id\n@?/rdbms/admin/sppurge.sql\n</code></pre>"},{"location":"storage/oracle/#2-move-table","title":"2. Move table","text":"<p>How to move dba_segments :</p> <pre><code>select 'alter table '||owner||'.'||segment_name||' move;' from dba_segments where tablespace_name = 'STATSPACK_TBS' and segment_type = 'TABLE' order by bytes desc;\n</code></pre>"},{"location":"storage/oracle/#3-rebuild-index","title":"3. Rebuild Index","text":"<p>How to rebuild dba_indexes :</p> <pre><code>select 'alter index '||owner||'.'||index_name||' rebuild;' from dba_indexes where status = 'UNUSABLE';\n</code></pre>"},{"location":"storage/oracle/#tnsname","title":"TNSNAME","text":"<p>Comment la v\u00e9rifier :</p> <pre><code>[oracle@oda ~]# env | grep TNS\nTNS_ADMIN=/backup/TNS\n</code></pre> <p>Le fichier est donc dans <code>/backup/TNS/tnsname.ora</code>.</p>"},{"location":"storage/oracle/#configuration","title":"Configuration:","text":"<p>Voici un exemple de configuration :</p> <pre><code>(DESCRIPTION =\n(ADDRESS = (PROTOCOL = TCP)(HOST = ``iP de la machine``)(PORT = 1521))\n\n(CONNECT_DATA =\n(SERVER = DEDICATED)\n(SERVICE_NAME = ``Nom de la base``)  )\n\n)\n</code></pre>"},{"location":"storage/oracle/#tablespace","title":"Tablespace","text":"<p>Know the tablesapces size :</p> <pre><code>set line 1000\nset pagesize 100\ncol \"Tablespace\" FOR a22\ncol \"Used MB\" FOR 99,999,999\ncol \"Free MB\" FOR 99,999,999\ncol \"Total MB\" FOR 99,999,999\n\nSELECT df.tablespace_name \"Tablespace\",\ntotalusedspace \"Used MB\",\n(df.totalspace - tu.totalusedspace) \"Free MB\",\ndf.totalspace \"Total MB\",\nround(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace))\"Pct. Free\",\ndf.MAX_SIZE/1024/1024/1024 \"Max Size Go\"\nFROM\n(SELECT tablespace_name,\nround(SUM(bytes) / 1048576) TotalSpace, sum(decode(AUTOEXTENSIBLE, 'YES', MAXBYTES, BYTES)) MAX_SIZE\nFROM dba_data_files GROUP BY tablespace_name) df,\n(SELECT round(SUM(bytes)/(1024*1024)) totalusedspace, tablespace_name\nFROM dba_segments GROUP BY tablespace_name) tu\nWHERE df.tablespace_name = tu.tablespace_name;\n</code></pre>"},{"location":"tool/freeipa/","title":"Free IPA","text":""},{"location":"tool/freeipa/#hostname","title":"Hostname","text":"<p>echo \"ldap{01,02}.home.test ldap{1,2}\" &gt; /etc/hostname</p>"},{"location":"tool/freeipa/#firewall","title":"Firewall","text":"<p>firewall-cmd --add-service=freeipa-ldap{,s} --permanent firewall-cmd --reload</p>"},{"location":"tool/freeipa/#freeipa-servdns-packages","title":"FreeIPA serv{dns} packages","text":"<p>yum install ipa-server ipa-server-dns</p>"},{"location":"tool/freeipa/#freeipa-setup","title":"FreeIPA setup","text":"<p>ipa-server-install</p> <p>ou</p> <pre><code>ipa-server-install -U -p user -a password --ip-address=ip -n fqdn -r FQDN --hostname=${hostname -f} --setup-dns --auto-reverse\n</code></pre>"},{"location":"tool/freeipa/#autau-create-home-directory","title":"Autau create home directory","text":"<p>authconfig --enablemkhomedir --update</p>"},{"location":"tool/freeipa/#check-access","title":"Check access","text":"<p>ipactl status</p>"},{"location":"tool/freeipa/#kerebros-token-admin","title":"Kerebros token : admin","text":"<p>kinit admin klist</p>"},{"location":"tool/freeipa/#steps","title":"Steps","text":""},{"location":"tool/freeipa/#1","title":"1","text":"<p>nmtui -&gt; hostname ldap0{1,2}.ipa.test</p>"},{"location":"tool/freeipa/#2","title":"2","text":"<p>echo \"$(hostname -I) $(hostname -f) ldap0{1,2}\" &gt;&gt; /etc/hosts</p>"},{"location":"tool/freeipa/#3","title":"3","text":"<p>firewall-cmd --add-service=freeipa-ldap{,s} --permanent firewall-cmd --reload</p>"},{"location":"tool/freeipa/#4","title":"4","text":"<p>yum install freeipa-server ipa-server-dns</p>"},{"location":"tool/freeipa/#5","title":"5","text":"<p>ipa-server-install</p>"},{"location":"tool/freeipa/#6","title":"6","text":"<p>kinit admin ipa user-add ipa passwrd yum install ipa-server hostnamctl set-hostname freeipa.sboistel.lan ipa-server-install --setup-dns</p>"},{"location":"tool/guacamole/","title":"Guacamole","text":"<p>Apache Guacamole is a clientless remote desktop gateway.  It supports standard protocols like VNC, RDP, and SSH.</p> <p>We call it clientless because no plugins or client software are required. Thanks to HTML5, once Guacamole is installed on a server, all you need to access your desktops is a web browser.</p>"},{"location":"tool/guacamole/#server","title":"Server","text":""},{"location":"tool/guacamole/#requiere-depedences","title":"Requiere depedences","text":""},{"location":"tool/guacamole/#aptdebubuntu","title":"APT:DEB/Ubuntu","text":"<pre><code>apt install libcairo2-dev libtool-bin libossp-uuid-dev\n</code></pre>"},{"location":"tool/guacamole/#optional-depedences","title":"Optional depedences","text":"<ul> <li>APT:DEB/Ubuntu</li> </ul> <pre><code>apt install libavcodec-dev libavformat-dev libavutil-dev libswscale-dev freerdp2-dev libpango1.0-dev libssh2-1-dev  libtelnet-dev libvncserver-dev libwebsockets-dev libpulse-dev libssl-dev libvorbis-dev libwebp-dev\n</code></pre>"},{"location":"tool/guacamole/#obtain-code","title":"Obtain code","text":"<ul> <li>APT:DEB/Ubuntu</li> </ul> <pre><code>apt install git\n</code></pre> <p>Donwload the guacamole server repository: <pre><code>git clone &lt;git://github.com/apache/guacamole-server.git&gt;\n</code></pre></p>"},{"location":"tool/guacamole/#build-process","title":"Build process","text":"<pre><code>cd guacamole-server\nautoreconf -fi\n</code></pre> <pre><code>./configure --with-init-dir=/etc/init.d --enable-allow-freerdp-snapshots\nmake\n</code></pre>"},{"location":"tool/guacamole/#installation","title":"Installation","text":"<pre><code>make install\nldconfig\n</code></pre>"},{"location":"tool/guacamole/#guest-agent","title":"Guest agent","text":""},{"location":"tool/guacamole/#requierement","title":"Requierement","text":"<ul> <li>APT:DEB/Ubuntu</li> </ul> <pre><code>apt install git maven </code></pre> <ul> <li>RPM:Fedora/Centos/Rhel:</li> </ul> <pre><code>yum install git maven </code></pre> <p>Donwload the guacamole client repository <pre><code>git clone &lt;git://github.com/apache/guacamole-client.git&gt;\nmvn package\n</code></pre></p> <p>Source : https://kifarunix.com/install-apache-guacamole-on-ubuntu-21-04/</p>"},{"location":"tool/guacamole/#server-installation","title":"Server Installation","text":"<p>Update : <pre><code>apt update\n</code></pre></p> <p>Software needed : <pre><code>apt install build-essential libcairo2-dev libpng-dev libtool-bin libossp-uuid-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev freerdp2-dev libpango1.0-dev libssh2-1-dev libvncserver-dev libtelnet-dev libssl-dev libvorbis-dev libwebp-dev\n</code></pre></p>"},{"location":"tool/guacamole/#guacamole-server","title":"Guacamole Server","text":""},{"location":"tool/guacamole/#downlaod","title":"Downlaod","text":"<pre><code>cd /usr/src/\nwget &lt;https://downloads.apache.org/guacamole/1.3.0/source/guacamole-server-1.3.0.tar.gz&gt;\ntar xzvf guacamole-server-1.3.0.tar.gz\n</code></pre>"},{"location":"tool/guacamole/#configuration","title":"Configuration","text":"<p>For more configure options, run, <code>./configure --help</code></p>"},{"location":"tool/guacamole/#verifying-if-anything-is-missing","title":"Verifying if anything is missing","text":"<pre><code>cd guacamole-server-1.3.0\n./configure --with-init-dir=/etc/init.d\n</code></pre>"},{"location":"tool/netbox/","title":"IPAM - Netbox","text":"<p>NetBox is an infrastructure resource modeling (IRM) application designed to empower network automation. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. NetBox is made available as open source under the Apache 2 license. It encompasses the following aspects of network management:</p> <ul> <li>IP address management (IPAM) - IP networks and addresses, VRFs, and VLANs</li> <li>Equipment racks - Organized by group and site</li> <li>Devices - Types of devices and where they are installed</li> <li>Connections - Network, console, and power connections among devices</li> <li>Virtualization - Virtual machines and clusters</li> <li>Data circuits - Long-haul communications circuits and providers</li> <li>Secrets - Encrypted storage of sensitive credentials</li> </ul>"},{"location":"tool/netbox/#how-to-install-netbox","title":"How to install netbox","text":""},{"location":"tool/netbox/#requieste","title":"Requieste","text":"<p>yum install git</p>"},{"location":"tool/pi-hole/","title":"Pi-Hole","text":""},{"location":"tool/pi-hole/#requirement","title":"Requirement","text":"<p>Set static iP @</p>"},{"location":"tool/pi-hole/#installation","title":"Installation","text":"<p>Installing packages</p> <pre><code>apt install curl\n</code></pre> <p>Download &amp; run the installation file</p> <pre><code>curl -sSL https://install.pi-hole.net | bash\n</code></pre>"},{"location":"tool/pi-hole/#configuration","title":"Configuration","text":"<p>Change the main password</p> <pre><code>pihole -a -p\n</code></pre>"},{"location":"tool/readme/","title":"README","text":""},{"location":"tool/rhel_idm/","title":"Red Hat Identity Management (IdM)","text":""},{"location":"tool/rhel_idm/#commandes","title":"Commandes","text":"<p>Show $USER  <pre><code>ipa user-show monuser --all\n</code></pre></p>"},{"location":"tool/rhel_idm/#client","title":"Client","text":"<p>Add Client : <pre><code>ipa-client-install --domain=dnsname --server=fqdn --realm=DNSNAME --mkhomedir --ntp-server=iP1 --ntp-server=iP2\n</code></pre></p>"},{"location":"tool/rundeck/","title":"Rundeck","text":"<p>Rundeck is runbook automation that gives you and your colleagues self-service access to the processes and tools they need to get their job done.</p>"},{"location":"tool/rundeck/#installation","title":"Installation","text":""},{"location":"tool/rundeck/#ubuntu-or-debian-disto","title":"Ubuntu or Debian disto","text":"<p>Community version</p>"},{"location":"tool/rundeck/#java","title":"Java","text":"<p>Warning</p> <p>Rundeck depends on\u00a0Java 11\u00a0or\u00a0Java 8. The\u00a0Java 14\u00a0packages will satisfy this dependency however Rundeck will not function properly with them. It is recommended to install the\u00a0<code>openjdk-11-jre-headless</code>\u00a0package manually.</p> <pre><code>sudo apt-get install openjdk-11-jre-headless\n</code></pre>"},{"location":"tool/rundeck/#quick-installation","title":"Quick installation","text":"<pre><code>curl https://raw.githubusercontent.com/rundeck/packaging/main/scripts/deb-setup.sh 2&gt; /dev/null | sudo bash -s rundeck\n</code></pre>"},{"location":"tool/rundeck/#manual-installation","title":"Manual installation","text":"<p>Bring signed keys :</p> <pre><code>curl -L https://packages.rundeck.com/pagerduty/rundeck/gpgkey | sudo apt-key add -\n</code></pre> <p>Create new sources list  <code>/etc/apt/sources.list.d/rundeck.list</code> :</p> <pre><code>deb https://packages.rundeck.com/pagerduty/rundeck/any/ any main\ndeb-src https://packages.rundeck.com/pagerduty/rundeck/any/ any main\n</code></pre> <p>Now, lets install</p> <p>Download package if relavant from the download page</p> <pre><code>sudo apt update\nsudo apt install rundeck\n</code></pre>"},{"location":"tool/rundeck/#post-installation","title":"Post Installation","text":""},{"location":"tool/rundeck/#url","title":"URL ?","text":"<p>Change the URL into the <code>/etc/rundeck</code> directory  &gt; might be run as root</p> <p>Replace the 10..x by your iP</p> <pre><code>sed -i 's/localhost/10..x/g' rundeck-config.properties framework.properties\n</code></pre>"},{"location":"tool/rundeck/#service","title":"Service","text":"<p>Enable the <code>rundeckd</code> service</p> <pre><code>sudo systemctl enable rundeckd\n</code></pre> <p>Start the <code>rundeckd</code> service</p> <pre><code>sudo systemctl start rundeckd\n</code></pre> <p>To verify that the service started correctly, tail the logs:</p> <pre><code>tail -f /var/log/rundeck/service.log\n</code></pre> <p>Copied!</p> <p>The service is ready once you see something similar to:</p> <pre><code>Grails application running at http://localhost:4440 in environment: production\n</code></pre> <p>Yes there is locahost in the log I know ...</p>"},{"location":"tool/rundeck/#logging-in-for-the-first-time","title":"Logging in for the first time","text":"<ol> <li>Navigate to\u00a0http://10..x:4440/\u00a0(open new window) in a browser.</li> <li>Log in with the username\u00a0admin\u00a0and password\u00a0admin</li> </ol> <p>Rundeck is now up and running !</p>"},{"location":"tool/sshs/","title":"sshs","text":"<p>Terminal user interface for SSH. It uses <code>~/.ssh/config</code> to list and connect to hosts.</p> <p></p>"},{"location":"tool/sshs/#requirements","title":"Requirements","text":"<p>You need to have <code>ssh</code> installed and accessible from your terminal.</p>"},{"location":"tool/sshs/#how-to-install","title":"How to install","text":""},{"location":"tool/sshs/#homebrew","title":"Homebrew","text":"<pre><code>brew install sshs\n</code></pre>"},{"location":"tool/sshs/#chocolatey","title":"Chocolatey","text":"<p>Thanks to Jakub Lev\u00fd for maintaining this package on Chocolatey.</p> <pre><code>choco install sshs\n</code></pre>"},{"location":"tool/sshs/#from-releases","title":"From releases","text":"<p>Releases contains prebuilt binaries for Linux, macOS and Windows. You can download them at https://github.com/quantumsheep/sshs/releases.</p>"},{"location":"tool/sshs/#from-sources","title":"From sources","text":"<pre><code>git clone https://github.com/quantumsheep/sshs.git\ncd sshs\nmake\nmake install\n</code></pre> <p>You can check the main repository : https://github.com/quantumsheep/sshs</p>"},{"location":"tool/ui-path/","title":"UI-path","text":"<p>Bri\u00e8ve liste de software :</p> <ul> <li>UI Path</li> <li>Automation Anywhere</li> <li>Blue prism</li> <li>Microsoft Power automate</li> </ul> <p>RPA (Robotic Process Automation) : </p> <ul> <li>Bot (logiciel, digital worker)</li> <li>Soft/wrokflow/processus</li> <li>Pilot\u00e9 via un orchestrator  (Fournit par le prestataire. Ex UIPath)</li> </ul> <p>Deux type d'automation :</p> <ul> <li>Attended </li> <li>Unattended</li> </ul>"},{"location":"tool/ui-path/#ide","title":"IDE","text":"<p>UiPath Studio Pro</p>"},{"location":"tool/ui-path/#language","title":"Language","text":"<p>List of project language :</p> <ul> <li>VB</li> <li>VB.Net</li> <li>C++</li> <li>C#w</li> </ul>"},{"location":"tool/vnc-tiger/","title":"VNC Tiger","text":""},{"location":"tool/vnc-tiger/#vnc-session","title":"VNC Session","text":"<p>How to create new VNC Session ?</p>"},{"location":"tool/vnc-tiger/#change-the-vncpassword","title":"Change the VNCpassword","text":"<pre><code>vncpassword\n</code></pre>"},{"location":"tool/vnc-tiger/#directory","title":"Directory","text":"<p>Move to the session direcotry :</p> <pre><code>cd /etc/systemd/system\n</code></pre>"},{"location":"tool/vnc-tiger/#session-file","title":"Session file","text":"<p>Copy old vncserver.service file to a new one : <pre><code>cp [vncserver@{N\u00b0}.service](mailto:vncserver@{N\u00b0}.service) vncserver@:{New N\u00b0}.service\n</code></pre></p> <p>Replace : <pre><code>sed -i 's/olduser/newuser/g' vncserver@:{New N\u00b0}.service\n</code></pre></p>"},{"location":"tool/vnc-tiger/#service","title":"Service","text":"<p>Enable the service : <pre><code>systemctl enable vncserver@:{New N\u00b0}.service\n</code></pre></p>"},{"location":"tool/vscode/","title":"VSCode","text":"<ul> <li>MacOS vscode keyboard shortcuts</li> <li>Howto vscode custom shortcuts</li> <li>Learn vscode keyboard shortcuts</li> </ul>"},{"location":"tool/vscode/#side-menu","title":"Side Menu","text":"shortcut description \u2318 + B Hide show side menu \u2318 + \u21e7 + E Explorer window \u2318 + \u21e7 + F Find window \u2318 + \u21e7 + J Find in files window \u2303 + \u21e7 + G Git window \u2318 + \u21e7 + D Debug window \u2318 + \u21e7 + X Extension window"},{"location":"tool/vscode/#multi-cursor-editing","title":"Multi-Cursor Editing","text":"shortcut description \u2318 + \u2325 + \u2193 add a new cursor below \u2325 + Click add a new cursor at the mouse click \u2318 + \u21e7 + L add new cursor behind all instances of a word"},{"location":"tool/vscode/#split-editor","title":"Split editor","text":"shortcut description \u2318 + \\ split"},{"location":"tool/vscode/#split-window-focusing","title":"Split Window focusing","text":"shortcut description \u2318 + 0 explorer panel \u2318 + 1 1st window split window \u2318 + 2 2nd window split window \u2303 + ~ terminal window ^ + tab switch between tabs \u2318 + ~ switch between VS code editor windows"},{"location":"tool/vscode/#intellisense","title":"IntelliSense","text":"shortcut description \u2303 + Space to invoke IntelliSense"},{"location":"tool/vscode/#line-action","title":"Line Action","text":"shortcut description \u21e7 + \u2325 + \u2193 copy the line and insert below \u21e7 + \u2325 + \u2191 copy the line and insert above \u2325 + \u2193 move entire line below \u2325 + \u2191 move entire line above \u2318 + \u21e7 + K delete entire line"},{"location":"tool/vscode/#rename-refactoring","title":"Rename Refactoring","text":"shortcut description F2 (Fn + F2) Rename Symbol in the current project Right Mouse Click -&gt; Rename Symbol Rename Symbol in the current project"},{"location":"tool/vscode/#formatting","title":"Formatting","text":"shortcut description \u21e7 + \u2325 + F format entire document \u2318 + K and \u2318 F format selected text"},{"location":"tool/vscode/#transform-selected","title":"Transform selected","text":"shortcut description ^ + \u21e7 + \u2325 + L transform selected to lower ^ + \u21e7 + \u2325 + U transform selected to upper ^ + \u21e7 + \u2325 + S transform selected to snake ^ + \u21e7 + \u2325 + T transform selected to titelcase"},{"location":"tool/vscode/#code-folding","title":"Code Folding","text":"shortcut description \u2318 + \u2325 + [ fold \u2318 + \u2325 + ] unfold \u2318 K and \u2318 0 fold all \u2318 K and \u2318 J unfold all \u2318 K and \u2318 1 fold 1 level \u2318 K and \u2318 2 fold 2 levels \u2318 K and \u2318 5 fold 5 levels"},{"location":"tool/vscode/#errors-and-warnings","title":"Errors and Warnings","text":"shortcut description F8 navigate across errors"},{"location":"tool/vscode/#code-server","title":"Code Server","text":"<p>/lib/systemd/system/code-server.service</p> <pre><code>[Unit]\nDescription=code-server\nAfter=nginx.service\n\n[Service]\nType=simple\nUser=lully\nExecStart=/usr/local/bin/code-server serve\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"tool/vscode/#sources","title":"Sources","text":"<ul> <li>https://code.visualstudio.com/docs/remote/vscode-server</li> <li>https://github.com/coder/code-server</li> </ul>"},{"location":"tool/wikijs/","title":"Wiki JS","text":"<p>Getting started with a Wiki.js installation on Linux</p> <p>Before going any further, make sure your system meets all the requirements.</p> <p>Looking for a complete, easy step-by-step installation guide, including all dependencies and an auto-updater? Check out the Ubuntu-based installation guide. {.is-info}</p>"},{"location":"tool/wikijs/#install","title":"Install","text":"<ol> <li>Download the latest version of Wiki.js</li> </ol> <pre><code>wget https://github.com/Requarks/wiki/releases/latest/download/wiki-js.tar.gz\n</code></pre> <ol> <li>Extract the package to the final destination of your choice</li> </ol> <pre><code>mkdir wiki\ntar xzf wiki-js.tar.gz -C ./wiki\ncd ./wiki\n</code></pre> <ol> <li>Rename the sample config file to <code>config.yml</code></li> </ol> <pre><code>mv config.sample.yml config.yml\n</code></pre> <ol> <li>Edit the config file and fill in your database and port settings (Configuration Reference)</li> </ol> <pre><code>nano config.yml\n</code></pre> <ol> <li>For SQLite installations only: (skip this step otherwise) Fetch native bindings for SQLite3</li> </ol> <pre><code>npm rebuild sqlite3\n</code></pre> <ol> <li>Run Wiki.js</li> </ol> <pre><code>node server\n</code></pre> <ol> <li> <p>Wait until you are invited to open to the setup page in your browser.</p> </li> <li> <p>Complete the setup wizard to finish the installation.</p> </li> </ol>"},{"location":"tool/wikijs/#run-as-service","title":"Run as service","text":"<p>There are several solutions to run Wiki.js as a background service. We'll focus on systemd in this guide as it's available in nearly all linux distributions.</p> <ol> <li> <p>Create a new file named <code>wiki.service</code> inside directory <code>/etc/systemd/system</code>.   <pre><code>nano /etc/systemd/system/wiki.service\n</code></pre></p> </li> <li> <p>Paste the following contents (assuming your wiki is installed at <code>/var/wiki</code>):</p> </li> </ol> <pre><code>[Unit]\nDescription=Wiki.js\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/usr/bin/node server\nRestart=always\n# Consider creating a dedicated user for Wiki.js here:\nUser=nobody\nEnvironment=NODE_ENV=production\nWorkingDirectory=/var/wiki\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <ol> <li> <p>Save the service file (CTRL+X, followed by Y).</p> </li> <li> <p>Reload systemd:</p> </li> </ol> <pre><code>systemctl daemon-reload\n</code></pre> <ol> <li>Run the service:</li> </ol> <pre><code>systemctl start wiki\n</code></pre> <ol> <li>Enable the service on system boot.</li> </ol> <pre><code>systemctl enable wiki\n</code></pre> <p>Note: You can see the logs of the service using <code>journalctl -u wiki</code></p> <p>{.align-abstopright}</p>"},{"location":"windows/account/","title":"Account","text":""},{"location":"windows/account/#how-to-change-user-account","title":"How to change user account","text":"<p>Let's take a look to how to change user password without any access through Windows ISO. Boot on Windows 10 ISO On the language screen, chose your language and hit SHIFT+F10</p>"},{"location":"windows/account/#get-logical-volume-inforations","title":"Get Logical Volume inforations","text":"<p>When the cmd terminal is oppened, list Diske Caption and Volume Name :</p> <pre><code>wmic logicaldisk get caption, VolumeName\n</code></pre> <p>Move to the Disk you want (letter found with the previous command)</p> <pre><code>d:\n</code></pre> <p>Go to the system32 folder</p> <pre><code>cd windows\\system32\n</code></pre>"},{"location":"windows/account/#utilman","title":"Utilman","text":"<p>Use utilman despite off cmd.exe</p> <pre><code>ren utilman.exe utilman.exe.bak\nren cmd.exe utilman.exe\n</code></pre> <p>Reboot</p> <pre><code>wpeutil reboot\n</code></pre>"},{"location":"windows/account/#change-user-password","title":"Change user password","text":"<p>After rebooting, clic on accessibility icon</p>"},{"location":"windows/account/#change-password","title":"Change password","text":"<p>Change the user password</p> <pre><code>Example :\nnet user admin root\n\nnet user $USER pass\n</code></pre>"},{"location":"windows/account/#active-user","title":"Active user","text":"<p>Active user</p> <pre><code>net user $USER /active:yes\n</code></pre> <p>Reboot</p> <pre><code>wpeutil reboot\n</code></pre> <p>Replace utilman despite off cmd.exe</p> <pre><code>ren utilman.exe cmd.exe\nren utilman.exe.bak utilman.exe\n</code></pre>"},{"location":"windows/apps/","title":"Apps","text":""},{"location":"windows/apps/#kill-task","title":"Kill task","text":"<p>How to force killing task ?</p> <pre><code>taskkill /F /IM OpenWith.exe /T\n</code></pre>"},{"location":"windows/apps/#google-chrome","title":"Google Chrome","text":""},{"location":"windows/apps/#kiosk-mode","title":"kiosk mode","text":"<p>Ouvrir une page web avec Google Chrome dans une page d\u00e9tach\u00e9e: </p> <pre><code>Chrome.exe --app=http://\n</code></pre>"},{"location":"windows/kms/","title":"Key Management Services (KMS)","text":"<p>KMS uses a client-server model to active Windows clients and is used for volume activation on your local network.</p> <p>KMS clients connect to a KMS server, called the KMS host, for activation.</p> <p>The KMS clients that a KMS host can activate are dependent on the host key used to activate the KMS host.</p> <p>This article walks you through the steps you need to create a KMS host.</p> <p>To learn more about KMS and the initial planning considerations, see Key Management Services (KMS) activation planning.</p>"},{"location":"windows/kms/#prerequisites","title":"Prerequisites","text":"<ul> <li>A computer running Windows Server or Windows.     A KMS host running on a Windows Server operating system can activate computers running both server and client operating systems, however a KMS host running on a Windows client operating system can only activate computers also running client operating systems.</li> <li>The user account you use must be a member of the Administrators group on the KMS host.</li> <li>A KMS host key for your organization. You can get this key from the Product Keys section of the Volume Licensing Service Center.</li> </ul>"},{"location":"windows/powershell/","title":"Powershell","text":"<p>Complex or repetitive tasks often take a great deal of administrative time. Organizations prefer to automate these tasks to reduce costs and avoid errors.</p> <p>Automation is important in the Customer Relationship Management (CRM) company example. There, you're testing your software on multiple Linux Virtual Machines (VMs) that you need to continuously delete and recreate. You want to use a PowerShell script to automate the creation of the VMs versus creating them manually each time.</p> <p>Beyond the core operation of creating a VM, you have a few more requirements for your script:</p> <ul> <li>You'll create multiple VMs, so you want to put the creation inside a loop</li> <li>You need to create VMs in three different resource groups, so the name of the resource group should be passed to the script as a parameter</li> </ul> <p>In this section, you'll see how to write and execute an Azure PowerShell script that meets these requirements.</p>"},{"location":"windows/powershell/#what-is-a-powershell-script","title":"What is a PowerShell script?","text":"<p>A PowerShell script is a text file containing commands and control constructs. The commands are invocations of cmdlets. The control constructs are programming features like loops, variables, parameters, comments, etc., supplied by PowerShell.</p> <p>PowerShell script files have a <code>.ps1</code> file extension. You can create and save these files with any text editor.</p> <p>Tip</p> <p>If you\u2019re writing PowerShell scripts under Windows, you can use the Windows PowerShell Integrated Scripting Environment (ISE). This editor provides features such as syntax coloring and a list of available cmdlets.</p> <p>The following screenshot shows the Windows PowerShell Integrated Scripting Environment (ISE) with a sample script to connect to Azure and create a virtual machine in Azure.</p> <p></p> <p>Once you've written the script, execute it from the PowerShell command line by passing the name of the file preceded by a dot and a backslash:</p> <p>PowerShell</p> <pre><code>.\\myScript.ps1\n</code></pre>"},{"location":"windows/powershell/#install-windows-update","title":"Install Windows Update","text":"<pre><code>Install-Module -Name PSWindowsUpdate\n</code></pre>"},{"location":"windows/powershell/#list-all-commands","title":"List all Commands","text":"<pre><code>Get-Command -module PSWindowsUpdate\n</code></pre> <pre><code>Get-WUInstall\n</code></pre>"},{"location":"windows/powershell/#powershell-techniques","title":"PowerShell techniques","text":"<p>PowerShell has many features found in typical programming languages. You can define variables, use branches and loops, capture command-line parameters, write functions, add comments, and so on.</p> <p>We'll need three features for our script :</p> <ul> <li>variables</li> <li>loops</li> <li>parameters</li> </ul>"},{"location":"windows/powershell/#variables","title":"Variables","text":"<p>In the last unit, you saw that PowerShell supports variables. Use $ to declare a variable and = to assign a value.</p> <p>For example :</p> <pre><code>$loc = \"East US\"\n$iterations = 3\n</code></pre> <p>Variables can hold objects. For example, the following definition sets the adminCredential variable to the object returned by the Get-Credential cmdlet.</p> <pre><code>$adminCredential = Get-Credential\n</code></pre> <p>To obtain the value stored in a variable, use the $ prefix and its name, as in the following :</p> <pre><code>$loc = \"East US\"\n$iterations = 3\n</code></pre> <p>Variables can hold objects. For example, the following definition sets the adminCredential variable to the object returned by the Get-Credential cmdlet.</p> <p>PowerShell</p> <pre><code>$adminCredential = Get-Credential\n</code></pre> <p>To obtain the value stored in a variable, use the <code>$</code> prefix and its name, as in the following:</p> <p>PowerShell</p> <pre><code>$loc = \"East US\"\nNew-AzResourceGroup -Name \"MyResourceGroup\" -Location $loc\n</code></pre>"},{"location":"windows/powershell/#loops","title":"Loops","text":"<p>PowerShell has several loop structures, including <code>For</code>, <code>Do...While</code>, and <code>For...Each</code>. The <code>For</code> loop is the best match for our needs because we'll execute a cmdlet a fixed number of times.</p> <p>The following example shows the core syntax. The example runs for two iterations and prints the value of i each time. The comparison operators are written <code>-lt</code> for \"less than\", <code>-le</code> for \"less than or equal\", <code>-eq</code> for \"equal\", <code>-ne</code> for \"not equal\", etc.</p> <p>PowerShell</p> <pre><code>For ($i = 1; $i -lt 3; $i++)\n{\n    $i\n}\n</code></pre>"},{"location":"windows/powershell/#parameters","title":"Parameters","text":"<p>When you execute a script, you can pass arguments on the command line. You can provide names for each parameter to help the script extract the values. For example:</p> <p>PowerShell</p> <pre><code>.\\setupEnvironment.ps1 -size 5 -location \"East US\"\n</code></pre> <p>Inside the script, you'll capture the values into variables. In this example, the parameters are matched by name:</p> <p>PowerShell</p> <pre><code>param([string]$location, [int]$size)\n</code></pre> <p>You can omit the names from the command line. For example:</p> <p>PowerShell</p> <pre><code>.\\setupEnvironment.ps1 5 \"East US\"\n</code></pre> <p>Inside the script, you'll rely on position for matching when the parameters are unnamed:</p> <p>PowerShell</p> <pre><code>param([int]$size, [string]$location)\n</code></pre> <p>We could take these parameters as input and use a loop to create a set of VMs from the given parameters. We'll try that next.</p> <p>The combination of PowerShell and Azure PowerShell gives you all the tools you need to automate Azure. In our CRM example, we'll be able to create multiple Linux VMs using a parameter to keep the script generic and a loop to avoid repeated code. This script allows us to execute a formerly complex operation in a single step.</p>"},{"location":"windows/readme/","title":"README","text":"<p>Windows is a group of several proprietary graphical operating system families developed and marketed by Microsoft. Each family caters to a certain sector of the computing industry.  For example, Windows NT for consumers, Windows Server for servers, and Windows IoT for embedded systems.  Defunct Windows families include Windows 9x, Windows Mobile, and Windows Phone.</p>"},{"location":"windows/storage/","title":"Storage","text":""},{"location":"windows/storage/#how-to-change-device-drive-icon","title":"How to change device drive icon ?","text":"<p>Open regedit as administrator :</p> <ul> <li>Go to <code>Ordinateur\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons</code></li> <li>Create a new key as the correspond lettre of your drive.</li> <li>Create a new sub key as <code>Defaulticon</code> :</li> </ul> <pre><code>Ordinateur\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons\\D\\Defaulticon\n</code></pre> <p>Mod the chaine containned in Defaulticon key with the full path of your <code>ico</code> file.</p>"},{"location":"windows/terminal/","title":"Windows Terminal","text":""},{"location":"windows/terminal/#install-windows-terminal","title":"Install Windows Terminal","text":"<p>Windows Store: Windows Terminal</p>"},{"location":"windows/terminal/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ol> <li> <p>Applic\u00adation commands</p> <ul> <li>ALT - F4: Close window</li> <li>CTRL - S\u00adHIFT - F: Find</li> <li>CTRL - S\u00adHIF\u00adT - SPACE: Open dropdown</li> <li>CTRL - ,: Open settings file</li> <li>ALT - ENTER - F11: Toggle full screen</li> </ul> </li> <li> <p>Tab commands</p> <ul> <li>CTRL - S\u00adHIFT - D: Duplicate tab</li> <li>CTRL - S\u00adHIFT - T: New tab</li> <li>CTRL - S\u00adHIFT - P: New tab from profile p=1..9</li> <li>CTRL - TAB: Switch to next tab</li> <li>CTRL - S\u00adHIF\u00adT - TAB: Switch to prev tab</li> <li>CTRL - ALT - N: Switch to tab n=0..9</li> </ul> </li> <li> <p>Pane commands</p> <ul> <li>ALT - SH\u00adIFT - D: Split pane optimally. Active profile</li> <li>ALT - SH\u00adIFT -  -: Split pane horizontally. Default profile</li> <li>ALT - SH\u00adIFT - +: Split pane vertically. Default profile</li> <li>ALT - SHIFT - ARROWS: Resize pane</li> <li>ALT - ARROWS: Move pane focus</li> <li>CTRL - S\u00adHIFT - W: Close innermost pane, tab, or window</li> </ul> </li> <li> <p>Clipboard commands</p> <ul> <li>CTRL - C: Copy</li> <li>CTRL - V: Paste</li> </ul> </li> <li> <p>Scrollback commands</p> <ul> <li>CTRL - S\u00adHIFT - UP: Scroll up</li> <li>CTRL - S\u00adHIF\u00adT - DOWN: Scroll down</li> <li>CTRL - S\u00adHIF\u00adT - PGUP: Scroll page up</li> <li>CTRL - S\u00adHIF\u00adT - PGDN: Scroll page down</li> </ul> </li> <li>Visual adjustment commands<ul> <li>CTRL - =: Increase font size</li> <li>CTRL -  -: Decrease font size</li> <li>CTRL - 0: Reset font size</li> </ul> </li> </ol>"},{"location":"windows/vars-env/","title":"Environment Variables in Windows","text":""},{"location":"windows/vars-env/#how-to-use-them-in-powershell","title":"How to use them in PowerShell","text":"<p>Environment Varaibles can be used in PowerShell ([[powershell]]) with the prefix <code>$env:</code>.</p>"},{"location":"windows/vars-env/#example","title":"Example","text":"<ul> <li>Variable: <code>%APPDATA%</code></li> <li>In Powershell: <code>$env:APPDATA</code></li> </ul>"},{"location":"windows/vars-env/#list-of-environment-variables","title":"List of environment variables","text":"Variable Description <code>%ALLUSERSPROFILE%</code> C:\\ProgramData <code>%APPDATA%</code> C:\\Users{username}\\AppData\\Roaming <code>%COMMONPROGRAMFILES%</code> C:\\Program Files\\Common Files <code>%COMMONPROGRAMFILES(x86)%</code> C:\\Program Files (x86)\\Common Files <code>%CommonProgramW6432%</code> C:\\Program Files\\Common Files <code>%COMSPEC%</code> C:\\Windows\\System32\\cmd.exe <code>%HOMEDRIVE%</code> C:\\ <code>%HOMEPATH%</code> C:\\Users{username} <code>%LOCALAPPDATA%</code> C:\\Users{username}\\AppData\\Local <code>%LOGONSERVER%</code> \\{domain_logon_server} <code>%PATH%</code> C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem <code>%PathExt%</code> .com;.exe;.bat;.cmd;.vbs;.vbe;.js;.jse;.wsf;.wsh;.msc <code>%PROGRAMDATA%</code> C:\\ProgramData <code>%PROGRAMFILES%</code> C:\\Program Files <code>%ProgramW6432%</code> C:\\Program Files <code>%PROGRAMFILES(X86)%</code> C:\\Program Files (x86) <code>%PROMPT%</code> $P$G <code>%SystemDrive%</code> C: <code>%SystemRoot%</code> C:\\Windows <code>%TEMP%</code> C:\\Users{username}\\AppData\\Local\\Temp <code>%TMP%</code> C:\\Users{username}\\AppData\\Local\\Temp <code>%USERDOMAIN%</code> Userdomain associated with current user. <code>%USERDOMAIN_ROAMINGPROFILE%</code> Userdomain associated with roaming profile. <code>%USERNAME%</code> {username} <code>%USERPROFILE%</code> C:\\Users{username} <code>%WINDIR%</code> C:\\Windows <code>%PUBLIC%</code> C:\\Users\\Public <code>%PSModulePath%</code> %SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\ <code>%OneDrive%</code> C:\\Users{username}\\OneDrive <code>%DriverData%</code> C:\\Windows\\System32\\Drivers\\DriverData <code>%CD%</code> Outputs current directory path. (Command Prompt.) <code>%CMDCMDLINE%</code> Outputs command line used to launch current Command Prompt session. (Command Prompt.) <code>%CMDEXTVERSION%</code> Outputs the number of current command processor extensions. (Command Prompt.) <code>%COMPUTERNAME%</code> Outputs the system name. <code>%DATE%</code> Outputs current date. (Command Prompt.) <code>%TIME%</code> Outputs time. (Command Prompt.) <code>%ERRORLEVEL%</code> Outputs the number of defining exit status of previous command. (Command Prompt.) <code>%PROCESSOR_IDENTIFIER%</code> Outputs processor identifier. <code>%PROCESSOR_LEVEL%</code> Outputs processor level. <code>%PROCESSOR_REVISION%</code> Outputs processor revision. <code>%NUMBER_OF_PROCESSORS%</code> Outputs the number of physical and virtual cores. <code>%RANDOM%</code> Outputs random number from 0 through 32767. <code>%OS%</code> Windows_NT"},{"location":"windows/windows-boot/","title":"Windows Boot","text":""},{"location":"windows/windows-boot/#how-to-restore-windows-10-mbr","title":"How to restore Windows 10 MBR","text":"<p>La d\u00e9marche consiste \u00e0 remplacer le MBR qui permet d'amorcer GRUB en lui substituant un MBR pointant sur le lanceur de Windows.</p> <p>Le remplacement du MBR est r\u00e9alis\u00e9 \u00e0 partir du disque de restauration Windows ou du CD d'installation.</p> <p>Booter depuis le CD d'installation et choisir \"R\u00e9parer ou r\u00e9cup\u00e9rer une installation de Windows\". On s\u00e9lectionnera ensuite l'installation de Windows dans la liste des choix propos\u00e9s et on saisira le mot de passe administrateur.</p> <p>Au prompt, taper :</p> <pre><code>C:\\WINDOWS&gt; fixboot\nC:\\WINDOWS&gt; fixmbr\n</code></pre> <p>La surface disque utilis\u00e9e par Fedora n'est pas automatiquement r\u00e9-allou\u00e9e . C'est l'affaire de fdsik.</p> <p>La r\u00e9allocation consiste en un nouveau formatage, sous le format vfat ou ntfs ou autre, selon le choix - si l'on souhaite r\u00e9-allouer les partitions au profit de Windows. On pourra ainsi modifier le format de tout ou partie des partitions et notamment les fusionner. fdisk existe dans l'environnement Windows (ou un programme \u00e9quivalent). On red\u00e9marrera par la commande :</p> <pre><code>C:\\WINDOWS&gt; exit\n</code></pre> <p>Restauration Grub</p> <p>Si les partitions Linux n'ont pas \u00e9t\u00e9 r\u00e9-allou\u00e9es, il est toujours possible de restaurer GRUB (et ainsi le boot sur Fedora ou Windows)</p>"},{"location":"windows/windows-system/","title":"System","text":"<p>Trouver la date d\u2019installation Windows.</p> <pre><code>systeminfo | find \"installation\"\n</code></pre> <p>Se rendre rapidement sur la page de gestion des software:  \u00c9x\u00e9cuter la commande suivante (dans invite de commande ou executer ou menu d\u00e9marr\u00e9)</p> <pre><code>Appwiz.cpl\n</code></pre>"},{"location":"windows/windows-system/#hosts-file","title":"Hosts file","text":"<p>Hosts file configuration location :</p> <pre><code>C:\\windows\\system32\\drivers\\etc\\\n</code></pre>"},{"location":"windows/windows-system/#license","title":"License","text":"<p>Temps restant disponible \u00e0 la license en cours</p> <pre><code>DISM /online /Get-CurrentEdition\nDISM /online /Get-TargetEditions\nslmgr.vbs /ipk LICENCE #\"Force\" || Dism /Online /Set-Edition:ServerDatacenter /AcceptEula /ProductKey:LICENCE\nslmgr.vbs /dlv #Check\n</code></pre>"},{"location":"windows/wsl/","title":"WSL","text":""},{"location":"windows/wsl/#backup-and-restore-wsl","title":"Backup and Restore WSL","text":""},{"location":"windows/wsl/#listing-running-distros","title":"Listing Running Distros","text":"<pre><code>wsl --list --verbose\n</code></pre>"},{"location":"windows/wsl/#startingrestarting-a-distro","title":"Starting/Restarting a Distro","text":"<pre><code>wsl --distribution DISTRO-NAME\n</code></pre>"},{"location":"windows/wsl/#terminate-a-running-distro","title":"Terminate a Running Distro","text":"<pre><code>wsl --t DISTRO-NAME\n</code></pre>"},{"location":"windows/wsl/#terminate-all-running-distros-and-wsl-process","title":"Terminate All Running Distros and WSL process","text":"<pre><code>wsl --shutdown\n</code></pre>"},{"location":"windows/wsl/#backup-a-wsl-distro","title":"Backup a WSL Distro","text":"<pre><code>wsl --export (distribution) (filename.tar)\n</code></pre>"},{"location":"windows/wsl/#restore-a-wsl-distro-from-backup","title":"Restore a WSL Distro from Backup","text":"<pre><code>wsl --import (distribution) (install location) (file location and filename)\n</code></pre>"},{"location":"windows/wsl/#symbolic-links","title":"Symbolic Links","text":""},{"location":"windows/wsl/#link-ssh-folder","title":"Link .ssh folder","text":"<pre><code>sudo ln -s /mnt/c/Users/lempa/.ssh ~/.ssh\n</code></pre>"},{"location":"windows/wsl/#link-kube-folder","title":"Link .kube folder","text":"<pre><code>sudo ln -s /mnt/c/Users/lempa/.ssh ~/.ssh\n</code></pre>"},{"location":"windows/wsl/#file-permissions","title":"File Permissions","text":"<p>Advanced settings configuration in WSL: WSL Config Parameters</p> <p>Example wsl.conf <pre><code>[automount]\nenabled = true\noptions = \"metadata,uid=1000,gid=1000,umask=077,fmask=11,case=off\"\nmountFsTab = true\n\n[interop]\nenabled = false\nappendWindowsPath = false\n</code></pre></p>"},{"location":"windows/wsl/#networking","title":"Networking","text":""},{"location":"windows/wsl/#port-forwarding","title":"Port Forwarding","text":"<p>Find IP Address <pre><code>bash.exe -c \"ifconfig eth0 | grep 'inet '\"\n</code></pre></p> <p>Add PortForwarding <pre><code>$port = 8080\n$remoteaddr = 0.0.0.0\n\nnetsh interface portproxy add v4tov4 listenport=$port connectport=$port connectaddress=$remoteaddr\n\nnetsh advfirewall firewall add rule name=$port dir=in action=allow protocol=TCP localport=$port\n</code></pre></p> <p>Delete PortForwarding <pre><code>$port = 8080\n\nnetsh interface portproxy delete v4tov4 listenport=$port\nnetsh advfirewall firewall delete rule name=$port\n</code></pre></p> <p>Show PortForwardings <pre><code>netsh interface portproxy show v4tov4\n</code></pre></p>"},{"location":"windows/wsl/#linux-desktop-in-wsl2","title":"Linux desktop in WSL2","text":"<p>With WSL2 it's possible to install and run a Linux desktop environment (XFCE). A tutorial on how to implement that, can be found here.</p>"}]}